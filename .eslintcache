[{"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js":"1","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js":"2","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js":"3","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js":"4","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js":"5","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js":"6","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js":"7","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js":"8","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js":"9","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js":"10","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js":"11","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js":"12","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js":"13","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js":"14","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js":"15","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js":"16","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js":"17","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js":"18","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js":"19","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js":"20","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js":"21","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js":"22","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js":"23","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js":"24","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js":"25","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js":"26","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js":"27","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js":"28","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js":"29","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js":"30","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js":"31","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js":"32","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js":"33","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js":"34","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js":"35","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js":"36","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js":"37","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js":"38","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js":"39","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js":"40","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js":"41","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js":"42","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js":"43","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js":"44","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js":"45","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js":"46","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js":"47","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js":"48","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js":"49","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminVideoManage.js":"50","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddVideoModal.js":"51","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/VideoDataConnect.js":"52","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/counsel/ProductCounselMain.js":"53","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AdminStoreMain.js":"54","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AreaComponent.js":"55","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddAreaModal.js":"56","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/StoreDataConnect.js":"57","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixAreaModal.js":"58","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/StoreComponent.js":"59","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddStoreModal.js":"60","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixStoreModal.js":"61","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/PageableComponent.js":"62","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreListMain.js":"63","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/layout/StoreTopLayout.js":"64","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/AreaNavComponent.js":"65","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreComponent.js":"66","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/StoreDetailMain.js":"67","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/DetailComponent.js":"68","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/PageableComponent.js":"69"},{"size":670,"mtime":1612407882854,"results":"70","hashOfConfig":"71"},{"size":362,"mtime":499162500000,"results":"72","hashOfConfig":"71"},{"size":5265,"mtime":1614836766527,"results":"73","hashOfConfig":"71"},{"size":723,"mtime":1612407882726,"results":"74","hashOfConfig":"71"},{"size":2854,"mtime":1612772389276,"results":"75","hashOfConfig":"71"},{"size":6922,"mtime":1614847854821,"results":"76","hashOfConfig":"71"},{"size":1612,"mtime":1614058291805,"results":"77","hashOfConfig":"71"},{"size":8166,"mtime":1614848345626,"results":"78","hashOfConfig":"71"},{"size":5975,"mtime":1614060286111,"results":"79","hashOfConfig":"71"},{"size":13095,"mtime":1614653984942,"results":"80","hashOfConfig":"71"},{"size":95,"mtime":1613540029246,"results":"81","hashOfConfig":"71"},{"size":6402,"mtime":1614764279823,"results":"82","hashOfConfig":"71"},{"size":6394,"mtime":1614587377550,"results":"83","hashOfConfig":"71"},{"size":1525,"mtime":1614307544495,"results":"84","hashOfConfig":"71"},{"size":586,"mtime":1612417471208,"results":"85","hashOfConfig":"71"},{"size":6407,"mtime":1614234966570,"results":"86","hashOfConfig":"71"},{"size":7743,"mtime":1614238804140,"results":"87","hashOfConfig":"71"},{"size":4545,"mtime":1614308547201,"results":"88","hashOfConfig":"71"},{"size":15213,"mtime":1614236264870,"results":"89","hashOfConfig":"71"},{"size":1556,"mtime":1612511260961,"results":"90","hashOfConfig":"71"},{"size":4589,"mtime":1613445554670,"results":"91","hashOfConfig":"71"},{"size":12763,"mtime":1614584329916,"results":"92","hashOfConfig":"71"},{"size":4984,"mtime":1612866471017,"results":"93","hashOfConfig":"71"},{"size":1227,"mtime":1613465917115,"results":"94","hashOfConfig":"71"},{"size":1803,"mtime":1612865302982,"results":"95","hashOfConfig":"71"},{"size":10394,"mtime":1614647991189,"results":"96","hashOfConfig":"71"},{"size":10580,"mtime":1614654855949,"results":"97","hashOfConfig":"71"},{"size":4373,"mtime":1614656082477,"results":"98","hashOfConfig":"71"},{"size":11984,"mtime":1614057157593,"results":"99","hashOfConfig":"71"},{"size":2774,"mtime":1613540770196,"results":"100","hashOfConfig":"71"},{"size":9532,"mtime":1614060492508,"results":"101","hashOfConfig":"71"},{"size":2176,"mtime":1614656415478,"results":"102","hashOfConfig":"71"},{"size":2099,"mtime":1614130025986,"results":"103","hashOfConfig":"71"},{"size":21248,"mtime":1614411592847,"results":"104","hashOfConfig":"71"},{"size":2567,"mtime":1614062326420,"results":"105","hashOfConfig":"71"},{"size":13568,"mtime":1614648334469,"results":"106","hashOfConfig":"71"},{"size":2784,"mtime":1614063576570,"results":"107","hashOfConfig":"71"},{"size":12123,"mtime":1614414010540,"results":"108","hashOfConfig":"71"},{"size":11760,"mtime":1614407853024,"results":"109","hashOfConfig":"71"},{"size":12760,"mtime":1614408021976,"results":"110","hashOfConfig":"71"},{"size":2703,"mtime":1614062970655,"results":"111","hashOfConfig":"71"},{"size":2955,"mtime":1614131366156,"results":"112","hashOfConfig":"71"},{"size":5022,"mtime":1614148149321,"results":"113","hashOfConfig":"71"},{"size":4415,"mtime":1614232520433,"results":"114","hashOfConfig":"71"},{"size":3192,"mtime":1614413471283,"results":"115","hashOfConfig":"71"},{"size":5801,"mtime":1614824506124,"results":"116","hashOfConfig":"71"},{"size":2941,"mtime":1614148395406,"results":"117","hashOfConfig":"71"},{"size":3574,"mtime":1614307494209,"results":"118","hashOfConfig":"71"},{"size":7460,"mtime":1614854999282,"results":"119","hashOfConfig":"71"},{"size":3613,"mtime":1614584164384,"results":"120","hashOfConfig":"71"},{"size":2520,"mtime":1614579597092,"results":"121","hashOfConfig":"71"},{"size":5188,"mtime":1614584202808,"results":"122","hashOfConfig":"71"},{"size":10734,"mtime":1614654489386,"results":"123","hashOfConfig":"71"},{"size":14189,"mtime":1614844564255,"results":"124","hashOfConfig":"71"},{"size":2732,"mtime":1614666628487,"results":"125","hashOfConfig":"71"},{"size":1903,"mtime":1614664990157,"results":"126","hashOfConfig":"71"},{"size":11794,"mtime":1614845100136,"results":"127","hashOfConfig":"71"},{"size":1895,"mtime":1614666573273,"results":"128","hashOfConfig":"71"},{"size":9881,"mtime":1614856446661,"results":"129","hashOfConfig":"71"},{"size":11507,"mtime":1614856156260,"results":"130","hashOfConfig":"71"},{"size":11551,"mtime":1614856245518,"results":"131","hashOfConfig":"71"},{"size":2941,"mtime":1614755554785,"results":"132","hashOfConfig":"71"},{"size":3202,"mtime":1614849034480,"results":"133","hashOfConfig":"71"},{"size":4162,"mtime":1614838785868,"results":"134","hashOfConfig":"71"},{"size":3958,"mtime":1614824382872,"results":"135","hashOfConfig":"71"},{"size":7037,"mtime":1614848944853,"results":"136","hashOfConfig":"71"},{"size":5525,"mtime":1614843591148,"results":"137","hashOfConfig":"71"},{"size":6230,"mtime":1614854996539,"results":"138","hashOfConfig":"71"},{"size":2941,"mtime":1614848870175,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},"1a97x7k",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"143"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"143"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"143"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"143"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"143"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"143"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"143"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"143"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"143"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"143"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"143"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"143"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"143"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"143"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"143"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"143"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"143"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"143"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"143"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":4,"source":"232","usedDeprecatedRules":"143"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"143"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"143"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"143"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"143"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"143"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"143"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"143"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"143"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"143"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"143"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"143"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"143"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"143"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"143"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"143"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"143"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"143"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"143"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"143"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"143"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"143"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js",["323"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport axios from 'axios';\n// axios.defaults.xsrfCookieName='XSRF-TOKEN';\n// axios.defaults.xsrfHeaderName='X-XSRF-TOKEN';\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["324","325"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js",["326","327","328"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport {getCookie} from '../../../handler/CookieHandler';\nimport { useEffect, useState } from 'react';\nconst Container = styled.div`\n    height:100vh;\n    padding:100px 8px;\n`;\n\nconst PageTitle = styled.div`\n    text-align:center;\n    font-size:24px;\n    font-weight:700;\n\n`;\n\nconst LoginMain = ({history}) =>{\n    const [username,setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [notLoged, setNotLoged] = useState(true);\n    useEffect(()=>{\n        console.log('em')\n        async function effectInit(){\n            await handleCheckLoged();\n        }\n        effectInit();\n    },[]);\n\n    const handleCheckLoged = async () =>{\n        await axios.get('/api/auth/check/loged')\n        .then(res=>{\n            if(res.data.message == 'success' ){\n                history.push('/admin')\n                return;\n            }else{\n                setNotLoged(false);\n            }\n        })\n    }\n\n    const handleRequestLogin = (e) =>{\n        e.preventDefault();\n        axios.post('/api/auth/login',{\n                username:username,\n                password:password\n            },\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n        .then(res=>{\n            history.push('/admin')\n        })\n    }\n\n    const loginValueChange = () =>{\n        return{\n            username: function(e){\n                setUsername(e.target.value)\n            },\n            password: function(e){\n                setPassword(e.target.value)\n            }\n        }\n    }\n    return(\n        <Container className='container'>\n            {notLoged ? <></>:\n                <>\n                    <PageTitle>관리자 페이지 로그인</PageTitle>\n                    <form onSubmit={(e)=>handleRequestLogin(e)}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_username\">관리자 아이디</label>\n                            <input type=\"text\" className=\"form-control\" id=\"i_admin_username\" aria-describedby=\"emailHelp\" onChange={(e)=>loginValueChange().username(e)} value={username}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_password\">관리자 패스워드</label>\n                            <input type=\"password\" className=\"form-control\" id=\"i_admin_password\" onChange={(e)=>loginValueChange().password(e)} value={password}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">로그인</button>\n                    </form>\n                </>\n            }\n            \n        </Container>\n    );\n}\n\nexport default LoginMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js",["329","330","331","332","333","334","335"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js",["336","337"],"import styled from 'styled-components';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst Container = styled.div`\n    .thumbs { \n        text-align: center;\n    }\n    .slide .pcy-banner-image{\n        max-height:900px;\n        object-fit: cover;\n    }\n    // 이미지 크기 최적화 사이즈 1920x850\n    @media only screen and (max-width: 768px){\n        .slide .pcy-banner-image{\n            height:45vh;\n            object-fit: cover;\n        }\n    }\n`;\n\nconst BannerCarouselFullSize = (props) => {\n    const {\n        banners\n    } = props;\n    return (\n        <Container>\n            <Carousel\n                autoPlay={true}\n                interval={4000}\n                infiniteLoop={true}\n                dynamicHeight={true}\n                showIndicators={true}\n                showThumbs={false}\n                showStatus={true}\n                stopOnHover={false}\n                transitionTime={1000}\n            >\n                {\n                    banners.length>0 && banners.map((r)=>{\n                        return(\n                            <div key={r.id}>\n                                <img className=\"pcy-banner-image\" src={r.imageUrl} />\n                            </div>        \n                        )\n                    })\n                }\n                \n            </Carousel>\n        </Container>\n    )\n}\n\nexport default BannerCarouselFullSize;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js",["338","339","340","341","342"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js",["343","344"],"import { useState } from 'react';\nimport styled from 'styled-components';\n\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\n// data connect\nimport { counselingDataConnect } from '../../data_connect/CounselingDataConnect';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\nconst ApplyFormModal = (props) => {\n    const {\n        dialogOpen\n    } = props;\n\n    const {\n        mainHandleDialogControl\n    } = props;\n\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [privacyAgreeChecked, setPrivacyAgreeChecked] = useState(false);\n\n    const thisHandleValueOnChange = () => {\n        return {\n            changeCounselingType: function(e){\n                setCounselingType(e.target.value);\n            },\n            changeApplierName: function (e) {\n                setApplierName(e.target.value);\n            },\n            changeApplierPhone: function (e) {\n                setApplierPhone(e.target.value);\n            },\n            changeApplierArea: function (e) {\n                setApplierArea(e.target.value);\n            },\n            changePrivacyAreeChecked: function(e){\n                setPrivacyAgreeChecked(e.target.checked);\n            },\n            allClear: function () {\n                setApplierName('');\n                setApplierPhone('');\n                setApplierArea('');\n                setPrivacyAgreeChecked(false);\n            }\n        }\n    }\n\n    const thisHandleClose = () => {\n        mainHandleDialogControl().close();\n        thisHandleValueOnChange().allClear();\n    }\n\n    const thisHandleFormSubmit = async (e) => {\n        e.preventDefault();\n        if(privacyAgreeChecked!=true){\n            alert('개인정보 수집 동의에 체크해주세요');\n            return;\n        }\n        let jsonData = {\n            counselingType:counselingType,\n            applierName: applierName,\n            applierPhone: applierPhone,\n            applierArea: applierArea,\n            privacyAgreement:privacyAgreeChecked?'동의':'비동의'\n        };\n        await counselingDataConnect().insertCounselingOne(jsonData)\n            .then(data => {\n                if (data.message == 'success') {\n                    alert('상담이 신청되었습니다.');\n                    thisHandleClose();\n                }\n            });\n    }\n\n    return (\n        <Dialog\n            fullWidth={true}\n            open={dialogOpen}\n            onClose={thisHandleClose}\n        >\n            <DialogTitle className='text-center'>{\"신속한 상담신청\"}</DialogTitle>\n            <form onSubmit={(e) => thisHandleFormSubmit(e)}>\n                <DialogContent>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"i_counseling_type\">상담구분</label>\n                        <select className=\"form-control\" defaultValue={counselingType} onChange={(e)=>thisHandleValueOnChange().changeCounselingType(e)}>\n                            <option value='counseling'>창업상담</option>\n                            <option value='purchase'>상품구매상담</option>\n                            <option value='closed'>폐업상담</option>\n                            <option value='renewal'>매장리뉴얼상담</option>\n                        </select>\n                        {/* <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeCounselingType(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" /> */}\n                    </div>\n                    <div className=\"form-group\">\n                        <label>이름</label>\n                        <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeApplierName(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>연락처</label>\n                        <input type=\"text\" value={applierPhone} onChange={(e) => thisHandleValueOnChange().changeApplierPhone(e)} className=\"form-control\" placeholder=\"'-' 를 제외한 연락처를 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>희망지역 or 상품설치지역</label>\n                        <input type=\"text\" value={applierArea} onChange={(e) => thisHandleValueOnChange().changeApplierArea(e)} className=\"form-control\" placeholder=\"지역을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={privacyAgreeChecked} onChange={(e)=>thisHandleValueOnChange().changePrivacyAreeChecked(e)} required/>\n                        <label className=\"form-check-label\">\n                            개인정보 수집 동의\n                        </label>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type='button' onClick={thisHandleClose} color=\"secondary\">\n                        취소\n                    </Button>\n                    <Button type='submit' color=\"primary\">\n                        문의등록\n                    </Button>\n                </DialogActions>\n            </form>\n\n        </Dialog>\n    )\n}\nApplyFormModal.defaultProps = {\n}\nexport default ApplyFormModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js",["345","346","347","348","349","350","351"],"import { useEffect, useState } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    /* overflow:hidden; */\n    /* margin:8px; */\n    background-image: \n        linear-gradient(#202020f0, #202020f0),\n        url(/images/funnyland/bg/funnyland-bg5.jpeg);\n    background-size:cover;\n    /* background: \n        white; */\n        /* linear-gradient(336deg, #a0a0a0, #101010a0 70.71%); */\n        /* linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%); */\n        /* linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%), */\n        /* linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%); */\n    padding:40px 0;\n`;\n\nconst ProductListContainer = styled.div`\n    padding:20px 0;\n`;\n\nconst ProductListTitle = styled.div`\n    color: white;\n    text-align:center;\n    /* font-size: 40px; */\n    font-size: 50px;\n    font-weight:600;\n    padding:15px;\n\n    @media only screen and (max-width:768px){\n        padding:0;\n        /* font-size: 26px; */\n        font-size: 32px;\n    }\n`;\n\nconst ContainerSubTitle = styled.div`\n    color: white;\n    text-align:center;\n    font-size: 20px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        font-size: 15px;\n    }\n`;\n\nconst ProductBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    border: 1px solid black;\n    border-radius:15px;\n    object-fit: cover;\n`;\n\nconst ProductDescBox = styled.div`\n    transition: .5s ease;\n    opacity: 0;\n    position: absolute;\n    width:100%;\n    padding:0 5px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    text-align: center;\n`;\n\nconst ProductDescTitle = styled.div`\n    color:#f1f1f1;\n    /* text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666;\n    -moz-text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666;\n    -webkit-text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666; */\n    font-size:15px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        font-size: 11px;\n    }\n`;\nconst ProductUrlBtn = styled(Link)`\n    transition: transform .5s;\n    margin:8px;\n    /* border:2px solid white;\n    color:white; */\n    border:2px solid white;\n    background-color:white;\n    color:#ee5470;\n    font-weight:600;\n    border-radius:10px;\n\n    &:hover{\n        font-weight:600;\n        transform:scale(1.1);\n        /* color:white;\n        background-color:#ee5470; */\n        color:#ee5470;\n        background-color:white;\n    }\n    @media only screen and (max-width:768px){\n        font-size: 11px;\n    }\n`;\n\nconst ProductEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    box-shadow: rgb(255 255 255 / 25%) 0px 5px 15px;\n    /* box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px; */\n    border-radius:15px;\n    transition: .5s;\n    &:hover {\n        background:#ee5470;\n        transform:scale(1.1);\n        border: 1px solid white;\n        ${ProductImage}{\n            transition: opacity 1s;\n            /* border: 1px solid #ee5470; */\n            border: 1px solid white;\n            opacity:0.1;\n        }\n        ${ProductDescBox}{\n            opacity:1;\n        }\n    }\n`;\n\nconst ProductWrapper = styled.div`\n    text-align:center;\n    padding-top:8px;\n    padding-bottom:8px;\n`;\n\nconst ButtonEl = styled(Link)`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\nconst ProductList = (props) => {\n    const [products, setProducts] = useState([\n        {\n            id: 1,\n            image: '/images/funnyland/product/cart_product.png',\n            title: '마리오카트2 DX'\n        },\n        {\n            id: 2,\n            image: '/images/funnyland/product/initialDZORO.png',\n            title: '이니셜D ZORO'\n        },\n        {\n            id: 3,\n            image: '/images/funnyland/product/overtakeDX.png',\n            title: '오버테이크 DX'\n        },\n        {\n            id: 4,\n            image: '/images/funnyland/product/prod1.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 5,\n            image: '/images/funnyland/product/prod2.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 6,\n            image: '/images/funnyland/product/prod3.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 7,\n            image: '/images/funnyland/product/prod4.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 8,\n            image: '/images/funnyland/product/prod5.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 9,\n            image: '/images/funnyland/product/prod6.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 10,\n            image: '/images/funnyland/product/prod7.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 11,\n            image: '/images/funnyland/product/prod8.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 12,\n            image: '/images/funnyland/product/prod9.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 13,\n            image: '/images/funnyland/product/initialDZORO.png',\n            title: '게임기 이름 게임기 이름'\n        },\n\n    ]);\n    return (\n        <Container>\n            <ProductListTitle><span style={{ borderLeft: '5px solid #ee5470', paddingLeft: '20px' }}>제품 안내</span></ProductListTitle>\n            <ContainerSubTitle>퍼니랜드x게임토피아가 공급하는 훌륭한 제품들을</ContainerSubTitle>\n            <ContainerSubTitle>지금 바로 확인해보세요</ContainerSubTitle>\n            <div style={{ padding: '15px' }}>\n                {/* <ProductListContainer className='row'>\n                    {products && products.map((product,index) => {\n                        if(index<12){\n                            return (\n                                <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={product.id}>\n                                    <ProductBox>\n                                        <ProductEl>\n                                            <ProductImage src={product.image} />\n                                            <ProductDescBox>\n                                                <ProductDescTitle>{product.title}</ProductDescTitle>\n                                                <div>\n                                                    <ProductUrlBtn className=\"btn btn-sm\">자세히</ProductUrlBtn>\n                                                </div>\n                                            </ProductDescBox>\n                                        </ProductEl>\n                                    </ProductBox>\n                                </ProductWrapper>\n                            )\n                        }\n                        \n                    })}\n                </ProductListContainer> */}\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>NEW</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 신상품</p>\n                        </h3>\n                        {props.productNewList && props.productNewList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>HIT</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 히트상품</p>\n                        </h3>\n                        {props.productHitList && props.productHitList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>EVENT</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 이벤트렌탈</p>\n                        </h3>\n                        {props.productEventList && props.productEventList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div className=\"text-center\">\n                    <ButtonEl className=\"btn\" to={'/product/list'}>제품 더보기</ButtonEl>\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default ProductList;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js",["352"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// Fontawesome Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBars,\n    faBuilding,\n    faCoins,\n    faStore,\n    faGamepad,\n    faInfoCircle\n} from '@fortawesome/free-solid-svg-icons';\nconst NavContainer = styled.nav`\n        overflow: hidden;\n        width: 100%;\n        padding:10px;\n        color:#333;\n        position:fixed;\n        background-color: ${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#f1f1f1' : 'none'};\n        border-bottom: 2px solid ${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#ee5470' : 'none'};\n        transition: background-color 1s;\n        z-index:30;\n`;\n\nconst NavBrandTop = styled(Link)`\n        color: white;\n        \n        &:hover{\n            color:white;\n        }\n        img{\n            height:50px;\n            @media only screen and (max-width:320px){\n                height:30px;\n            }\n        }\n    `;\n\nconst NavItemEl = styled(Link)`\n        color:${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#333' : '#f1f1f1'};\n        font-size:17px;\n        font-weight:600;\n        padding-left : 10px;\n        padding-right : 10px;\n        border:1px solid #00000000;\n        &:hover{\n            color:#ee5470 !important;\n            border-bottom:1px solid #ee5470;\n        }\n        \n\n        @media only screen and (max-width:320px){\n            font-size:14px;\n        }\n    `;\n\nconst NavbarMobileToggleBtn = styled.button`\n        color:${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#333' : '#f1f1f1'};\n`;\n\nconst NavbarDynamic = (props) => {\n\n    const [mobileNavOpen, setMobileNavOpen] = useState(false);\n    const [linkList, setLinkList] = useState([\n        {\n            id: 'navLink1',\n            name: '회사소개',\n            icon: <FontAwesomeIcon icon={faBuilding}></FontAwesomeIcon>,\n            url: '/introduce/intro1'\n        },\n        {\n            id: 'navLink2',\n            name: '창업안내',\n            icon: <FontAwesomeIcon icon={faCoins}></FontAwesomeIcon>,\n            url: '/found/intro1'\n        },\n        {\n            id: 'navLink3',\n            name: '오픈매장안내',\n            icon: <FontAwesomeIcon icon={faStore}></FontAwesomeIcon>,\n            url: '/store/list'\n        },\n        {\n            id: 'navLink4',\n            name: '제품안내',\n            icon: <FontAwesomeIcon icon={faGamepad}></FontAwesomeIcon>,\n            url: '/product/list'\n        },\n        {\n            id: 'navLink5',\n            name: '고객센터',\n            icon: <FontAwesomeIcon icon={faInfoCircle}></FontAwesomeIcon>,\n            url: '#'\n        }\n    ]);\n    const [scrollY, setScrollY] = useState(0);\n    function logit() {\n        setScrollY(window.pageYOffset);\n    }\n\n    useEffect(() => {\n        // console.log(scrollY);\n        function watchScroll() {\n            window.addEventListener(\"scroll\", logit);\n        }\n        watchScroll();\n        return () => {\n            window.removeEventListener(\"scroll\", logit);\n        };\n    });\n\n    const hamburgClick = () => {\n        if (mobileNavOpen) {\n            setMobileNavOpen(false);\n        } else {\n            setMobileNavOpen(true);\n        }\n    }\n\n    return (\n        <div>\n            <NavContainer\n                mobile_nav_open={mobileNavOpen}\n                scroll_y={props.scrollY? props.scrollY : scrollY}\n                className={`navbar navbar-expand-lg`}\n            >\n                {/* 모바일 로고 센터를 위한 요소 */}\n                <button\n                    className={`navbar-toggler`}\n                    style={{color:'#00000000', background:'none'}}\n                >\n                    <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\n                </button>\n\n                <NavBrandTop\n                    className='navbar-brand mx-auto'\n                    to=\"/\"\n                >\n                    <img src=\"/images/funnyland/logo/logo3.png\" width=\"auto\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\" />\n                </NavBrandTop>\n                <NavbarMobileToggleBtn\n                    mobile_nav_open={mobileNavOpen}\n                    scroll_y={props.scrollY? props.scrollY : scrollY}\n                    className={`navbar-toggler`}\n                    type=\"button\"\n                    onClick={hamburgClick}\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"true\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\n                </NavbarMobileToggleBtn>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        {\n                            linkList.map(r => {\n                                return (\n                                    <li className=\"nav-item\" key={r.id}>\n                                        <NavItemEl\n                                            mobile_nav_open={mobileNavOpen ? 1 : 0}\n                                            scroll_y={props.scrollY? props.scrollY : scrollY}\n                                            className={`navbar-brand`}\n                                            to={r.url}\n                                        >\n                                            <span className='mr-1'>{r.icon}</span>\n                                            {r.name}\n                                        </NavItemEl>\n                                    </li>\n                                );\n                            })\n                        }\n                        <NavItemEl\n                            mobile_nav_open={mobileNavOpen ? 1 : 0}\n                            scroll_y={props.scrollY? props.scrollY : scrollY}\n                            className={`navbar-brand`}\n                            to={'/admin'}\n                        >\n                            관리자 페이지\n                        </NavItemEl>\n                    </ul>\n                </div>\n            </NavContainer>\n        </div>\n\n    );\n}\n\nexport default NavbarDynamic;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js",["353"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPhone} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n    position:fixed;\n    bottom:0;\n    width:100%;\n    background-color:#00000094;\n    padding:10px;\n    overflow:hidden;\n    z-index:999;\n\n    & .text-strong{\n        /* color:#f8bac9; */\n        color:#ee5470;\n        /* text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1.5px 0 #ee5470, 0 1.5px #ee5470, 1.5px 0 #ee5470, 0 -1.5px #ee5470;\n        -moz-text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1px 2px #ee5470, 2px 1px #ee5470, 1px 2px #ee5470, 2px -1px #ee5470;\n        -webkit-text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1px 2px #ee5470, 2px 1px #ee5470, 1px 2px #ee5470, 2px -1px #ee5470; */\n    }\n`;\n\nconst TextEl = styled.div`\n    color: white;\n    font-size:19px;\n    font-weight:700;\n    margin-bottom:5px;\n    @media only screen and (max-width: 768px){\n        font-size:14px;\n    }\n    @media only screen and (max-width: 320px){\n        font-size:11px;\n    }\n`;\n\nconst ButtonEl = styled.button`\n    color: white;\n    font-size:21px;\n    font-weight:500;\n    margin:8px;\n\n    &:hover{\n        color:white;\n        background:#f8bac9;\n    }\n    @media only screen and (max-width: 768px){\n        font-size:16px;\n    }\n    \n`;\n\nconst TelLink = styled.a`\n    display:inline-block;\n    padding:0 5px;\n    color:white;\n    border:1px solid #f1f1f1;\n    border-radius:25%;\n    &:hover{\n        text-decoration:none;\n        color:white;\n    }\n`;\n\nconst ButtonEl2 = styled.button`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    color: white;\n    font-size:21px;\n    font-weight:500;\n    margin:0;\n    padding:3px 5px;\n    border:1px solid white; \n    border-radius:5px;\n    background:#ee5470;\n    @media only screen and (max-width: 768px){\n        font-size:16px;\n    }\n    @media only screen and (max-width: 320px){\n        font-size:13px;\n    }\n`;\nconst NavbarBottomFixed = (props) => {\n    const {\n        mainHandleDialogControl\n    } = props;\n    return (\n        <Container id='i_bottom_fixed_nav' className='clearfix'>\n            {/* <div className=\"row\">\n                <div className=\"col-6 text-center\">\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은</TextEl>\n                    <TextEl className=\"text-center\"><b className='text-strong'>퍼니랜드</b>와 함께</TextEl>\n                    <TextEl className=\"text-center\">시작해 보세요</TextEl>\n                    \n                </div>\n                <div className=\"col-6 text-center\">\n                    <TextEl className='text-center'><b className='text-strong'>무료창업상담</b> : <b>02-2272-1244</b></TextEl>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{borderColor:'white', background:'#f7734a', color:'white'}}>Tel.</ButtonEl>\n                </div>\n            </div> */}\n            {/* <div className='row'>\n                <div className='col-6'>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 !</TextEl>\n                </div>\n                <div className='col-6'>\n                    <TextEl className='text-center'><b className='text-strong'>무료창업상담</b> <br/> <b>02-2272-1244</b></TextEl>\n                </div>\n                <div className='col-12'>\n                    <div className='text-center'>\n                        <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{ borderColor: 'white', background: '#ee5470' }} onClick={() => mainHandleDialogControl().open()}>문의하기</ButtonEl>\n                        <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{ borderColor: 'white', background: '#f7734a', color: 'white' }}>Tel.</ButtonEl>\n                    </div>\n                </div>\n            </div> */}\n            {/* <div> */}\n                \n                {/* <div className='float-right'>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl> */}\n                    {/* <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{borderColor:'white', background:'#f7734a', color:'white'}}><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></ButtonEl> */}\n                {/* </div> */}\n                {/* <div className=''>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 ! <ButtonEl2>문의하기</ButtonEl2></TextEl>\n                    <TextEl className='text-center'><b className='text-strong'>무료상담</b> : <b>02-2272-1244 <TelLink href='tel:02-2272-1244'><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></TelLink></b></TextEl>\n                </div>\n            </div> */}\n            <div className='row'>\n                <div className='col-9' style={{paddingRight:'0'}}>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 !</TextEl>\n                    <TextEl className='text-center'><b className='text-strong'>무료상담</b> : <b>02-2272-1244 <TelLink href='tel:02-2272-1244'><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></TelLink></b></TextEl>\n                </div>\n                <div className='col-3' style={{paddingLeft:'0', textAlign:'center', position:'relative'}}>\n                    <ButtonEl2 type=\"button\" onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl2>\n                {/* <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl> */}\n                </div>\n            </div>\n        </Container>\n    )\n}\n\nexport default NavbarBottomFixed;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js",["354","355"],"import { useState } from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    background:#282828;\n    padding:50px 0 20vh 0;\n    color:#777;\n    text-align:center;\n    font-size:14px;\n    @media only screen and (max-width:768px){\n        font-size:10px;\n    }\n`;\n\nconst CompanyDetailText = styled.div`\n\n`;\n\nconst CopyrightText = styled.div`\n    margin-top: 5px;\n    font-size: 13px;\n    color: #555;\n`;\nconst FooterDefault = () =>{\n    const [companyInfo, setCompanyInfo] = useState({\n        name:'게임토피아',\n        president: '조정준',\n        bussinessNo:'104-06-23141',\n        address:'서울특별시 중구 을지로 157 대림상가 2F 다열 265호',\n        tel:'02-2272-1244',\n        fax:'02-2274-1244',\n        mobile:'010-5381-9104',\n        copyright:'게임토피아'\n    });\n    return(\n        <Container>\n            <div className='text-center' style={{}}>\n                <img src='/images/funnyland/logo/logo3.png' style={{width:'200px'}}></img>\n            </div>\n            <CompanyDetailText>업체명: {companyInfo.name} | 대표: {companyInfo.president} | 사업자번호: {companyInfo.bussinessNo}</CompanyDetailText>\n            <CompanyDetailText>주소: {companyInfo.address}</CompanyDetailText>\n            <CompanyDetailText>TEL: {companyInfo.tel} | FAX: {companyInfo.fax}</CompanyDetailText>\n            <CopyrightText>Copyright(c) {companyInfo.name}, All rights reserved.</CopyrightText>\n        </Container>\n    );\n}\n\nexport default FooterDefault;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js",[],["356","357"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js",["358","359"],"\nimport { useEffect,useState } from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport IntroduceTopLayout from '../layout/IntroduceTopLayout';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst IntroduceBodyWrapper = styled.div`\n    margin-bottom:100px;\n`;\n\nconst IntroduceBodyTitle = styled.div`\n    font-size:34px;\n    font-weight:700;\n    text-align:center;\n    margin: 70px 0 20px 0;\n\n    @media only screen and (max-width:768px){\n        font-size:24px;\n    }\n`;\nconst IntroduceBodyContentWrapper = styled.div`\n    width:80%;\n    margin:5px 10%;\n    padding:15px;\n`;\n\nconst ContentImageWrapper = styled.div`\n    text-align:center;\n`;\n\nconst ContentImageEl = styled.img`\n    width:50%;\n    border-right:4px solid #ee547060;\n    border-bottom:4px solid #ee547060;\n    border-radius:10px;\n    filter: drop-shadow(5px 5px 5px #000);\n    -webkit-filter: drop-shadow(5px 5px 5px #000);\n\n    @media only screen and (max-width:768px){\n        width:100%;\n    }\n`;\n\nconst ContentTextWrapper  =styled.div`\n\n`;\n\nconst ContentTextEl = styled.div`\n\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\nconst IntroduceIntro1Main = () => {\n    useEffect(()=>{\n        handleScrollToTop();\n    },[]);\n    \n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    return (\n        <Container>\n            <NavbarDynamic></NavbarDynamic>\n            <IntroduceTopLayout\n                title={'인사말'}\n                linkPage={'intro1'}\n            ></IntroduceTopLayout>\n            <MainTitleBox>\n                <MainTitle>\n                    GREETING \n                </MainTitle>\n                <MainTitleSub>인사말</MainTitleSub>\n                <LineBreaker1></LineBreaker1>\n                <ExplainEl>퍼니랜드는 대한민국의 건전한 <br/>게임문화를 선도하는 기업입니다.</ExplainEl>\n            </MainTitleBox>\n            <IntroduceBodyWrapper>\n                <IntroduceBodyContentWrapper>\n                    <ContentImageWrapper>\n                        <ContentImageEl src='/images/funnyland/bg/funnyland-bg4.jpeg'></ContentImageEl>\n                    </ContentImageWrapper>\n                    <LineBreaker1></LineBreaker1>\n                    <ContentTextWrapper>\n                        <ContentTextEl>\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지\n\n                            긴글이 얼마나 길어질지긴글이 얼마나 길어질지긴글이 얼마나 길어질\n                        </ContentTextEl>\n                    </ContentTextWrapper>\n                    \n                </IntroduceBodyContentWrapper>\n            </IntroduceBodyWrapper>\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </Container>\n    );\n}\n\nexport default IntroduceIntro1Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js",["360","361","362"],"import { useEffect, useState, memo, useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMapMarkedAlt,\n    faPhoneAlt\n} from '@fortawesome/free-solid-svg-icons';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport IntroduceTopLayout from '../layout/IntroduceTopLayout';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%',\n    height: '400px'\n};\n\nconst center = {\n    lat: 37.54927888427358,\n    lng: 126.9210000267195\n};\n\nconst center2 = {\n    lat: 37.56701055743499,\n    lng: 126.99542015596762\n}\nconst Container = styled.div`\n\n`;\n\nconst IntroduceBodyWrapper = styled.div`\n    margin-bottom:100px;\n`;\n\nconst IntroduceBodyContentWrapper = styled.div`\n    width:80%;\n    margin:0 10%;\n    .intro3-title{\n        font-weight:700;\n        margin:70px 0 20px 0;\n    }\n    .intro3-content-box{\n        padding:15px 0;\n    }\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\nconst IntroduceIntro3Main = () => {\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    return (\n        <Container>\n            <NavbarDynamic></NavbarDynamic>\n            <IntroduceTopLayout\n                title={'오시는 길'}\n                linkPage={'intro3'}\n            ></IntroduceTopLayout>\n            <MainTitleBox>\n                <MainTitle>\n                    DIRECTIONS\n                </MainTitle>\n                <MainTitleSub>오시는 길</MainTitleSub>\n                <LineBreaker1></LineBreaker1>\n            </MainTitleBox>\n            <IntroduceBodyWrapper>\n                <IntroduceBodyContentWrapper>\n                    <h4 className=\"intro3-title\">\n                        퍼니랜드 본점\n                    </h4>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faMapMarkedAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>주소</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>서울특별시 마포구 서교동 어울마당로 46-1</div>\n                    </div>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faPhoneAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>전화번호</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>02-332-9074</div>\n                    </div>\n                    <div style={{border:'4px double #f1f1f1'}}>\n                        <LoadScript\n                            googleMapsApiKey={process.env.REACT_APP_GOOGLEMAP_API}\n                        >\n                            <GoogleMap\n                                mapContainerStyle={containerStyle}\n                                center={center}\n                                zoom={18}\n                            >\n                                { /* Child components, such as markers, info windows, etc. */}\n                                <>\n                                    <Marker\n                                        position={center}\n                                        title={`퍼니랜드`}\n                                        label={'퍼니랜드'}\n                                    ></Marker>\n                                </>\n                            </GoogleMap>\n                        </LoadScript>\n                    </div>\n                    \n                </IntroduceBodyContentWrapper>\n                <IntroduceBodyContentWrapper>\n                    <h4 className=\"intro3-title\">\n                        게임토피아 유통 센터\n                    </h4>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faMapMarkedAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>주소</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>서울특별시 중구 을지로 157 대림상가 2F 다열 265호</div>\n                    </div>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faPhoneAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>전화번호 / 팩스</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>02-2272-1244 / 02-2274-1244</div>\n                    </div>\n                    <div style={{border:'4px double #f1f1f1'}}>\n                        <LoadScript\n                            googleMapsApiKey={process.env.REACT_APP_GOOGLEMAP_API}\n                        >\n                            <GoogleMap\n                                mapContainerStyle={containerStyle}\n                                center={center2}\n                                zoom={18}\n                            >\n                                { /* Child components, such as markers, info windows, etc. */}\n                                <>\n                                    <Marker\n                                        position={center2}\n                                        title={`게임토피아`}\n                                        label={'게임토피아'}\n                                    ></Marker>\n                                </>\n                            </GoogleMap>\n                        </LoadScript>\n                    </div>\n                </IntroduceBodyContentWrapper>\n            </IntroduceBodyWrapper>\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </Container>\n    );\n}\n\nexport default IntroduceIntro3Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js",["363","364","365","366","367"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    width:100%;\n    color: #ffffffb3;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:90%;\n    display:grid;\n    grid-template-columns:repeat(3,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:700;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst IntroduceTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>회사소개</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    회사소개\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro1'?1:0}\n                        to='/introduce/intro1'\n                    >\n                        인사말\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro2'?1:0}\n                        to='/introduce/intro2'\n                    >연혁</TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro3'?1:0}\n                        to='/introduce/intro3'\n                    >오시는 길</TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default IntroduceTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js",["368"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport IntroduceTopLayout from '../layout/IntroduceTopLayout';\nimport CompanyHistoryPresent from './CompanyHistoryPresent';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst IntroduceBodyWrapper = styled.div`\n    margin-bottom:100px;\n`;\n\nconst IntroduceBodyContentWrapper = styled.div`\n    width:80%;\n    margin:0 10%;\n    border-top: 1px solid #ee5470;\n    padding:15px;\n`;\n\nconst IntroduceBodyTitle = styled.div`\n    text-align:center;\n    font-size:30px;\n    font-weight:500;\n    margin: 70px 0 20px 0;\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    \n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst IntroduceIntro2Main = () => {\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    return (\n        <Container>\n            <NavbarDynamic\n            // scrollY={scrollY}\n            ></NavbarDynamic>\n            <IntroduceTopLayout\n                title={'연혁'}\n                linkPage={'intro2'}\n            ></IntroduceTopLayout>\n            <MainTitleBox>\n                <MainTitle>\n                    HISTORY\n                </MainTitle>\n                <MainTitleSub>연혁</MainTitleSub>\n                <LineBreaker1></LineBreaker1>\n            </MainTitleBox>\n            <IntroduceBodyWrapper>\n                <IntroduceBodyTitle>\n                    <div>\n                        SINCE <span className='funnyland-color1'>2001</span>\n                    </div>\n                </IntroduceBodyTitle>\n                <IntroduceBodyContentWrapper>\n                    <CompanyHistoryPresent\n                        historyYear={'2020'}\n                        historys={[\n                            'CGV 부산 센텀시티120평 규모 게임장 개설.',\n                            'CGV 수원광교 70평 규모 게임장 개설.',\n                            'CGV 일산고양 60평 규모 게임장 개설.',\n                            'CGV 인천학익 50평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2019'}\n                        historys={[\n                            '홍대 퍼니랜드 직영 게임장으로 재오픈 및 운영.',\n                            'CGV 등촌 70평 규모 게임장 개설.',\n                            'CGV 부산동래,계양,연수,부천 게임장 개설.',\n                            'CGV 광주금남로 60평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2018'}\n                        historys={[\n                            'CGV 구리,울산,평촌 게임장 개설.',\n                            'CGV 의정부 150평 규모 게임장 개설.',\n                            'CGV 대전 100평 규모 게임장 개설.',\n                            'CGV 수유리 70평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2017'}\n                        historys={[\n                            '신촌 지플렉스 게임장 개설 및 유지보수 업무 제휴.',\n                            '범계 100평 규모 퍼니랜드 게임장 개설 및 운영.',\n                            '대명 양양 솔비치&리조트 게임장 확장 이전 오픈.',\n                            '부평 120평 규모 퍼니랜드 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2016'}\n                        historys={[\n                            '대명 솔비치&리조트 게임장 개설.',\n                            '홍대 퍼니랜드 게임장 개설 및 운영.',\n                            '대명리조트 삼척 게임장 개설.',\n                            '화정 100평 규모 퍼니랜드 게임장 개설.',\n                            '강남 퍼니랜드 게임장 개설 및 운영.',\n                            '강남 원플레이 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2015'}\n                        historys={[\n                            '용인 롯데시네마 게임장 개설 및 운영.',\n                            '화정 80평 규모 게임장 리모델링 및 게임기기 임대.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2014'}\n                        historys={[\n                            '당진CGV 80평 규모 게임장 개설 및 게임기 임대.',\n                            '서산 롯데시네마 60평 규모 게임장 개설 및 게임기 임대.',\n                            '안양 노리존 230평 규모 게임장 개설 및 게임기 임대.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2013'}\n                        historys={[\n                            '대명리조트 거제지점 게임장 개설.',\n                            '대명리조트 변산, 대명리조트 경주 게임기 판매 및 유지보수 업무 제휴.',\n                            '몰디브 100평 규모 게임장 수출 및 개설.',\n                            '강남 롯데시네마 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2012'}\n                        historys={[\n                            '장원레져스포츠 야구 연습장 서울, 경기 총판 계약.',\n                            '펏스원 제품 해외수출.',\n                            '광주 운암동 게임장 개설.',\n                            '의정부 게임클럽 내 야구장 개설.',\n                            '김포공항 롯데시네마점 내 게임기 설치.',\n                            '4D 맥스라이더 수출.',\n                            '영등포 롯데시네마 내 게임장 유지 보수.'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2011'}\n                        historys={[\n                            '대전둔산CGV 내 게임장 개설.',\n                            '성남 노리존 내 게임기기 임대 관리.',\n                            '광주 시너스 내 게임장 개설.',\n                            '속초한화콘도 내 게임장 리모델링.',\n                            '노원 노리존 내 게임기기 임대 관리.',\n                            '노원 롯데시네마 내 게임기 설치.',\n                            '일산 이스턴 시티 락앤롤 게임기 설치.',\n                            '동수원 오션게임장 개설.'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2010'}\n                        historys={[\n                            '(주)펏스원 서울.경기 총판 계약.',\n                            '몽골팅기스 극장 맥스 라이더 수출.',\n                            '동수원CGV 내 게임장 개설.',\n                            '안산 메가 넥스 내 게임장 개설.',\n                            '제주도 4D 게임장 개설.',\n                            '울산 롯데시네마 내 게임장 개설.',\n                            '지행역 게임천국 게임장 개설.',\n                            '한국 민속촌 내 게임장 리모델링 개설.',\n                            '제주도 롯데시네마 내 게임장 개설.',\n                            '제주도 4D 게임장 2호점 개설.',\n                            '하이원 리조트 내 게임장 개설.',\n                            '역곡CGV 내 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2009'}\n                        historys={[\n                            '일산 웨스턴 돔 CGV 내 게임장 개설, 250평 규모.',\n                            '부산 동래CGV, 경성대 CGV, 신림 포도몰, 성신여대 CGV 개설.',\n                            '제주도 CGV 내 게임장 개설, 동대문 메가박스 게임장 개설.',\n                            '엣지 노래방 제작 판매.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2008'}\n                        historys={[\n                            '몰골 물품 납품',\n                            '성남 스타트랙 80평 게임장 개설.',\n                            '신도림 테크노마트 CGV 내 150평 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2007'}\n                        historys={[\n                            '일산 라페스타 게임장 개설.',\n                            '통신판매업신고(중구06547호)',\n                            '게임배급업자등록증(재교부)(게제 제2006-08호)',\n                            '게임제작업자등록증(재교부)(게제 제2006-26호)',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2006'}\n                        historys={[\n                            '통신판매를 위해 사업자등록증 재교부(104-06-23141)'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2005'}\n                        historys={[\n                            '(재)서울산업통상진흥원 애니메이션 센터와 물품 공급.',\n                            '부산 화명동 게임장 개설.',\n                            '한화리조트(주) 용인, 한화리조트(주) 수안보 게임장개설.',\n                            '군산 대학 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2004'}\n                        historys={[\n                            '대명콘도(홍천) 리모델링 물품 공급.',\n                            '양지 리조트 게임장 개설.',\n\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2003'}\n                        historys={[\n                            '오사모(오락실을 사랑하는 모임) www.osamo.co.kr 사이트 운영.',\n                            '둔촌동 100평 게임장 개설 및 수지, 용인, 목동 등 개설.',\n                            '수원 베레슈트 게임장 임대 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2002'}\n                        historys={[\n                            '게임물 제작업자 등록.',\n                            '게임물 배급업자 등록.',\n                            '대명콘도(단양) 150평 게임장 개설 및 다수 개설.',\n                            '대명콘도(홍천) 리모델링 물품 공급.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2001'}\n                        historys={[\n                            '게임토피아 설립',\n                            '대명콘도(홍천, 양평)와 업무 제휴.',\n                            '유통업자 등록.',\n                        ]}\n                        lineBreak={false}\n                    ></CompanyHistoryPresent>\n                </IntroduceBodyContentWrapper>\n            </IntroduceBodyWrapper>\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </Container>\n    );\n}\n\nexport default IntroduceIntro2Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { uuidv4 } from '../../../../handler/MyHandlers';\n\n// data connector\nimport { bannerDataConnect } from '../../../data_connect/BannerDataConnect';\nimport { videoDataConnect } from '../../../data_connect/VideoDataConnect';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport AdminBannerManage from './AdminBannerManage';\nimport AdminVideoManage from './AdminVideoManage';\nimport AddVideoModal from './AddVideoModal';\n\n\n\nconst Container = styled.div`\noverflow:hidden;\n`;\n\nconst FullPageLoading = styled.div`\n    position:fixed;\n    height:100%;\n    width:100%;\n    z-index:1999;\n    background-color:#80808050;\n`;\n\nconst FullPageLoadingSpinner = styled.div`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n`;\n\nconst AdminHomeMain = ({ history }) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [bannerListLoading, setBannerListLoading] = useState(true);\n    const [bannerList, setBannerList] = useState([]);\n    useEffect(() => {\n\n        async function effectInit() {\n            if (isLoged == false) {\n                return;\n            }\n            await handleGetBanners();\n        }\n        effectInit();\n    }, [isLoged])\n\n    const [uploadFile, setUploadFile] = useState([]);\n    const [fullPageLoading, setFullPageLoading] = useState(false);\n\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    // history.push('/');\n                }\n            })\n    }\n\n    const handleGetBanners = async () => {\n        await bannerDataConnect().searchBanners()\n            .then(data => {\n                if (data.message == 'success') {\n                    setBannerList(data.data);\n                }\n            })\n        setBannerListLoading(false);\n    }\n\n    const handleBannerImage = () => {\n        return {\n            uploaderOpen: function () {\n                document.getElementById('i_banner_uploadfile').click();\n            },\n            upToServer: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await bannerDataConnect().imageUploadToS3(fd).then(data => {\n                        document.getElementById('i_banner_uploadfile').value = '';\n                        if (data.message == 'success') {\n                            setUploadFile([\n                                ...uploadFile,\n                                {\n                                    uuid: uuidv4(),\n                                    imageUrl: data.imageUrl\n                                }\n                            ])\n                        }\n                    });\n                    setFullPageLoading(false);\n                }\n            },\n            deleteImage: function (uuid) {\n                setUploadFile(uploadFile.filter(r => r.uuid != uuid));\n            },\n            submitBanner: async function () {\n                if (uploadFile.length == 0) {\n                    return;\n                }\n                setFullPageLoading(true);\n                await bannerDataConnect().insertBanners(uploadFile)\n                    .then(data => {\n                        setUploadFile([]);\n                    });\n                await handleGetBanners();\n                setFullPageLoading(false);\n            },\n            moveLeft: async function (index) {\n                if (index <= 0) {\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let prev = bannerList[index - 1];\n\n                newList[index] = prev;\n                newList[index - 1] = curr;\n                newList.forEach((r, index) => {\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                    .then(data => {\n                        console.log(data);\n                        if (data.message == 'success') {\n                            handleGetBanners();\n                            setBannerListLoading(false);\n                        } else {\n                            alert('undefined error');\n                        }\n                    });\n                setFullPageLoading(false);\n            },\n            moveRight: async function (index) {\n                if (index >= bannerList.length - 1) {\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let next = bannerList[index + 1];\n\n                newList[index] = next;\n                newList[index + 1] = curr;\n                newList.forEach((r, index) => {\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                    .then(data => {\n                        if (data.message == 'success') {\n                            handleGetBanners();\n                            setBannerListLoading(false);\n                        } else {\n                            alert('undefined error');\n                        }\n                    });\n                setFullPageLoading(false);\n            },\n            deleteBanner: async function (id) {\n                setFullPageLoading(true);\n                let banner = bannerList.filter(r => r.id == id)[0];\n                await bannerDataConnect().deleteBanner(banner)\n                    .then(data => {\n                        // console.log(data);\n                    })\n                await handleGetBanners();\n                setFullPageLoading(false);\n            }\n        }\n    }\n\n    const testConsole = () => {\n        console.log(bannerList);\n    }\n\n    const [videoList, setVideoList] = useState(null);\n    const [addVideoModalOpen, setAddVideoModalOpen] = useState(false);\n    const [addVideoData, setAddVideoData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleVideoDataConnect().getVideoList();\n        }\n        fetchInit();\n    }, [])\n    const __handleVideoDataConnect = () => {\n        return {\n            getVideoList: async function () {\n                await videoDataConnect().searchVideoAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setVideoList(data.data);\n                        }\n                    });\n            },\n            insertVideoOne: async function () {\n                let data = addVideoData;\n                await videoDataConnect().insertVideoOne(data);\n            },\n            updateVideoDisplay: async function(data){\n                await videoDataConnect().updateVideoDisplay(data);\n            },\n            deleteVideoOne: async function(data){\n                await videoDataConnect().deleteVideoOne(data)\n                    .then(data=>{\n                        if (data && data.message == 'success') {\n                            alert('삭제되었습니다.');\n                        }else{\n                            alert('error');\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleVideoEventControl = () => {\n        return {\n            addVideoModalOpen: function () {\n                setAddVideoData({\n                    videoName: '',\n                    videoType: 'TYPE_YOUTUBE',\n                    videoUrl: '',\n                    videoKey: ''\n                })\n                setAddVideoModalOpen(true);\n            },\n            addVideoModalClose: function () {\n                setAddVideoData(null);\n                setAddVideoModalOpen(true);\n            },\n            addVideoDataOnValueChange: function (e) {\n                setAddVideoData({ ...addVideoData, [e.target.name]: e.target.value })\n            },\n            addVideoDataSubmit: async function (e) {\n                e.preventDefault();\n                await __handleVideoDataConnect().insertVideoOne();\n                await __handleVideoDataConnect().getVideoList();\n                this.addVideoModalClose();\n            },\n            setVideoDisplay: function(){\n                return{\n                    view: async function(videoId){\n                        let selectedVideo = videoList.filter(r=>r.videoId==videoId)[0];\n                        selectedVideo.videoDisplay = 1;\n                        await __handleVideoDataConnect().updateVideoDisplay(selectedVideo);\n                        await __handleVideoDataConnect().getVideoList();\n                    },\n                    hide: async function(videoId){\n                        let selectedVideo = videoList.filter(r=>r.videoId==videoId)[0];\n                        selectedVideo.videoDisplay = 0;\n                        await __handleVideoDataConnect().updateVideoDisplay(selectedVideo);\n                        await __handleVideoDataConnect().getVideoList();\n                    }\n                }\n            },\n            deleteVideo: async function(videoId){\n                let selectedVideo = videoList.filter(r=>r.videoId==videoId)[0];\n                await __handleVideoDataConnect().deleteVideoOne(selectedVideo);\n                await __handleVideoDataConnect().getVideoList();\n            }\n        }\n    }\n    return (\n        isLoged ?\n            (\n                <Container>\n                    {fullPageLoading ?\n                        <FullPageLoading>\n                            <FullPageLoadingSpinner>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </FullPageLoadingSpinner>\n                        </FullPageLoading>\n                        :\n                        \"\"\n                    }\n                    <AdminNav></AdminNav>\n                    <button onClick={testConsole}>con</button>\n                    <AdminBannerManage\n                        uploadFile={uploadFile}\n                        bannerListLoading={bannerListLoading}\n                        bannerList={bannerList}\n\n                        handleBannerImage={handleBannerImage}\n                    >\n                    </AdminBannerManage>\n\n                    {videoList ?\n                        <AdminVideoManage\n                            videoList = {videoList}\n\n                            handleVideoEventControl={handleVideoEventControl}\n                        >\n\n                        </AdminVideoManage>\n                        :\n                        <></>\n                    }\n\n                    {addVideoModalOpen && addVideoData ?\n                        <AddVideoModal\n                            modalOpen={addVideoModalOpen}\n                            addVideoData={addVideoData}\n\n                            handleVideoEventControl={handleVideoEventControl}\n                        >\n\n                        </AddVideoModal>\n                        :\n                        <></>\n                    }\n\n                </Container>\n            ) :\n            (\n                <></>\n            )\n    );\n}\n\nexport default AdminHomeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js",["388","389","390","391"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faTimes,\n    faChevronLeft,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst ImageButton = styled.button`\n    background:white;\n    padding:20px;\n    border:1px solid #333;\n    border-radius:15px;\n    white-space:normal;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageListWrapper = styled.div`\n    margin:15px 0;\n    height:220px;\n    padding:10px;\n    border:1px solid #f1f1f1;\n    overflow-x:scroll;\n    white-space: nowrap;\n`;\n\n\nconst ImageEl = styled.img`\n    width:384px;\n    height:170px;\n    margin:0 5px;\n    object-fit:cover;\n`;\n\nconst ImageDeleteBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:60px;\n    height:60px;\n`;\n\nconst ImageLeftBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:10%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageRightBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:90%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position:relative;\n    display:inline;\n    &:hover{\n        ${ImageEl}{\n            opacity:0.3;\n        }\n        ${ImageDeleteBtn}{\n            display:block;\n            color:black;\n        }\n        ${ImageDeleteBtn}:hover{\n            background-color:#ff0000a1;\n        }\n        ${ImageRightBtn}, ${ImageLeftBtn}{\n            display:block;\n            color:black;\n        }\n    }\n`;\n\nconst CurrentBannerListLoaderWrapper = styled.div`\n    text-align:center;\n    \n`;\nconst AdminBannerManage = (props) =>{\n    const {\n        uploadFile,\n        bannerListLoading,\n        bannerList\n    } = props;\n\n    const {\n        handleBannerImage\n    } = props;\n    return(\n        <Container>\n            <div>\n                <h4>배너 등록</h4>\n                <input type='file' id='i_banner_uploadfile' accept=\"image/*\" onChange={(e)=>handleBannerImage().upToServer(e)} hidden/>\n                <ImageButton type=\"button\" onClick={()=>handleBannerImage().uploaderOpen()}>이미지 업로드<br/>1920x850 권장</ImageButton>\n                <ImageListWrapper>\n                    {uploadFile.map(data=>{\n                        return(\n                            <ImageBox key={data.uuid}>\n                                <ImageEl src={data.imageUrl}></ImageEl>\n                                <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteImage(data.uuid)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                            </ImageBox>\n                        )\n                    })}\n                    \n                </ImageListWrapper>\n                <button className='btn btn-primary' onClick={()=>handleBannerImage().submitBanner()}>배너로 등록하기</button>\n            </div>\n            <hr/>\n            <div>\n                <h4>현재 배너 리스트</h4>\n                <ImageListWrapper>\n                    {bannerListLoading ==false && bannerList!=[]? \n                        bannerList.map((data,index)=>{\n                            return(\n                                <ImageBox key={data.id}>\n                                    <ImageEl src={data.imageUrl}></ImageEl>\n                                    <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteBanner(data.id)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                                    {index==0?'':<ImageLeftBtn onClick={()=>handleBannerImage().moveLeft(index)}><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon></ImageLeftBtn>}\n                                    {index==bannerList.length-1?'':<ImageRightBtn onClick={()=>handleBannerImage().moveRight(index)}><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></ImageRightBtn>}\n                                </ImageBox>\n                            );\n                        })\n                        :\n                        <CurrentBannerListLoaderWrapper>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </CurrentBannerListLoaderWrapper>\n                    }\n                </ImageListWrapper>\n            </div>\n        </Container>\n    );\n}\n\nexport default AdminBannerManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js",["392","393","394"],"function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nfunction dateToYYYYMMDD(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nfunction dateToYYYYMMDD_hhmmss(date) {\n    function leadingZeros(n, digits) {\n        var zero = '';\n        n = n.toString();\n\n        if (n.length < digits) {\n            for (let i = 0; i < digits - n.length; i++)\n                zero += '0';\n        }\n        return zero + n;\n    }\n    var d = new Date(date);\n    var s =\n        leadingZeros(d.getFullYear(), 4) + '-' +\n        leadingZeros(d.getMonth() + 1, 2) + '-' +\n        leadingZeros(d.getDate(), 2) + ' ' +\n\n        leadingZeros(d.getHours(), 2) + ':' +\n        leadingZeros(d.getMinutes(), 2) + ':' +\n        leadingZeros(d.getSeconds(), 2);\n\n    return s;\n}\nexport {\n    uuidv4,\n    dateToYYYYMMDD,\n    dateToYYYYMMDD_hhmmss\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js",["395","396","397","398","399"],"import { useEffect, useRef, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport YouTube from 'react-youtube';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nconst floatingPlayerTitleAnimation = () => {\n    return keyframes`\n        50% {\n            opacity:1;\n            transform: skew(-15deg) scale(1.2); \n            /* transform: scale(1.1); */\n        }\n    `;\n}\n\nconst Container = styled.div`\n    /* border-top:1px dashed #ee5470; */\n    padding-bottom: 20px;\n`;\n\nconst ItemBox = styled.div`\n    position:relative;\n    min-height:150px;\n    padding-top:15px;\n`;\n\nconst YoutubeBox = styled.div`\n    ${(props) => props.floating_close == true || props.scroll_y >= props.offset_top - document.documentElement.clientHeight ?\n        css`\n            position:relative;\n            @media only screen and (max-width: 768px){\n                width:100%;\n            }\n        ` :\n        css`\n            position:fixed;\n            bottom:88px;\n            right:13px;\n            @media only screen and (max-width: 768px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                bottom:74px;\n                right:0;\n            }\n            @media only screen and (max-width: 320px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                bottom:64px;\n                right:0;\n            }\n        `\n    }\n    \n    width:500px;\n    min-height:150px;\n    padding-top:15px;\n\n    .youtube-player-box{\n        position: relative;\n        padding-bottom: 56.25%;\n        padding-top: 25;\n        height: 0;\n    }\n    .youtube-player-el{\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    & .titleEl{\n        display:inline-block;\n        opacity:.5;\n        color:white;\n        font-size:15px;\n        padding-left: 20px;\n        animation: ${floatingPlayerTitleAnimation} 1.5s linear infinite;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        \n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n`;\n\nconst VideoPlayerBox = styled.div`\n    /* ${(props) => props.floating_close == true || props.scroll_y >= props.offset_top - document.documentElement.clientHeight ?\n        css`\n            position:relative;\n            @media only screen and (max-width: 768px){\n                width:100%;\n            }\n        ` :\n        css`\n            position:fixed;\n            bottom:20%;\n            right:5%;\n            @media only screen and (max-width: 768px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                right:0;\n            }\n        `\n    } */\n    @media only screen and (max-width: 768px){\n        width:100%;\n    }\n    width:500px;\n    min-height:150px;\n    padding-top:15px;\n\n    .youtube-player-box{\n        position: relative;\n        padding-bottom: 56.25%;\n        padding-top: 25;\n        height: 0;\n    }\n    .youtube-player-el{\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    & .titleEl{\n        display:inline-block;\n        opacity:.5;\n        color:white;\n        font-size:15px;\n        padding-left: 20px;\n        animation: ${floatingPlayerTitleAnimation} 1.5s linear infinite;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        \n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n`;\nconst ItemTitle = styled.div`\n    position:absolute;\n    width:100%;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    -ms-transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    text-align:center;\n    font-weight:600;\n    & .titleEl{\n        font-size:40px;\n        border-left: 5px solid #ee5470; \n        padding-left: 20px;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n    @media only screen and (max-width:768px){\n        top:50%;\n        & .titleEl{\n            font-size:25px;\n        }\n    }\n\n    \n`;\n\nconst VideoBottomTitle = styled.div`\n    margin:8px;\n    padding:8px;\n    text-align:center;\n    font-weight:600;\n    /* border-top:1px solid #f1f1f1; */\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst ContainerTitle = styled.div`\n    /* color: white; */\n    text-align:center;\n    /* font-size: 40px; */\n    font-size: 50px;\n    font-weight:600;\n    padding:40px;\n\n    @media only screen and (max-width:768px){\n        /* padding:0; */\n        /* font-size: 26px; */\n        font-size: 32px;\n    }\n`;\n\nconst opts = {\n    width: '100%',\n    height: '100%',\n    playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n    },\n};\n\nconst _onReady = (event) => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n}\n\nconst YoutubePlayPart = (props) => {\n    const youtubeContainerRef = useRef();\n    const player = useRef();\n    const [myOffsetTop, setMyOffsetTop] = useState(0);\n    const [floatingClose, setFloatingClose] = useState(false);\n\n    useEffect(() => {\n        setFloatingClose(false);\n    }, [])\n    useEffect(() => {\n\n        setMyOffsetTop(youtubeContainerRef.current.offsetTop);\n    }, [props.scrollY])\n\n    const handleFloatingClose = () => {\n        player.current.getInternalPlayer().pauseVideo();\n        setFloatingClose(true);\n    }\n    return (\n        <>\n            <Container ref={youtubeContainerRef}>\n                <ContainerTitle><span style={{color:'#ee5470', fontWeight:'800'}}>VIDEOS</span></ContainerTitle>\n                <div className='container-fluid'>\n                    <div className='row'>\n                        {/* <ItemBox className='col-sm-6'>\n                            <ItemTitle>\n                                <span className='titleEl'><b className='funnyland-gradient'>Funnyland</b> x <b className='workman-text'>Workman</b></span>\n                            </ItemTitle>            \n                        </ItemBox> */}\n                        {props.videoList.map(r => {\n                            if (r.videoDisplay == 1) {\n                                return (\n                                    <YoutubeBox\n                                        key={r.videoId}\n                                        className='col-sm-6'\n                                        scroll_y={props.scrollY}\n                                        offset_top={myOffsetTop}\n                                        floating_close={floatingClose}\n                                    >\n                                        {props.scrollY && myOffsetTop && props.scrollY >= myOffsetTop - document.documentElement.clientHeight ? '' :\n                                            <div className='clearfix'>\n                                                <span className='titleEl'><b className='funnyland-gradient'>Funnyland</b> x {r.videoName}</span>\n                                                <button type='button' className='float-right' style={{ border: 'none', background: 'none', color: 'gray', fontSize:'25px' }} onClick={() => handleFloatingClose()}><FontAwesomeIcon icon={faTimesCircle}></FontAwesomeIcon></button>\n                                            </div>\n                                        }\n                                        <YouTube \n                                            ref={player} \n                                            // videoId=\"-F28Byn1bbU\" \n                                            videoId={r.videoKey}\n                                            opts={opts} onReady={_onReady} className='youtube-player-el' containerClassName='youtube-player-box' />\n                                            {props.scrollY && myOffsetTop && props.scrollY >= myOffsetTop - document.documentElement.clientHeight ? \n                                                <VideoBottomTitle>{r.videoName}</VideoBottomTitle>\n                                                :\n                                                ''\n                                            }\n                                            \n                                    </YoutubeBox>\n                                );\n                            } else {\n                                return (\n                                    <VideoPlayerBox\n                                        key={r.videoId}\n                                        className='col-sm-6'\n                                    >\n                                        <YouTube \n                                            ref={player} \n                                            // videoId=\"-F28Byn1bbU\" \n                                            videoId={r.videoKey}\n                                            opts={opts} onReady={_onReady} className='youtube-player-el' containerClassName='youtube-player-box' />\n                                            <VideoBottomTitle>{r.videoName}</VideoBottomTitle>\n                                    </VideoPlayerBox>\n                                )\n                            }\n                        })}\n\n\n                    </div>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default YoutubePlayPart;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js",["400","401","402","403"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:80%;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props) => props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props) => props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst FoundTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>창업안내</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n\n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    창업안내\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n\n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage == 'intro1' ? 1 : 0}\n                        to='/found/intro1'\n                    >\n                        창업 절차 안내\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage == 'intro2' ? 1 : 0}\n                        to='/found/intro2'\n                    >\n                        창업상담신청\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default FoundTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js",["404","405"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport FoundTopLayout from '../layout/FoundTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst FoundIntro2Main = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <FoundTopLayout\n                title={'창업상담신청'}\n                linkPage={'intro2'}\n            ></FoundTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            FRANCHISE INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>창업상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect defaultValue={counselingType} onChange={(e)=>setCounselingType(e.target.value)} disabled>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='purchase'>상품구매상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-12 mt-2 mb-2'>\n                                    <label className='pl-1'>주소</label>\n                                    <ApplicationInput type='text' name='address' placeholder='주소를 입력해주세요.' value={address} onChange={(e)=>setAddress(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>층수</label>\n                                    <ApplicationInput type='text' name='floor' placeholder='점포 층수를 입력해주세요.' value={floor} onChange={(e)=>setFloor(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망오픈일</label>\n                                    <ApplicationDatePicker \n                                        dateFormat=\"yyyy년 MM월 dd일\"\n                                        placeholderText=\"희망오픈일 선택\"\n                                        selected={openDate} onChange={date=>setOpenDate(date)} strictParsing></ApplicationDatePicker>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default FoundIntro2Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js",["406","407","408","409"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\nimport queryString from 'query-string';\n\nconst counselingDataConnect = () =>{\n    return{\n        searchCounselingAll: async function(){\n            let query = queryString.parse(window.location.search);\n            return await axios.get('/api/search/counseling/all',{\n                params:{\n                    pageIndex:query.pageIndex ? query.pageIndex-1 : 0\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Error code : 405')\n                }\n            });\n        },\n        insertCounselingOne: async function(data){\n            return await axios.post('/api/insert/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 405');\n                }\n            })\n        },\n        updateCounselingOne: async function(data){\n            return await axios.post('/api/update/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 500');\n                }\n            })\n        },\n        deleteCounselingOne: async function(data){\n            return await axios.post('/api/delete/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport {\n    counselingDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"import { useEffect ,useState } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// data connect\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// handler\nimport {dateToYYYYMMDD,dateToYYYYMMDD_hhmmss} from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport PageableComponent from './PageableComponent';\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    /* padding:2%; */\n`;\n\nconst ListWrapper = styled.div`\n    position:relative;\n    border:1px solid #a1a1a1;\n    border-radius:5px;\n    padding:8px;\n    margin: 15px 0;\n`;\n\nconst ListWrapperBlind = styled.div`\n    position:absolute;\n    left:0;\n    top:50px;\n    width:100%;\n    height:calc(100% - 50px);\n    background-color:#91919180;\n    background: repeating-linear-gradient(45deg, #44444430, #44444430 10px, #88888830 0, #88888830 20px);\n    z-index:2;\n`;\n\nconst ListTextField = styled.div`\n    font-size:12px;\n    font-weight:600;\n    padding:5px;\n    border-bottom:1px dotted #818181;\n    /* border-radius:3px; */\n`;\n\nconst AdminCounselingMain = ({match,location,history}) =>{\n    \n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [counselingData, setCounselingData] = useState(null);\n    const [counselingPage, setCounselingPage] = useState(null);\n\n    useEffect(()=>{\n        async function fetchInit() {\n            if(isLoged){\n                await __handleDataConnect().getCounselingList();\n                handleScrollToTop();\n                // console.log('heoo')\n            }\n        }\n\n        fetchInit();\n        \n    },[isLoged, location])\n\n    const __handleDataConnect = () =>{\n        return {\n            getCounselingList : async function(){\n                let data = await counselingDataConnect().searchCounselingAll();\n                // console.log(data);\n                if(data){\n                    if(data.message == 'success'){\n                        setCounselingData(data.data);\n                        setCounselingPage(data.page);\n                    }else if(data.message == 'not_auth'){\n                        alert('관리자 권한이 없습니다.');\n                        history.push('/');\n                    }else if(data.message == 'user_invalid'){\n                        alert('로그인 세션이 만료되었습니다.');\n                        history.push('/admin');\n                    }\n                }else{\n                    alert('undefined error');\n                }\n            },\n            setCounselingAdminCheck: function(){\n                return {\n                    setCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 1;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    },\n                    setUnCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 0;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    }\n                }\n            },\n            deleteCounselingOne: async function(id){\n                let data = counselingData.filter(r=>r.id==id)[0];\n                let resData = await counselingDataConnect().deleteCounselingOne(data);\n                if(resData && resData.message == 'success'){\n                    alert('삭제되었습니다.');\n                    await __handleDataConnect().getCounselingList();\n                }\n            }\n        }\n    }\n\n    const AdminCheckBtnProp = (props) =>{\n        if(props.checked==0){\n            return <button className='btn btn-sm btn-outline-danger' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setCheck(props.id)}>미확인</button>\n        }else{\n            return <button className='btn btn-sm btn-outline-primary' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setUnCheck(props.id)}>확인됨</button>\n        }\n    }\n\n    return(\n        isLoged? \n        <>\n            <Container>\n                <AdminNav></AdminNav>\n                <ListContainer className='container-fluid'>\n                    {counselingPage && counselingData ? counselingData.map((r,index)=>{\n                        let itemIndex = counselingPage.displaySize*(counselingPage.curr-1)+index+1;\n                        return(\n                            <ListWrapper key={`${r.id}-${itemIndex}`}>\n                                {r.adminChecked == 1 ? <ListWrapperBlind></ListWrapperBlind> : ''}\n                                <ListTextField>\n                                    <span style={{padding:'0 5px'}}>\n                                        {itemIndex}-{r.id}\n                                    </span>\n                                    {r.counselingType=='counseling'?\n                                        <span style={{padding:'0 5px', color:'#6060d4'}}>가맹상담</span>\n                                    :''}\n                                    {r.counselingType=='purchase'?\n                                        <span style={{padding:'0 5px', color:'#29b529'}}>상품상담</span>\n                                    :''}\n                                    {r.counselingType=='closed'?\n                                        <span style={{padding:'0 5px', color:'#e25555'}}>폐업상담</span>\n                                    :''}\n                                    {r.counselingType=='renewal'?\n                                        <span style={{padding:'0 5px', color:'#c31ec3'}}>리뉴얼상담</span>\n                                    :''}\n                                    <span style={{padding:'0 5px'}}>\n                                        <AdminCheckBtnProp \n                                            id={r.id}\n                                            checked={r.adminChecked}\n                                        >\n                                        </AdminCheckBtnProp>\n                                    </span>\n                                    {r.adminChecked ? <span style={{padding:'0 5px'}}><button className='btn btn-sm btn-danger' onClick={()=>__handleDataConnect().deleteCounselingOne(r.id)}>삭제</button></span> :''}\n                                </ListTextField>\n                                <div className='row'>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>상담 등록일 : {dateToYYYYMMDD_hhmmss(r.createdAt)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>신청자 : {r.applierName}</ListTextField>\n                                        <ListTextField>전화번호 : {r.applierPhone}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>희망지역 : {r.applierArea}</ListTextField>\n                                        <ListTextField>주소 : {r.address}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>점포층수 : {r.floor}</ListTextField>\n                                        <ListTextField>오픈예정일 : {r.openDate == null? '' : dateToYYYYMMDD(r.openDate)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>\n                                            <div>기타문의내용</div>\n                                            <div>{r.desc}</div>\n                                        </ListTextField>\n                                    </div>\n                                </div>\n                                \n                            </ListWrapper>\n                        )\n                    })\n                    :\n                    <></>\n                    }\n                </ListContainer>\n                {counselingPage ? <PageableComponent\n                    defaultUrl={'/admin/counseling'}\n                    pageData={counselingPage}\n                ></PageableComponent>\n                :<></>}\n                \n            </Container>\n        </>\n        :\n        <></>\n    );\n}\n\nexport default AdminCounselingMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js",["426","427"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { Link } from 'react-router-dom';\nconst AdminNav = () =>{\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    window.location.href='/'\n                }\n            })\n    }\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/admin\">관리자 페이지</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>홈</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/counseling'>상담신청 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/store'>매장 안내 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/product'>상품 안내 관리</Link>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e) => handleLogoutSubmit(e)}>\n                    <button type='submit' className='btn btn-outline-danger'>로그아웃</button>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default AdminNav;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js",["428"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nconst Container = styled.div`\n`;\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:props.defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.prev}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.next}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js",["429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"import { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// handler\nimport { dateToYYYYMMDD, dateToYYYYMMDD_hhmmss } from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport CategoryComponent from './CategoryComponent';\nimport AddCategoryModal from './AddCategoryModal';\nimport FixCategoryModal from './FixCategoryModal';\nimport ProductComponent from './ProductComponent';\nimport AddProductModal from './AddProductModal';\nimport UpdateProductModal from './UpdateProductModal';\n\nconst Container = styled.div`\n    margin-bottom:150px;\n`;\nconst AdminProductMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n    const addProductImageUploaderRef = useRef();\n    const addProductFieldRef = useRef();\n\n    const updateProductImageUploaderRef = useRef();\n    const updateProductFieldRef = useRef();\n\n    const [loading, setLoading] = useState(false);\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [addCategoryModalOpen, setAddCategoryModalOpen] = useState(false);\n    const [addCategoryName, setAddCategoryName] = useState(null);\n    const [addCategoryData, setAddCategoryData] = useState({\n        categoryName: '',\n        priority: 9999\n    })\n\n    const [fixCategoryModalOpen, setFixCategoryModalOpen] = useState(false);\n    const [fixCategoryData, setFixCategoryData] = useState(null)\n\n    const [addProductModalOpen, setAddProductModalOpen] = useState(false);\n    const [addProductItemData, setAddProductItemData] = useState({\n        categoryId: '',\n        priority: 9999,\n        name: '',\n        introduce: '',\n        summary: '',\n        editorData: '',\n        newChecked:false,\n        hitChecked:false,\n        eventChecked:false,\n        imageUrl: '/images/sample/imageNo.png'\n    });\n\n    const [updateProductModalOpen, setUpdateProductModalOpen] = useState(false);\n    const [updateProductItemData, setUpdateProductItemData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            if (isLoged) {\n                await __handleDataConnect().getProductCategoryList();\n                await __handleDataConnect().getProductList();\n            }\n        }\n        fetchData();\n    }, [isLoged, location]);\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList({\n                                size: data.data.length,\n                                data: data.data\n                            })\n                        }\n                    })\n            },\n            deleteProductCategoryOne: async function (jsonData) {\n                await productDataConnect().deleteProductCategoryOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n                await __handleDataConnect().getProductCategoryList();\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            },\n            insertProductOne: async function (jsonData) {\n                await productDataConnect().insertProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 등록되었습니다.');\n                            }else{\n                                alert('error')\n                            }\n                        }\n                    });\n            },\n            updateProductOne: async function (jsonData) {\n                await productDataConnect().updateProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 수정되었습니다.');\n                            }\n                        }\n                    });\n            },\n            deleteProductOne: async function (jsonData) {\n                await productDataConnect().deleteProductOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n            },\n            updateCategoryOne: async function (jsonData) {\n                await productDataConnect().updateCategoryOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('카테고리가 수정되었습니다.');\n                            }\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleAddCategoryModalControl = () => {\n        return {\n            open: function () {\n                setAddCategoryModalOpen(true);\n            },\n            close: function () {\n                setAddCategoryModalOpen(false);\n                handleAddCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                // let jsonData = {\n                //     categoryName: addCategoryName\n                // }\n                await productDataConnect().insertProductCategoryOne(addCategoryData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품 카테고리가 생성되었습니다.');\n                            }\n                        }\n                    });\n                await __handleDataConnect().getProductCategoryList();\n                handleAddCategoryModalControl().close();\n\n            },\n            addCategoryDataOnChange: function (e) {\n                setAddCategoryData({ ...addCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setAddCategoryData({\n                    categoryName: '',\n                    priority: 9999\n                })\n            }\n        }\n    }\n\n    const handleFixCategoryModalControl = () => {\n        return {\n            open: function (id) {\n                let data = categoryList.data.filter(r => r.id == id)[0];\n                setFixCategoryData(data);\n                setFixCategoryModalOpen(true);\n            },\n            close: function () {\n                setFixCategoryModalOpen(false);\n                handleFixCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateCategoryOne(fixCategoryData);\n                await __handleDataConnect().getProductCategoryList();\n                handleFixCategoryModalControl().close();\n\n            },\n            categoryDataOnChange: function (e) {\n                setFixCategoryData({ ...fixCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setFixCategoryData(null);\n            }\n        }\n    }\n\n    const handleCategoryControl = () => {\n        return {\n            deleteOne: async function (id) {\n                if (window.confirm('정말로 삭제하시겠습니까?')) {\n                    let jsonData = categoryList.data.filter(r => r.id == id)[0];\n                    await __handleDataConnect().deleteProductCategoryOne(jsonData);\n                } else {\n                    return;\n                }\n\n            }\n        }\n    }\n\n    const handleProductControl = () => {\n        return {\n            deleteOne: async function (id) {\n                let jsonData = productList.filter(r => r.product.id == id)[0].product;\n                await __handleDataConnect().deleteProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n            },\n            categoryOnChange: async function (e) {\n                \n                let categoryId = e.target.value;\n                \n                let queryData = queryString.stringify({...query, categoryId: categoryId });\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            newCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.newChecked=true;\n                }else{\n                    delete query.newChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            hitCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.hitChecked=true;\n                }else{\n                    delete query.hitChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            eventCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.eventChecked=true;\n                }else{\n                    delete query.eventChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n\n            searchAll: async function () {\n                history.push('/admin/product');\n            }\n        }\n    }\n\n    const handleAddProductModalControl = () => {\n        return {\n            open: function () {\n                handleUpdateProductModalControl().close();\n                setAddProductModalOpen(true);\n            },\n            close: function () {\n                setAddProductModalOpen(false);\n                handleAddProductModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                let jsonData = {\n                    categoryId: addProductItemData.categoryId,\n                    priority: addProductItemData.priority,\n                    name: addProductItemData.name,\n                    introduce: addProductItemData.introduce,\n                    summary: addProductItemData.summary,\n                    desc: addProductItemData.editorData,\n                    imageUrl: addProductItemData.imageUrl,\n                    newChecked: addProductItemData.newChecked,\n                    hitChecked: addProductItemData.hitChecked,\n                    eventChecked: addProductItemData.eventChecked\n                }\n                // console.log(jsonData);\n                await __handleDataConnect().insertProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n                handleAddProductModalControl().close();\n\n            },\n            modalInputClear: function () {\n                setAddProductItemData({\n                    categoryId: '',\n                    priority: 9999,\n                    name: '',\n                    introduce: '',\n                    summary: '',\n                    editorData: '',\n                    imageUrl: '/images/sample/imageNo.png',\n                    newChecked:false,\n                    hitChecked:false,\n                    eventChecked:false\n                });\n            },\n            onValueChange: function (e) {\n                setAddProductItemData({ ...addProductItemData, [e.target.name]: e.target.value })\n            },\n            onValueCheckedChange: function(e){\n                // console.log(e.target.checked);\n                setAddProductItemData({...addProductItemData,[e.target.name]: e.target.checked})\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        addProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setAddProductItemData({ ...addProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleAddProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setAddProductItemData({ ...addProductItemData, ['editorData']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    const handleUpdateProductModalControl = () => {\n        return {\n            open: function (targetId) {\n                handleAddProductModalControl().close();\n\n                let data = productList.filter(r => r.product.id == targetId)[0].product;\n                // console.log(data);\n                setUpdateProductItemData(data);\n                setUpdateProductModalOpen(true);\n            },\n            close: function () {\n                setUpdateProductModalOpen(false);\n                setUpdateProductItemData(null);\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateProductOne(updateProductItemData);\n                await __handleDataConnect().getProductList();\n                handleUpdateProductModalControl().close();\n            },\n            onValueChange: function (e) {\n                setUpdateProductItemData({ ...updateProductItemData, [e.target.name]: e.target.value })\n            },\n            onValueCheckedChange: function(e){\n                // console.log(e.target.checked);\n                setUpdateProductItemData({...updateProductItemData,[e.target.name]: e.target.checked})\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        updateProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setUpdateProductItemData({ ...updateProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleUpdateProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setUpdateProductItemData({ ...updateProductItemData, ['desc']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    return (\n        isLoged ?\n            <>\n                <Container>\n                    <AdminNav></AdminNav>\n                    {categoryList ?\n                        <CategoryComponent\n                            categoryList={categoryList}\n\n                            handleModalControl={handleAddCategoryModalControl}\n                            handleCategoryControl={handleCategoryControl}\n                            handleFixModalControl={handleFixCategoryModalControl}\n                        ></CategoryComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>카테고리 리스트 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n                    {categoryList && productList && productPage ?\n                        <ProductComponent\n                            categoryList={categoryList}\n                            productList={productList}\n                            productPage={productPage}\n                            updateProductModalOpen={updateProductModalOpen}\n\n                            handleProductControl={handleProductControl}\n                            handleAddProductModalControl={handleAddProductModalControl}\n                            handleUpdateProductModalControl={handleUpdateProductModalControl}\n                        >\n                        </ProductComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>상품 목록 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n\n                    <AddCategoryModal\n                        modalOpen={addCategoryModalOpen}\n                        addCategoryData={addCategoryData}\n                        addCategoryName={addCategoryName}\n\n\n                        handleModalControl={handleAddCategoryModalControl}\n                    ></AddCategoryModal>\n                    <FixCategoryModal\n                        modalOpen={fixCategoryModalOpen}\n                        fixCategoryData={fixCategoryData}\n\n                        handleModalControl={handleFixCategoryModalControl}\n                    ></FixCategoryModal>\n                    <AddProductModal\n                        addProductFieldRef={addProductFieldRef}\n                        imageUploaderRef={addProductImageUploaderRef}\n\n                        categoryList={categoryList}\n                        addProductItemData={addProductItemData}\n\n                        modalOpen={addProductModalOpen}\n                        handleModalControl={handleAddProductModalControl}\n                        handleEditorControl={handleAddProductEditorControl}\n                    >\n\n                    </AddProductModal>\n                    <UpdateProductModal\n                        updateProductFieldRef={updateProductFieldRef}\n                        imageUploaderRef={updateProductImageUploaderRef}\n\n                        modalOpen={updateProductModalOpen}\n                        categoryList={categoryList}\n                        updateProductItemData={updateProductItemData}\n\n                        handleModalControl={handleUpdateProductModalControl}\n                        handleEditorControl={handleUpdateProductEditorControl}\n                    >\n\n                    </UpdateProductModal>\n                </Container>\n            </>\n            :\n            <></>\n    );\n}\n\nexport default AdminProductMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js",["456"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                <DialogTitle className='text-center'>{\"카테고리 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>카테고리</label>\n                            <input type=\"text\" className=\"form-control\" name='categoryName' value={props.addCategoryData.categoryName} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>카테고리 우선도</label>\n                            <input type=\"number\" className=\"form-control\" name='priority' value={props.addCategoryData.priority} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                            <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                            취소\n                    </Button>\n                        <Button type='submit' color=\"primary\">\n                            카테고리 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js",["457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"import axios from 'axios';\nimport queryString from 'query-string';\nimport { getCookie } from '../../handler/CookieHandler';\nconst productDataConnect = () => {\n    return {\n        searchProductCategoryAll: async function () {\n            return await axios.get('/api/search/product_category/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductCategoryOne: async function (data) {\n            return await axios.post('/api/insert/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductCategoryOne: async function (data) {\n            return await axios.post('/api/delete/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        imageUploadToS3: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => res.data)\n                //에러가 날 경우 처리\n                .catch(error => {\n                    console.log(error.response);\n                });\n        },\n        searchProductAll: async function () {\n            let query = queryString.parse(window.location.search);\n\n            return await axios.get('/api/search/product/all', {\n                params: {\n                    categoryId: query.categoryId,\n                    pageIndex: query.pageIndex ? query.pageIndex - 1 : 0,\n                    newChecked:query.newChecked && query.newChecked=='true' ? true : false,\n                    hitChecked:query.hitChecked && query.hitChecked=='true'? true : false,\n                    eventChecked:query.eventChecked && query.eventChecked=='true' ? true : false,\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        /**\n         * \n         * @param {boolean} newChecked \n         * @param {boolean} hitChecked \n         * @param {boolean} eventChecked \n         */\n        searchProductAllByCondition: async function (newChecked, hitChecked, eventChecked) {\n\n            return await axios.get('/api/search/product/all', {\n                params: {\n                    newChecked:newChecked ? true : false,\n                    hitChecked:hitChecked ? true : false,\n                    eventChecked:eventChecked ? true : false,\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductOne: async function (data) {\n            return await axios.post('/api/insert/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateProductOne: async function (data) {\n            return await axios.post('/api/update/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductOne: async function (data) {\n            return await axios.post('/api/delete/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        updateCategoryOne: async function (data) {\n            return await axios.post('/api/update/category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        searchProductOne: async function (productId) {\n            return await axios.get('/api/search/product/one', {\n                params: {\n                    productId:productId\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        }\n    }\n}\n\nexport {\n    productDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js",["492","493","494","495"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// components\nimport ProductPageableComponent from './ProductPageableComponent';\n\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    \n`;\n\nconst ListWrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n\n`;\n\nconst TopPart = styled.div`\n    padding:8px;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst TopPartTitle = styled.div`\n    font-size:21px;\n    font-weight:600;\n`;\n\nconst TopPartAddProduct = styled.button`\n    \n`;\n\nconst BodyPart = styled.div`\n    padding:8px;\n`;\n\nconst TableBox = styled.div`\n\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\nconst ImageEl = styled.img`\n    width:80px;\n    height:80px;\n    object-fit:cover;\n`;\n\nconst ControlBtn = styled.button`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst ControlLink = styled.a`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\nconst ProductComponent = (props) => {\n    // console.log(queryString.parse(window.location.search).categoryId?queryString.parse(window.location.search).categoryId:'')\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <ListContainer className='container-fluid'>\n                    <ListWrapper>\n                        <TopPart className='clearfix'>\n                            <TopPartTitle className='float-left'>상품 목록</TopPartTitle>\n                            <TopPartAddProduct type='button' className='float-right btn btn-outline-primary' onClick={() => props.handleAddProductModalControl().open()}>상품 추가</TopPartAddProduct>\n                        </TopPart>\n\n                        <BodyPart>\n                            <div className='pt-3 pb-3'>\n                                <p>카테고리별 조회</p>\n                                <div className='form-row'>\n                                    <div className=\"col\">\n                                        <select className=\"form-control\" name='categoryId' value={query.categoryId ? query.categoryId : ''} onChange={(e) => props.handleProductControl().categoryOnChange(e)} required>\n                                            <option value='' hidden>--카테고리 선택--</option>\n                                            {props.categoryList ? props.categoryList.data.map(r => {\n                                                return (\n                                                    <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                                );\n                                            })\n                                                :\n                                                <></>\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-success' onClick={() => props.handleProductControl().searchAll()}>전체조회</button>\n                                    </div>\n                                </div>\n                                <div className='form-group'>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={query.newChecked && query.newChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().newCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">신상품</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={query.hitChecked && query.hitChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().hitCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">히트상품</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={query.eventChecked && query.eventChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().eventCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">이벤트렌탈</label>\n                                    </div>\n                                </div>\n                            </div>\n                            {props.productList ?\n                                <TableBox className='table-responsive'>\n                                    <table className=\"table table-sm text-center\" style={{ tableLayout: 'fixed' }}>\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\" width='50'>#</th>\n                                                <th scope=\"col\" width='200'>상품명</th>\n                                                <th scope=\"col\" width='150'>이미지</th>\n                                                <th scope=\"col\" width='150'>카테고리</th>\n                                                <th scope=\"col\" width='100'>이벤트 뱃지</th>\n                                                <th scope=\"col\" width='200'>컨트롤</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.productList.map((r, index) => {\n                                                let itemIndex = props.productPage.displaySize * (props.productPage.curr - 1) + index + 1;\n                                                return (\n                                                    <tr key={r.product.id}>\n                                                        <TableTh scope=\"row\">{itemIndex}</TableTh>\n                                                        <TableTd>{r.product.name}</TableTd>\n                                                        <TableTd><ImageEl src={r.product.imageUrl}></ImageEl></TableTd>\n                                                        <TableTd>{r.category.categoryName}</TableTd>\n                                                        <TableTd>\n                                                            {r.product.newChecked ? <span className=\"badge badge-primary\" style={{ marginRight: '5px' }}>NEW</span> : <></>}\n                                                            {r.product.hitChecked ? <span className=\"badge badge-danger\" style={{ marginRight: '5px' }}>HIT</span> : <></>}\n                                                            {r.product.eventChecked ? <span className=\"badge badge-info\" style={{ marginRight: '5px' }}>EVENT</span> : <></>}\n                                                        </TableTd>\n                                                        <TableTd>\n                                                            <ControlLink\n                                                                href={`/product/detail?productId=${r.product.id}`}\n                                                                color_prop={'#80dd80'}\n                                                                className='btn btn-sm'\n                                                                target='_blank'\n                                                            >바로가기</ControlLink>\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#8080dd'}\n                                                                    onClick={() => props.handleUpdateProductModalControl().open(r.product.id)}\n                                                                >수정</ControlBtn>\n                                                            }\n\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#dd8080'}\n                                                                    onClick={() => props.handleProductControl().deleteOne(r.product.id)}\n                                                                >삭제</ControlBtn>\n                                                            }\n\n                                                        </TableTd>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </TableBox>\n                                :\n                                <></>\n                            }\n\n                        </BodyPart>\n                    </ListWrapper>\n                </ListContainer>\n                {props.productPage &&\n                    <ProductPageableComponent\n                        pageData={props.productPage}\n                    ></ProductPageableComponent>\n                }\n\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js",["496","497","498","499","500","501","502"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n    toolbar: {\n        items: [\n            'heading', '|',\n            'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n            'outdent', 'indent', '|',\n            'imageUpload', 'blockQuote', '|',\n            'undo', 'redo'\n        ],\n        shouldNotGroupWhenFull: true\n    }\n}\nconst AddProductModal = (props) => {\n    useEffect(() => {\n        function propFetch() {\n            if (props.modalOpen) {\n                handleScrollToMe();\n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () => {\n        props.addProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    return (\n        <>\n            {props.modalOpen ?\n                <Container className='container-fluid' ref={props.addProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 추가\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' defaultValue={props.addProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.addProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.addProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={props.addProductItemData.newChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">신상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={props.addProductItemData.hitChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">히트상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={props.addProductItemData.eventChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">이벤트렌탈</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.addProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.addProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.addProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.addProductItemData.editorData}\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={custom_config}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    상품 등록\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        this.url = `/api/fileupload/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\n\nexport default AddProductModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js",["503","504","505","506","507","508","509"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n    .ck-content blockquote .table:first-child {\n        margin-top: calc( 1em + 16px );\n        }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n    // removePlugins: ['Table','TableToolbar']\n    // toolbar: {\n    //     items: [\n    //         'heading', '|',\n    //         'fontfamily', 'fontsize', '|',\n    //         'alignment', '|',\n    //         'fontColor', 'fontBackgroundColor', '|',\n    //         'bold', 'italic', 'strikethrough', 'underline', 'subscript', 'superscript', '|',\n    //         'link', '|',\n    //         'outdent', 'indent', '|',\n    //         'bulletedList', 'numberedList', 'todoList', '|',\n    //         'code', 'codeBlock', '|',\n    //         // 'insertTable', '|',\n    //         'imageUpload', 'blockQuote', '|',\n    //         'undo', 'redo'\n    //     ],\n    //     shouldNotGroupWhenFull: true\n    // }\n    toolbar: {\n        items: [\n            'heading', '|',\n            'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n            'outdent', 'indent', '|',\n            'imageUpload', 'blockQuote', '|',\n            'undo', 'redo'\n        ],\n        shouldNotGroupWhenFull: true\n    }\n}\n\nconst UpdateProductModal = (props) => {\n    // console.log(ClassicEditor.builtinPlugins.map( plugin => plugin.pluginName ));\n    useEffect(() => {\n        function propFetch() {\n            if (props.modalOpen) {\n                handleScrollToMe();\n\n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () => {\n        props.updateProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <>\n            {props.modalOpen && props.updateProductItemData ?\n                <Container className='container-fluid' ref={props.updateProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 수정\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' value={props.updateProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.updateProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.updateProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={props.updateProductItemData.newChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">신상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={props.updateProductItemData.hitChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">히트상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={props.updateProductItemData.eventChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)}/>\n                                    <label className=\"form-check-label\">이벤트렌탈</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.updateProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.updateProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.updateProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.updateProductItemData.desc}\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                    // console.log(editor)\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={custom_config}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    수정하기\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        this.url = `/api/fileupload/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default UpdateProductModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js",["510"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                {props.fixCategoryData ? <>\n                    <DialogTitle className='text-center'>{\"카테고리 수정\"}</DialogTitle>\n                    <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                        <DialogContent>\n                            <div className=\"form-group\">\n                                <label>카테고리명</label>\n                                <input type=\"text\" className=\"form-control\" name='categoryName' value={props.fixCategoryData.categoryName} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>카테고리 우선도</label>\n                                <input type=\"number\" className=\"form-control\" name='priority' value={props.fixCategoryData.priority} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                                <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                취소\n                    </Button>\n                            <Button type='submit' color=\"primary\">\n                                수정\n                    </Button>\n                        </DialogActions>\n                    </form>\n                </>:<></>}\n\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default FixCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js",["511"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst ProductPageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default ProductPageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js",["512","513","514","515","516","517"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CategoryNavComponent from './CategoryNavComponent';\nimport ProductComponent from './ProductComponent';\n\n\nconst ProductListMain = ({history,match,location}) => {\n    let query = queryString.parse(window.location.search);\n    const categoryNavRef = useRef();\n\n    useEffect(() => {\n        if(query.pageIndex){\n            _handleScrollToRef();\n        }else{\n            handleScrollToTop();\n        }\n        \n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [selectedCategory, setSelectedCategory] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductCategoryList();\n            await __handleDataConnect().getProductList();\n        }\n        fetchInit();\n    }, [location]);\n\n    useEffect(()=>{\n        function init(){\n            if(categoryList){\n                // console.log(categoryList);\n                handleSetSelectedCategory();\n            }\n        }\n        init();\n    },[categoryList])\n\n    const _handleScrollToRef = () =>{\n        categoryNavRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList(data.data)\n                        }\n                    })\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleSetSelectedCategory = () =>{\n        // console.log(query);\n        let category = {\n            id:0,\n            categoryName:'전체상품',\n            priority:0\n        }\n        if(query.categoryId){\n            let getCategory = categoryList.filter(r=>r.id==query.categoryId)[0];\n            if(getCategory){\n                category.id=getCategory.id;\n                category.categoryName=getCategory.categoryName;\n                category.priority=getCategory.priority;\n            }\n        }\n        setSelectedCategory(category);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품목록'}\n                linkPage={'list'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            <div ref={categoryNavRef}></div>\n            {categoryList && selectedCategory ?\n                <CategoryNavComponent\n                    categoryList={categoryList}\n                    selectedCategory={selectedCategory}\n                ></CategoryNavComponent>\n                :\n                <></>\n            }\n            {categoryList && selectedCategory && productList && productPage ? \n                <ProductComponent\n                    categoryList = {categoryList}\n                    selectedCategory={selectedCategory}\n                    productList = {productList}\n                    productPage = {productPage}\n                ></ProductComponent>\n                :\n                <></>\n            }\n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductListMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js",["518","519","520","521"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    min-height:250px;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n    \n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:80%;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst ProductTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>제품안내</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    제품안내\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='list'?1:0}\n                        to='/product/list'\n                    >\n                        제품목록\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='counsel'?1:0}\n                        to='/product/counsel'\n                    >\n                        제품상담신청\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default ProductTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js",["522","523","524","525","526"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(13%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:1200px){\n        grid-template-columns:repeat(auto-fit,minmax(20%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:20px 0;\n    color:#333;\n    font-size:20px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:18px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n\n`;\n\nconst CategoryNavComponent = (props) => {\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <Wrapper className='container-fluid'>\n                    {props.categoryList && props.selectedCategory ?\n                        <GridGroup>\n                            {props.selectedCategory.id==0 && !query.newChecked && !query.hitChecked && !query.eventChecked? <GridEl to='/product/list' style={{color:'#ee5470'}}>전체상품</GridEl> : <GridEl to='/product/list'>전체상품</GridEl>}\n                            {query.newChecked && query.newChecked=='true' ? <GridEl to='/product/list?newChecked=true' style={{color:'#ee5470'}}>신상품</GridEl> : <GridEl to='/product/list?newChecked=true'>신상품</GridEl>}\n                            {query.hitChecked && query.hitChecked=='true' ? <GridEl to='/product/list?hitChecked=true' style={{color:'#ee5470'}}>히트상품</GridEl> : <GridEl to='/product/list?hitChecked=true'>히트상품</GridEl>}\n                            {query.eventChecked && query.eventChecked=='true' ? <GridEl to='/product/list?eventChecked=true' style={{color:'#ee5470'}}>이벤트 렌탈</GridEl> : <GridEl to='/product/list?eventChecked=true'>이벤트 렌탈</GridEl>}\n                            \n                            {props.categoryList.map(r => {\n                                if(r.id == props.selectedCategory.id){\n                                    return(\n                                        <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`} style={{color:'#ee5470'}}>{r.categoryName}</GridEl>\n                                    );    \n                                }\n                                return (\n                                    <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`}>{r.categoryName}</GridEl>\n                                );\n                            })}\n                        </GridGroup>\n                        :\n                        <></>\n                    }\n\n\n                </Wrapper>\n            </Container>\n        </>\n    )\n}\n\nexport default CategoryNavComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js",["527","528"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n// components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductListWrapper = styled.div`\n    padding:50px 15px;\n    display:grid;\n    grid-template-columns: repeat(4,1fr);\n    grid-template-rows: auto auto;\n    grid-gap:15px;\n    @media only screen and (max-width:992px){\n        grid-template-columns: repeat(3,1fr);\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns: repeat(2,1fr);\n    }\n`;\n\nconst ProductImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ProductImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst ProductContentBox = styled.div`\n    /* padding:2px 0; */\n`;\n\nconst ProductContentTitle = styled.div`\n/* padding:2px 0; */\n    font-size:18px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        font-size:13px;\n    }\n`;\n\nconst ProductWrapper = styled(Link)`\n    text-align:center;\n    border: 2px solid #00000000;\n    border-radius:10px;\n    box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px;\n    overflow:hidden;\n    color:#333;\n    transition: .5s;\n    &:hover{\n        /* background:#ee5470; */\n        /* border: 2px solid white; */\n        text-decoration:none;\n        color:white;\n        transform:scale(1.03);\n        background: linear-gradient(\n            60deg,\n            hsl(224, 85%, 66%),\n            hsl(269, 85%, 66%),\n            hsl(314, 85%, 66%),\n            hsl(359, 85%, 66%),\n            hsl(44, 85%, 66%),\n            hsl(89, 85%, 66%),\n            hsl(134, 85%, 66%),\n            hsl(179, 85%, 66%)\n        );\n        background-size: 300% 300%;\n        background-position: 0 50%;\n        animation: moveGradient 4s alternate infinite;\n        \n        & ${ProductImage}{\n            opacity:0.7;\n        }\n        & ${ProductContentTitle}{\n            font-weight:800;\n        }\n    }\n\n    @keyframes moveGradient {\n        50% {\n            background-position: 100% 50%;\n        }\n    }\n`;\nconst ProductComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        PRODUCT\n                        </MainTitle>\n                    <MainTitleSub>제품 안내</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>{props.selectedCategory.categoryName}</ExplainEl>\n                </MainTitleBox>\n                <ProductListWrapper className='container'>\n                    {props.productList && props.productList.map(r => {\n                        return (\n                            <ProductWrapper key={r.product.id} to={`/product/detail?productId=${r.product.id}`}>\n                                <ProductImageBox>\n                                    <ProductImageEl>\n                                        <ProductImage src={r.product.imageUrl}></ProductImage>\n                                    </ProductImageEl>\n                                </ProductImageBox>\n                                <ProductContentBox>\n                                    <ProductContentTitle>\n                                        {r.product.newChecked ? <span className=\"badge badge-primary\" style={{ marginRight: '5px' }}>NEW</span> : <></>}\n                                        {r.product.hitChecked ? <span className=\"badge badge-danger\" style={{ marginRight: '5px' }}>HIT</span> : <></>}\n                                        {r.product.eventChecked ? <span className=\"badge badge-info\" style={{ marginRight: '5px' }}>EVENT</span> : <></>}\n                                    </ProductContentTitle>\n                                </ProductContentBox>\n                                <ProductContentBox>\n                                    <ProductContentTitle>{r.product.name}</ProductContentTitle>\n                                </ProductContentBox>\n                            </ProductWrapper>\n                        );\n                    })}\n                </ProductListWrapper>\n                <PageableComponent\n                    pageData={props.productPage}\n                ></PageableComponent>\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js",["529"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js",["530","531","532","533","534"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport DetailComponent from './DetailComponent';\n\nconst ProductDetailMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [productData, setProductData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductData();\n        }\n        fetchInit();\n    },[location])\n\n    const __handleDataConnect = () => {\n        return {\n            getProductData: async function () {\n                let productId = query.productId;\n                if (productId) {\n                    await productDataConnect().searchProductOne(productId)\n                        .then(data => {\n                            if (data && data.message == 'success') {\n                                setProductData(data.data);\n                                console.log(data);\n                            }else if(data && data.message=='no_data'){\n                                alert('존재하지 않는 데이터입니다.');\n                                history.push('/product/list');\n                            }\n                        })\n                }\n\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품상세'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            {productData ? \n                <DetailComponent\n                    productData={productData}\n                ></DetailComponent>\n                :\n                <>\n                    <div className='text-center'>\n                        <h2 className='m-3 p-3'>NOT FOUND</h2>\n                        <div className='m-1 p-1'>\n                            <Link to={'/product/list'}>Go To Product List</Link>\n                        </div>\n                        <div className='m-1 p-1'>\n                            <Link to={'/'}>Go To Home</Link>\n                        </div>\n                    </div>\n                    \n                </>\n            }\n            \n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductDetailMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js",["535"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminVideoManage.js",["536"],"import styled from 'styled-components';\n\nconst Container = styled.div`\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst VideoWrapper = styled.div`\n    border:1px solid #f1f1f1;\n    border-radius:10px;\n    padding:8px;\n\n`;\n\nconst TopWrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    padding:8px;\n`;\n\nconst BodyWrapper = styled.div`\n    padding:8px;\n`;\nconst AdminVideoManage = (props) => {\n    return (\n        <>\n            <Container>\n                <VideoWrapper>\n                    <TopWrapper className='clearfix'>\n                        <button type='button' className='btn btn-outline-primary float-right' onClick={() => props.handleVideoEventControl().addVideoModalOpen()}>동영상 추가</button>\n                        <h4>동영상 리스트</h4>\n                    </TopWrapper>\n                    <BodyWrapper>\n                        <div className='table-responsive text-center'>\n                            <table className=\"table\" style={{ tableLayout: 'fixed' }}>\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\" width='50'>#</th>\n                                        <th scope=\"col\" width='150'>동영상 이름</th>\n                                        <th scope=\"col\" width='150'>유튜브 키</th>\n                                        <th scope=\"col\" width='150'>전시상태</th>\n                                        <th scope=\"col\" width='150'>컨트롤</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {props.videoList && props.videoList.map((r, index) => {\n                                        return (\n                                            <tr key={r.videoId}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{r.videoName}</td>\n                                                <td>{r.videoKey}</td>\n                                                <td>\n                                                    {r.videoDisplay == 1 ?\n                                                        <>\n                                                            <button type='button' className='btn btn-outline-info' onClick={() => props.handleVideoEventControl().setVideoDisplay().hide(r.videoId)}>ON</button>\n                                                        </>\n                                                        :\n                                                        <>\n                                                            <button type='button' className='btn btn-outline-warning' onClick={() => props.handleVideoEventControl().setVideoDisplay().view(r.videoId)}>OFF</button>\n                                                        </>\n                                                    }\n                                                </td>\n                                                <td><button type='button' className='btn btn-outline-danger' onClick={() => props.handleVideoEventControl().deleteVideo(r.videoId)}>삭제</button></td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                    </BodyWrapper>\n                </VideoWrapper>\n            </Container>\n        </>\n    );\n}\n\nexport default AdminVideoManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddVideoModal.js",["537"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddVideoModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleVideoEventControl().addVideoModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"동영상 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleVideoEventControl().addVideoDataSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>동영상 이름</label>\n                            <input type=\"text\" className=\"form-control\" name='videoName' value={props.addVideoData.videoName} onChange={(e) => props.handleVideoEventControl().addVideoDataOnValueChange(e)} placeholder=\"구분하실 동영상 이름을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>유튜브 키</label>\n                            <input type=\"text\" className=\"form-control\" name='videoKey' value={props.addVideoData.videoKey} onChange={(e) => props.handleVideoEventControl().addVideoDataOnValueChange(e)} placeholder=\"동영상의 유튜브 키를 지정해주세요.\" required=\"required\" />\n                            <small className=\"form-text text-muted\">유튜브에 업로드된 영상의 키값을 가져와서 등록해주세요.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleVideoEventControl().addVideoModalClose()}>\n                            취소\n                    </Button>\n                        <Button type='submit' color=\"primary\">\n                            동영상 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddVideoModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/VideoDataConnect.js",["538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"import axios from 'axios';\nimport { getCookie } from '../../handler/CookieHandler';\n\nconst videoDataConnect = () => {\n    return {\n        searchVideoAll: async function () {\n            return await axios.get('/api/search/video/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertVideoOne: async function (data) {\n            return await axios.post('/api/insert/video/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateVideoDisplay: async function (data) {\n            return await axios.post('/api/update/video/one/display', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteVideoOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/delete/video/one',data,{\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n    }\n}\n\nexport {\n    videoDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/counsel/ProductCounselMain.js",["552","553","554","555","556","557"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport ProductTopLayout from '../layout/ProductTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ProductCounselMain = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('purchase');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품상담신청'}\n                linkPage={'counsel'}\n            ></ProductTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            PURCHASE INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>제품상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect defaultValue={counselingType} onChange={(e)=>setCounselingType(e.target.value)} disabled>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='purchase'>상품구매상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>설치희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='제품설치 희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='구매를 원하는 제품 및 기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductCounselMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AdminStoreMain.js",["558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AreaComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddAreaModal.js",["580"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleAreaEventControl().addModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"지역 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleAreaEventControl().addModalSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>지역명</label>\n                            <input type=\"text\" className=\"form-control\" name='areaName' value={props.addAreaData.areaName} onChange={(e) => props.handleAreaEventControl().addAreaDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleAreaEventControl().addModalClose()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            지역 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/StoreDataConnect.js",["581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixAreaModal.js",["612"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixAreaModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleAreaEventControl().fixModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"지역 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleAreaEventControl().fixModalSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>지역명</label>\n                            <input type=\"text\" className=\"form-control\" name='areaName' value={props.fixAreaData.areaName} onChange={(e) => props.handleAreaEventControl().fixAreaDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleAreaEventControl().fixModalClose()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            지역 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default FixAreaModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/StoreComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddStoreModal.js",["613","614","615","616"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixStoreModal.js",["617","618","619","620"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/PageableComponent.js",["621"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreListMain.js",["622","623","624","625","626"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/layout/StoreTopLayout.js",["627","628","629"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/AreaNavComponent.js",["630"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(10%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:1200px){\n        grid-template-columns:repeat(auto-fit,minmax(11%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(25%, auto));\n    }\n\n    @media only screen and (max-width:320px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:10px 0;\n    color:#333;\n    font-size:15px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:13px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:11px;\n    }\n\n`;\n\nlet areaList = [\n    {\n        areaName:'서울특별시',\n        url:`/store/list?areaName=서울특별시`\n    },\n    {\n        areaName:'부산광역시',\n        url:`/store/list?areaName=부산광역시`\n    },\n    {\n        areaName:'대구광역시',\n        url:`/store/list?areaName=대구광역시`\n    },\n    {\n        areaName:'인천광역시',\n        url:`/store/list?areaName=인천광역시`\n    },\n    {\n        areaName:'대전광역시',\n        url:`/store/list?areaName=대전광역시`\n    },\n    {\n        areaName:'광주광역시',\n        url:`/store/list?areaName=광주광역시`\n    },\n    {\n        areaName:'울산광역시',\n        url:`/store/list?areaName=울산광역시`\n    },\n    {\n        areaName:'세종특별자치시',\n        url:`/store/list?areaName=세종특별자치시`\n    },\n    {\n        areaName:'경기도',\n        url:`/store/list?areaName=경기도`\n    },\n    {\n        areaName:'강원도',\n        url:`/store/list?areaName=강원도`\n    },\n    {\n        areaName:'충청북도',\n        url:`/store/list?areaName=충청북도`\n    },\n    {\n        areaName:'충청남도',\n        url:`/store/list?areaName=충청남도`\n    },\n    {\n        areaName:'전라북도',\n        url:`/store/list?areaName=전라북도`\n    },\n    {\n        areaName:'전라남도',\n        url:`/store/list?areaName=전라남도`\n    },\n    {\n        areaName:'경상북도',\n        url:`/store/list?areaName=경상북도`\n    },\n    {\n        areaName:'경상남도',\n        url:`/store/list?areaName=경상남도`\n    },\n    {\n        areaName:'제주특별자치도',\n        url:`/store/list?areaName=제주특별자치도`\n    },\n    \n]\nconst AreaNavComponent = (props) => {\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <Wrapper className='container-fluid'>\n                    <GridGroup>\n                        {query.areaName ? <GridEl to='/store/list'>전체매장</GridEl> : <GridEl to='/store/list' style={{ color: '#ee5470' }}>전체매장</GridEl>}\n                        {areaList.map(r=>{\n                            if(query.areaName && query.areaName==r.areaName){\n                                return(\n                                    <GridEl key={r.areaName} to={r.url} style={{ color: '#ee5470' }}>{r.areaName}</GridEl>\n                                )\n                            }else{\n                                return(\n                                    <GridEl key={r.areaName} to={r.url}>{r.areaName}</GridEl>\n                                )\n                            }\n                        })}\n                    </GridGroup>\n\n\n                </Wrapper>\n            </Container>\n        </>\n    )\n}\n\nexport default AreaNavComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreComponent.js",["631","632","633","634","635"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/StoreDetailMain.js",["636","637","638","639"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/DetailComponent.js",["640","641"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/PageableComponent.js",["642"],{"ruleId":"643","severity":1,"message":"644","line":8,"column":8,"nodeType":"645","messageId":"646","endLine":8,"endColumn":13},{"ruleId":"647","replacedBy":"648"},{"ruleId":"649","replacedBy":"650"},{"ruleId":"643","severity":1,"message":"651","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":9},{"ruleId":"652","severity":1,"message":"653","line":28,"column":7,"nodeType":"654","endLine":28,"endColumn":9,"suggestions":"655"},{"ruleId":"656","severity":1,"message":"657","line":33,"column":33,"nodeType":"658","messageId":"659","endLine":33,"endColumn":35},{"ruleId":"643","severity":1,"message":"660","line":1,"column":31,"nodeType":"645","messageId":"646","endLine":1,"endColumn":37},{"ruleId":"643","severity":1,"message":"661","line":26,"column":7,"nodeType":"645","messageId":"646","endLine":26,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":91,"column":50,"nodeType":"658","messageId":"659","endLine":91,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":104,"column":58,"nodeType":"658","messageId":"659","endLine":104,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":112,"column":58,"nodeType":"658","messageId":"659","endLine":112,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":120,"column":58,"nodeType":"658","messageId":"659","endLine":120,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":130,"column":50,"nodeType":"658","messageId":"659","endLine":130,"endColumn":52},{"ruleId":"643","severity":1,"message":"662","line":4,"column":8,"nodeType":"645","messageId":"646","endLine":4,"endColumn":14},{"ruleId":"663","severity":1,"message":"664","line":45,"column":33,"nodeType":"665","endLine":45,"endColumn":86},{"ruleId":"643","severity":1,"message":"666","line":35,"column":7,"nodeType":"645","messageId":"646","endLine":35,"endColumn":24},{"ruleId":"643","severity":1,"message":"667","line":68,"column":7,"nodeType":"645","messageId":"646","endLine":68,"endColumn":14},{"ruleId":"643","severity":1,"message":"668","line":74,"column":7,"nodeType":"645","messageId":"646","endLine":74,"endColumn":14},{"ruleId":"643","severity":1,"message":"669","line":124,"column":7,"nodeType":"645","messageId":"646","endLine":124,"endColumn":14},{"ruleId":"670","severity":1,"message":"671","line":230,"column":53,"nodeType":"672","messageId":"673","endLine":230,"endColumn":55},{"ruleId":"656","severity":1,"message":"674","line":69,"column":31,"nodeType":"658","messageId":"659","endLine":69,"endColumn":33},{"ruleId":"656","severity":1,"message":"657","line":82,"column":34,"nodeType":"658","messageId":"659","endLine":82,"endColumn":36},{"ruleId":"643","severity":1,"message":"675","line":1,"column":10,"nodeType":"645","messageId":"646","endLine":1,"endColumn":19},{"ruleId":"643","severity":1,"message":"676","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":19},{"ruleId":"643","severity":1,"message":"677","line":159,"column":12,"nodeType":"645","messageId":"646","endLine":159,"endColumn":20},{"ruleId":"643","severity":1,"message":"678","line":159,"column":22,"nodeType":"645","messageId":"646","endLine":159,"endColumn":33},{"ruleId":"670","severity":1,"message":"671","line":261,"column":86,"nodeType":"672","messageId":"673","endLine":261,"endColumn":88},{"ruleId":"670","severity":1,"message":"671","line":289,"column":86,"nodeType":"672","messageId":"673","endLine":289,"endColumn":88},{"ruleId":"670","severity":1,"message":"671","line":317,"column":90,"nodeType":"672","messageId":"673","endLine":317,"endColumn":92},{"ruleId":"643","severity":1,"message":"679","line":66,"column":22,"nodeType":"645","messageId":"646","endLine":66,"endColumn":33},{"ruleId":"643","severity":1,"message":"680","line":41,"column":7,"nodeType":"645","messageId":"646","endLine":41,"endColumn":15},{"ruleId":"643","severity":1,"message":"681","line":24,"column":25,"nodeType":"645","messageId":"646","endLine":24,"endColumn":39},{"ruleId":"663","severity":1,"message":"664","line":37,"column":17,"nodeType":"665","endLine":37,"endColumn":85},{"ruleId":"647","replacedBy":"682"},{"ruleId":"649","replacedBy":"683"},{"ruleId":"643","severity":1,"message":"684","line":4,"column":9,"nodeType":"645","messageId":"646","endLine":4,"endColumn":13},{"ruleId":"643","severity":1,"message":"685","line":62,"column":7,"nodeType":"645","messageId":"646","endLine":62,"endColumn":25},{"ruleId":"643","severity":1,"message":"686","line":1,"column":31,"nodeType":"645","messageId":"646","endLine":1,"endColumn":35},{"ruleId":"643","severity":1,"message":"687","line":1,"column":37,"nodeType":"645","messageId":"646","endLine":1,"endColumn":48},{"ruleId":"643","severity":1,"message":"688","line":90,"column":7,"nodeType":"645","messageId":"646","endLine":90,"endColumn":16},{"ruleId":"643","severity":1,"message":"689","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":17},{"ruleId":"663","severity":1,"message":"664","line":156,"column":21,"nodeType":"665","endLine":156,"endColumn":71},{"ruleId":"656","severity":1,"message":"657","line":160,"column":52,"nodeType":"658","messageId":"659","endLine":160,"endColumn":54},{"ruleId":"656","severity":1,"message":"657","line":166,"column":52,"nodeType":"658","messageId":"659","endLine":166,"endColumn":54},{"ruleId":"656","severity":1,"message":"657","line":170,"column":52,"nodeType":"658","messageId":"659","endLine":170,"endColumn":54},{"ruleId":"643","severity":1,"message":"688","line":72,"column":7,"nodeType":"645","messageId":"646","endLine":72,"endColumn":16},{"ruleId":"643","severity":1,"message":"684","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"653","line":47,"column":8,"nodeType":"654","endLine":47,"endColumn":10,"suggestions":"690"},{"ruleId":"656","severity":1,"message":"657","line":52,"column":38,"nodeType":"658","messageId":"659","endLine":52,"endColumn":40},{"ruleId":"656","severity":1,"message":"657","line":67,"column":25,"nodeType":"658","messageId":"659","endLine":67,"endColumn":27},{"ruleId":"643","severity":1,"message":"691","line":78,"column":11,"nodeType":"645","messageId":"646","endLine":78,"endColumn":29},{"ruleId":"656","severity":1,"message":"657","line":88,"column":38,"nodeType":"658","messageId":"659","endLine":88,"endColumn":40},{"ruleId":"656","severity":1,"message":"657","line":97,"column":34,"nodeType":"658","messageId":"659","endLine":97,"endColumn":36},{"ruleId":"656","severity":1,"message":"657","line":120,"column":42,"nodeType":"658","messageId":"659","endLine":120,"endColumn":44},{"ruleId":"656","severity":1,"message":"674","line":134,"column":61,"nodeType":"658","messageId":"659","endLine":134,"endColumn":63},{"ruleId":"656","severity":1,"message":"657","line":137,"column":39,"nodeType":"658","messageId":"659","endLine":137,"endColumn":41},{"ruleId":"656","severity":1,"message":"657","line":166,"column":42,"nodeType":"658","messageId":"659","endLine":166,"endColumn":44},{"ruleId":"656","severity":1,"message":"657","line":192,"column":42,"nodeType":"658","messageId":"659","endLine":192,"endColumn":44},{"ruleId":"656","severity":1,"message":"657","line":203,"column":58,"nodeType":"658","messageId":"659","endLine":203,"endColumn":60},{"ruleId":"652","severity":1,"message":"692","line":227,"column":8,"nodeType":"654","endLine":227,"endColumn":10,"suggestions":"693"},{"ruleId":"656","severity":1,"message":"657","line":233,"column":50,"nodeType":"658","messageId":"659","endLine":233,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":248,"column":50,"nodeType":"658","messageId":"659","endLine":248,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":285,"column":74,"nodeType":"658","messageId":"659","endLine":285,"endColumn":76},{"ruleId":"656","severity":1,"message":"657","line":291,"column":74,"nodeType":"658","messageId":"659","endLine":291,"endColumn":76},{"ruleId":"656","severity":1,"message":"657","line":299,"column":66,"nodeType":"658","messageId":"659","endLine":299,"endColumn":68},{"ruleId":"656","severity":1,"message":"657","line":146,"column":40,"nodeType":"658","messageId":"659","endLine":146,"endColumn":42},{"ruleId":"656","severity":1,"message":"674","line":146,"column":61,"nodeType":"658","messageId":"659","endLine":146,"endColumn":63},{"ruleId":"656","severity":1,"message":"657","line":152,"column":43,"nodeType":"658","messageId":"659","endLine":152,"endColumn":45},{"ruleId":"656","severity":1,"message":"657","line":153,"column":43,"nodeType":"658","messageId":"659","endLine":153,"endColumn":45},{"ruleId":"656","severity":1,"message":"657","line":3,"column":47,"nodeType":"658","messageId":"659","endLine":3,"endColumn":49},{"ruleId":"694","severity":1,"message":"695","line":3,"column":63,"nodeType":"658","messageId":"696","endLine":3,"endColumn":64},{"ruleId":"694","severity":1,"message":"695","line":3,"column":69,"nodeType":"658","messageId":"696","endLine":3,"endColumn":70},{"ruleId":"643","severity":1,"message":"697","line":21,"column":7,"nodeType":"645","messageId":"646","endLine":21,"endColumn":14},{"ruleId":"656","severity":1,"message":"657","line":28,"column":39,"nodeType":"658","messageId":"659","endLine":28,"endColumn":41},{"ruleId":"656","severity":1,"message":"657","line":93,"column":42,"nodeType":"658","messageId":"659","endLine":93,"endColumn":44},{"ruleId":"643","severity":1,"message":"698","line":152,"column":7,"nodeType":"645","messageId":"646","endLine":152,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":258,"column":48,"nodeType":"658","messageId":"659","endLine":258,"endColumn":50},{"ruleId":"643","severity":1,"message":"689","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":17},{"ruleId":"663","severity":1,"message":"664","line":155,"column":21,"nodeType":"665","endLine":155,"endColumn":71},{"ruleId":"656","severity":1,"message":"657","line":159,"column":53,"nodeType":"658","messageId":"659","endLine":159,"endColumn":55},{"ruleId":"656","severity":1,"message":"657","line":165,"column":53,"nodeType":"658","messageId":"659","endLine":165,"endColumn":55},{"ruleId":"643","severity":1,"message":"688","line":59,"column":7,"nodeType":"645","messageId":"646","endLine":59,"endColumn":16},{"ruleId":"656","severity":1,"message":"657","line":198,"column":28,"nodeType":"658","messageId":"659","endLine":198,"endColumn":30},{"ruleId":"656","severity":1,"message":"657","line":63,"column":35,"nodeType":"658","messageId":"659","endLine":63,"endColumn":37},{"ruleId":"656","severity":1,"message":"657","line":66,"column":41,"nodeType":"658","messageId":"659","endLine":66,"endColumn":43},{"ruleId":"656","severity":1,"message":"657","line":68,"column":41,"nodeType":"658","messageId":"659","endLine":68,"endColumn":43},{"ruleId":"656","severity":1,"message":"657","line":70,"column":41,"nodeType":"658","messageId":"659","endLine":70,"endColumn":43},{"ruleId":"652","severity":1,"message":"653","line":59,"column":8,"nodeType":"654","endLine":59,"endColumn":10,"suggestions":"699"},{"ruleId":"656","severity":1,"message":"657","line":64,"column":38,"nodeType":"658","messageId":"659","endLine":64,"endColumn":40},{"ruleId":"652","severity":1,"message":"700","line":88,"column":7,"nodeType":"654","endLine":88,"endColumn":26,"suggestions":"701"},{"ruleId":"656","severity":1,"message":"657","line":96,"column":37,"nodeType":"658","messageId":"659","endLine":96,"endColumn":39},{"ruleId":"656","severity":1,"message":"657","line":99,"column":43,"nodeType":"658","messageId":"659","endLine":99,"endColumn":45},{"ruleId":"656","severity":1,"message":"657","line":102,"column":43,"nodeType":"658","messageId":"659","endLine":102,"endColumn":45},{"ruleId":"656","severity":1,"message":"657","line":113,"column":65,"nodeType":"658","messageId":"659","endLine":113,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":121,"column":65,"nodeType":"658","messageId":"659","endLine":121,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":131,"column":57,"nodeType":"658","messageId":"659","endLine":131,"endColumn":59},{"ruleId":"656","severity":1,"message":"657","line":133,"column":47,"nodeType":"658","messageId":"659","endLine":133,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":142,"column":25,"nodeType":"658","messageId":"659","endLine":142,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":159,"column":49,"nodeType":"658","messageId":"659","endLine":159,"endColumn":51},{"ruleId":"656","severity":1,"message":"657","line":164,"column":54,"nodeType":"658","messageId":"659","endLine":164,"endColumn":56},{"ruleId":"656","severity":1,"message":"657","line":167,"column":54,"nodeType":"658","messageId":"659","endLine":167,"endColumn":56},{"ruleId":"656","severity":1,"message":"657","line":170,"column":54,"nodeType":"658","messageId":"659","endLine":170,"endColumn":56},{"ruleId":"656","severity":1,"message":"657","line":173,"column":54,"nodeType":"658","messageId":"659","endLine":173,"endColumn":56},{"ruleId":"643","severity":1,"message":"702","line":2,"column":8,"nodeType":"645","messageId":"646","endLine":2,"endColumn":14},{"ruleId":"656","severity":1,"message":"657","line":16,"column":38,"nodeType":"658","messageId":"659","endLine":16,"endColumn":40},{"ruleId":"656","severity":1,"message":"657","line":22,"column":41,"nodeType":"658","messageId":"659","endLine":22,"endColumn":43},{"ruleId":"643","severity":1,"message":"703","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":24},{"ruleId":"643","severity":1,"message":"704","line":10,"column":26,"nodeType":"645","messageId":"646","endLine":10,"endColumn":47},{"ruleId":"643","severity":1,"message":"705","line":11,"column":10,"nodeType":"645","messageId":"646","endLine":11,"endColumn":27},{"ruleId":"652","severity":1,"message":"653","line":34,"column":8,"nodeType":"654","endLine":34,"endColumn":10,"suggestions":"706"},{"ruleId":"656","severity":1,"message":"657","line":39,"column":38,"nodeType":"658","messageId":"659","endLine":39,"endColumn":40},{"ruleId":"643","severity":1,"message":"707","line":54,"column":12,"nodeType":"645","messageId":"646","endLine":54,"endColumn":19},{"ruleId":"643","severity":1,"message":"708","line":54,"column":21,"nodeType":"645","messageId":"646","endLine":54,"endColumn":31},{"ruleId":"643","severity":1,"message":"709","line":61,"column":29,"nodeType":"645","messageId":"646","endLine":61,"endColumn":47},{"ruleId":"652","severity":1,"message":"700","line":95,"column":8,"nodeType":"654","endLine":95,"endColumn":27,"suggestions":"710"},{"ruleId":"656","severity":1,"message":"657","line":102,"column":50,"nodeType":"658","messageId":"659","endLine":102,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":113,"column":50,"nodeType":"658","messageId":"659","endLine":113,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":122,"column":50,"nodeType":"658","messageId":"659","endLine":122,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":133,"column":46,"nodeType":"658","messageId":"659","endLine":133,"endColumn":48},{"ruleId":"656","severity":1,"message":"657","line":145,"column":46,"nodeType":"658","messageId":"659","endLine":145,"endColumn":48},{"ruleId":"656","severity":1,"message":"657","line":154,"column":50,"nodeType":"658","messageId":"659","endLine":154,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":163,"column":46,"nodeType":"658","messageId":"659","endLine":163,"endColumn":48},{"ruleId":"656","severity":1,"message":"657","line":189,"column":46,"nodeType":"658","messageId":"659","endLine":189,"endColumn":48},{"ruleId":"656","severity":1,"message":"657","line":213,"column":63,"nodeType":"658","messageId":"659","endLine":213,"endColumn":65},{"ruleId":"656","severity":1,"message":"657","line":241,"column":71,"nodeType":"658","messageId":"659","endLine":241,"endColumn":73},{"ruleId":"656","severity":1,"message":"657","line":254,"column":69,"nodeType":"658","messageId":"659","endLine":254,"endColumn":71},{"ruleId":"656","severity":1,"message":"657","line":368,"column":42,"nodeType":"658","messageId":"659","endLine":368,"endColumn":44},{"ruleId":"711","severity":1,"message":"712","line":369,"column":76,"nodeType":"713","messageId":"714","endLine":369,"endColumn":103,"fix":"715"},{"ruleId":"711","severity":1,"message":"716","line":381,"column":64,"nodeType":"713","messageId":"714","endLine":381,"endColumn":84,"fix":"717"},{"ruleId":"656","severity":1,"message":"657","line":393,"column":65,"nodeType":"658","messageId":"659","endLine":393,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":426,"column":42,"nodeType":"658","messageId":"659","endLine":426,"endColumn":44},{"ruleId":"711","severity":1,"message":"712","line":427,"column":82,"nodeType":"713","messageId":"714","endLine":427,"endColumn":109,"fix":"718"},{"ruleId":"711","severity":1,"message":"719","line":439,"column":70,"nodeType":"713","messageId":"714","endLine":439,"endColumn":84,"fix":"720"},{"ruleId":"643","severity":1,"message":"721","line":7,"column":10,"nodeType":"645","messageId":"646","endLine":7,"endColumn":18},{"ruleId":"656","severity":1,"message":"657","line":18,"column":40,"nodeType":"658","messageId":"659","endLine":18,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":20,"column":47,"nodeType":"658","messageId":"659","endLine":20,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":44,"column":40,"nodeType":"658","messageId":"659","endLine":44,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":47,"column":47,"nodeType":"658","messageId":"659","endLine":47,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":49,"column":47,"nodeType":"658","messageId":"659","endLine":49,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":51,"column":47,"nodeType":"658","messageId":"659","endLine":51,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":75,"column":40,"nodeType":"658","messageId":"659","endLine":75,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":78,"column":47,"nodeType":"658","messageId":"659","endLine":78,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":80,"column":47,"nodeType":"658","messageId":"659","endLine":80,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":82,"column":47,"nodeType":"658","messageId":"659","endLine":82,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":109,"column":68,"nodeType":"658","messageId":"659","endLine":109,"endColumn":70},{"ruleId":"656","severity":1,"message":"657","line":110,"column":68,"nodeType":"658","messageId":"659","endLine":110,"endColumn":70},{"ruleId":"656","severity":1,"message":"657","line":111,"column":74,"nodeType":"658","messageId":"659","endLine":111,"endColumn":76},{"ruleId":"656","severity":1,"message":"657","line":125,"column":40,"nodeType":"658","messageId":"659","endLine":125,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":127,"column":47,"nodeType":"658","messageId":"659","endLine":127,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":161,"column":40,"nodeType":"658","messageId":"659","endLine":161,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":163,"column":47,"nodeType":"658","messageId":"659","endLine":163,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":187,"column":40,"nodeType":"658","messageId":"659","endLine":187,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":190,"column":47,"nodeType":"658","messageId":"659","endLine":190,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":192,"column":47,"nodeType":"658","messageId":"659","endLine":192,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":194,"column":47,"nodeType":"658","messageId":"659","endLine":194,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":218,"column":40,"nodeType":"658","messageId":"659","endLine":218,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":221,"column":47,"nodeType":"658","messageId":"659","endLine":221,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":223,"column":47,"nodeType":"658","messageId":"659","endLine":223,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":225,"column":47,"nodeType":"658","messageId":"659","endLine":225,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":249,"column":40,"nodeType":"658","messageId":"659","endLine":249,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":252,"column":47,"nodeType":"658","messageId":"659","endLine":252,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":254,"column":47,"nodeType":"658","messageId":"659","endLine":254,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":256,"column":47,"nodeType":"658","messageId":"659","endLine":256,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":280,"column":40,"nodeType":"658","messageId":"659","endLine":280,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":283,"column":47,"nodeType":"658","messageId":"659","endLine":283,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":285,"column":47,"nodeType":"658","messageId":"659","endLine":285,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":287,"column":47,"nodeType":"658","messageId":"659","endLine":287,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":311,"column":40,"nodeType":"658","messageId":"659","endLine":311,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":313,"column":47,"nodeType":"658","messageId":"659","endLine":313,"endColumn":49},{"ruleId":"643","severity":1,"message":"684","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":14},{"ruleId":"656","severity":1,"message":"657","line":120,"column":156,"nodeType":"658","messageId":"659","endLine":120,"endColumn":158},{"ruleId":"656","severity":1,"message":"657","line":124,"column":156,"nodeType":"658","messageId":"659","endLine":124,"endColumn":158},{"ruleId":"656","severity":1,"message":"657","line":128,"column":162,"nodeType":"658","messageId":"659","endLine":128,"endColumn":164},{"ruleId":"643","severity":1,"message":"721","line":1,"column":10,"nodeType":"645","messageId":"646","endLine":1,"endColumn":18},{"ruleId":"643","severity":1,"message":"660","line":1,"column":20,"nodeType":"645","messageId":"646","endLine":1,"endColumn":26},{"ruleId":"643","severity":1,"message":"644","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":13},{"ruleId":"652","severity":1,"message":"722","line":65,"column":8,"nodeType":"654","endLine":65,"endColumn":25,"suggestions":"723"},{"ruleId":"724","severity":1,"message":"725","line":218,"column":59,"nodeType":"658","messageId":"726","endLine":218,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":225,"column":65,"nodeType":"658","messageId":"659","endLine":225,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":226,"column":79,"nodeType":"658","messageId":"659","endLine":226,"endColumn":81},{"ruleId":"643","severity":1,"message":"721","line":1,"column":10,"nodeType":"645","messageId":"646","endLine":1,"endColumn":18},{"ruleId":"643","severity":1,"message":"660","line":1,"column":20,"nodeType":"645","messageId":"646","endLine":1,"endColumn":26},{"ruleId":"643","severity":1,"message":"644","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":13},{"ruleId":"652","severity":1,"message":"722","line":89,"column":8,"nodeType":"654","endLine":89,"endColumn":25,"suggestions":"727"},{"ruleId":"724","severity":1,"message":"725","line":244,"column":59,"nodeType":"658","messageId":"726","endLine":244,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":250,"column":65,"nodeType":"658","messageId":"659","endLine":250,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":251,"column":79,"nodeType":"658","messageId":"659","endLine":251,"endColumn":81},{"ruleId":"643","severity":1,"message":"721","line":7,"column":10,"nodeType":"645","messageId":"646","endLine":7,"endColumn":18},{"ruleId":"656","severity":1,"message":"657","line":48,"column":41,"nodeType":"658","messageId":"659","endLine":48,"endColumn":43},{"ruleId":"643","severity":1,"message":"702","line":1,"column":8,"nodeType":"645","messageId":"646","endLine":1,"endColumn":14},{"ruleId":"652","severity":1,"message":"728","line":31,"column":8,"nodeType":"654","endLine":31,"endColumn":18,"suggestions":"729"},{"ruleId":"652","severity":1,"message":"730","line":67,"column":7,"nodeType":"654","endLine":67,"endColumn":21,"suggestions":"731"},{"ruleId":"656","severity":1,"message":"657","line":78,"column":50,"nodeType":"658","messageId":"659","endLine":78,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":86,"column":50,"nodeType":"658","messageId":"659","endLine":86,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":104,"column":58,"nodeType":"658","messageId":"659","endLine":104,"endColumn":60},{"ruleId":"643","severity":1,"message":"689","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":17},{"ruleId":"663","severity":1,"message":"664","line":158,"column":21,"nodeType":"665","endLine":158,"endColumn":71},{"ruleId":"656","severity":1,"message":"657","line":162,"column":52,"nodeType":"658","messageId":"659","endLine":162,"endColumn":54},{"ruleId":"656","severity":1,"message":"657","line":168,"column":52,"nodeType":"658","messageId":"659","endLine":168,"endColumn":54},{"ruleId":"656","severity":1,"message":"657","line":54,"column":55,"nodeType":"658","messageId":"659","endLine":54,"endColumn":57},{"ruleId":"656","severity":1,"message":"657","line":55,"column":66,"nodeType":"658","messageId":"659","endLine":55,"endColumn":68},{"ruleId":"656","severity":1,"message":"657","line":56,"column":66,"nodeType":"658","messageId":"659","endLine":56,"endColumn":68},{"ruleId":"656","severity":1,"message":"657","line":57,"column":70,"nodeType":"658","messageId":"659","endLine":57,"endColumn":72},{"ruleId":"656","severity":1,"message":"657","line":60,"column":41,"nodeType":"658","messageId":"659","endLine":60,"endColumn":43},{"ruleId":"643","severity":1,"message":"675","line":1,"column":10,"nodeType":"645","messageId":"646","endLine":1,"endColumn":19},{"ruleId":"643","severity":1,"message":"721","line":1,"column":21,"nodeType":"645","messageId":"646","endLine":1,"endColumn":29},{"ruleId":"656","severity":1,"message":"657","line":48,"column":41,"nodeType":"658","messageId":"659","endLine":48,"endColumn":43},{"ruleId":"643","severity":1,"message":"702","line":1,"column":8,"nodeType":"645","messageId":"646","endLine":1,"endColumn":14},{"ruleId":"643","severity":1,"message":"660","line":2,"column":31,"nodeType":"645","messageId":"646","endLine":2,"endColumn":37},{"ruleId":"652","severity":1,"message":"700","line":46,"column":7,"nodeType":"654","endLine":46,"endColumn":17,"suggestions":"732"},{"ruleId":"656","severity":1,"message":"657","line":55,"column":54,"nodeType":"658","messageId":"659","endLine":55,"endColumn":56},{"ruleId":"656","severity":1,"message":"657","line":58,"column":58,"nodeType":"658","messageId":"659","endLine":58,"endColumn":60},{"ruleId":"643","severity":1,"message":"733","line":4,"column":8,"nodeType":"645","messageId":"646","endLine":4,"endColumn":21},{"ruleId":"656","severity":1,"message":"657","line":53,"column":69,"nodeType":"658","messageId":"659","endLine":53,"endColumn":71},{"ruleId":"643","severity":1,"message":"721","line":7,"column":10,"nodeType":"645","messageId":"646","endLine":7,"endColumn":18},{"ruleId":"656","severity":1,"message":"657","line":18,"column":40,"nodeType":"658","messageId":"659","endLine":18,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":20,"column":47,"nodeType":"658","messageId":"659","endLine":20,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":44,"column":40,"nodeType":"658","messageId":"659","endLine":44,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":47,"column":47,"nodeType":"658","messageId":"659","endLine":47,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":49,"column":47,"nodeType":"658","messageId":"659","endLine":49,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":51,"column":47,"nodeType":"658","messageId":"659","endLine":51,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":75,"column":40,"nodeType":"658","messageId":"659","endLine":75,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":78,"column":47,"nodeType":"658","messageId":"659","endLine":78,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":80,"column":47,"nodeType":"658","messageId":"659","endLine":80,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":82,"column":47,"nodeType":"658","messageId":"659","endLine":82,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":107,"column":40,"nodeType":"658","messageId":"659","endLine":107,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":110,"column":47,"nodeType":"658","messageId":"659","endLine":110,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":112,"column":47,"nodeType":"658","messageId":"659","endLine":112,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":114,"column":47,"nodeType":"658","messageId":"659","endLine":114,"endColumn":49},{"ruleId":"643","severity":1,"message":"688","line":59,"column":7,"nodeType":"645","messageId":"646","endLine":59,"endColumn":16},{"ruleId":"643","severity":1,"message":"734","line":142,"column":7,"nodeType":"645","messageId":"646","endLine":142,"endColumn":28},{"ruleId":"643","severity":1,"message":"735","line":177,"column":21,"nodeType":"645","messageId":"646","endLine":177,"endColumn":31},{"ruleId":"643","severity":1,"message":"736","line":178,"column":19,"nodeType":"645","messageId":"646","endLine":178,"endColumn":27},{"ruleId":"643","severity":1,"message":"737","line":179,"column":22,"nodeType":"645","messageId":"646","endLine":179,"endColumn":33},{"ruleId":"656","severity":1,"message":"657","line":198,"column":28,"nodeType":"658","messageId":"659","endLine":198,"endColumn":30},{"ruleId":"643","severity":1,"message":"738","line":10,"column":8,"nodeType":"645","messageId":"646","endLine":10,"endColumn":21},{"ruleId":"643","severity":1,"message":"739","line":11,"column":8,"nodeType":"645","messageId":"646","endLine":11,"endColumn":20},{"ruleId":"643","severity":1,"message":"740","line":12,"column":8,"nodeType":"645","messageId":"646","endLine":12,"endColumn":20},{"ruleId":"652","severity":1,"message":"653","line":30,"column":8,"nodeType":"654","endLine":30,"endColumn":10,"suggestions":"741"},{"ruleId":"656","severity":1,"message":"657","line":35,"column":38,"nodeType":"658","messageId":"659","endLine":35,"endColumn":40},{"ruleId":"643","severity":1,"message":"742","line":46,"column":12,"nodeType":"645","messageId":"646","endLine":46,"endColumn":28},{"ruleId":"643","severity":1,"message":"743","line":48,"column":12,"nodeType":"645","messageId":"646","endLine":48,"endColumn":28},{"ruleId":"652","severity":1,"message":"744","line":64,"column":8,"nodeType":"654","endLine":64,"endColumn":18,"suggestions":"745"},{"ruleId":"656","severity":1,"message":"657","line":71,"column":50,"nodeType":"658","messageId":"659","endLine":71,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":97,"column":50,"nodeType":"658","messageId":"659","endLine":97,"endColumn":52},{"ruleId":"656","severity":1,"message":"657","line":123,"column":42,"nodeType":"658","messageId":"659","endLine":123,"endColumn":44},{"ruleId":"656","severity":1,"message":"657","line":124,"column":36,"nodeType":"658","messageId":"659","endLine":124,"endColumn":38},{"ruleId":"711","severity":1,"message":"746","line":126,"column":68,"nodeType":"713","messageId":"714","endLine":126,"endColumn":100,"fix":"747"},{"ruleId":"656","severity":1,"message":"657","line":127,"column":42,"nodeType":"658","messageId":"659","endLine":127,"endColumn":44},{"ruleId":"711","severity":1,"message":"746","line":129,"column":67,"nodeType":"713","messageId":"714","endLine":129,"endColumn":99,"fix":"748"},{"ruleId":"656","severity":1,"message":"657","line":165,"column":58,"nodeType":"658","messageId":"659","endLine":165,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":170,"column":58,"nodeType":"658","messageId":"659","endLine":170,"endColumn":60},{"ruleId":"643","severity":1,"message":"749","line":182,"column":23,"nodeType":"645","messageId":"646","endLine":182,"endColumn":45},{"ruleId":"711","severity":1,"message":"750","line":228,"column":52,"nodeType":"713","messageId":"714","endLine":228,"endColumn":71,"fix":"751"},{"ruleId":"656","severity":1,"message":"657","line":231,"column":60,"nodeType":"658","messageId":"659","endLine":231,"endColumn":62},{"ruleId":"656","severity":1,"message":"657","line":240,"column":60,"nodeType":"658","messageId":"659","endLine":240,"endColumn":62},{"ruleId":"711","severity":1,"message":"750","line":262,"column":52,"nodeType":"713","messageId":"714","endLine":262,"endColumn":71,"fix":"752"},{"ruleId":"643","severity":1,"message":"721","line":7,"column":10,"nodeType":"645","messageId":"646","endLine":7,"endColumn":18},{"ruleId":"643","severity":1,"message":"753","line":2,"column":8,"nodeType":"645","messageId":"646","endLine":2,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":19,"column":40,"nodeType":"658","messageId":"659","endLine":19,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":21,"column":47,"nodeType":"658","messageId":"659","endLine":21,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":45,"column":40,"nodeType":"658","messageId":"659","endLine":45,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":48,"column":47,"nodeType":"658","messageId":"659","endLine":48,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":50,"column":47,"nodeType":"658","messageId":"659","endLine":50,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":52,"column":47,"nodeType":"658","messageId":"659","endLine":52,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":76,"column":40,"nodeType":"658","messageId":"659","endLine":76,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":79,"column":47,"nodeType":"658","messageId":"659","endLine":79,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":81,"column":47,"nodeType":"658","messageId":"659","endLine":81,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":83,"column":47,"nodeType":"658","messageId":"659","endLine":83,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":107,"column":40,"nodeType":"658","messageId":"659","endLine":107,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":110,"column":47,"nodeType":"658","messageId":"659","endLine":110,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":112,"column":47,"nodeType":"658","messageId":"659","endLine":112,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":114,"column":47,"nodeType":"658","messageId":"659","endLine":114,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":139,"column":40,"nodeType":"658","messageId":"659","endLine":139,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":141,"column":47,"nodeType":"658","messageId":"659","endLine":141,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":165,"column":40,"nodeType":"658","messageId":"659","endLine":165,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":168,"column":47,"nodeType":"658","messageId":"659","endLine":168,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":170,"column":47,"nodeType":"658","messageId":"659","endLine":170,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":172,"column":47,"nodeType":"658","messageId":"659","endLine":172,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":197,"column":40,"nodeType":"658","messageId":"659","endLine":197,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":200,"column":47,"nodeType":"658","messageId":"659","endLine":200,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":202,"column":47,"nodeType":"658","messageId":"659","endLine":202,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":204,"column":47,"nodeType":"658","messageId":"659","endLine":204,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":228,"column":40,"nodeType":"658","messageId":"659","endLine":228,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":231,"column":47,"nodeType":"658","messageId":"659","endLine":231,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":233,"column":47,"nodeType":"658","messageId":"659","endLine":233,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":235,"column":47,"nodeType":"658","messageId":"659","endLine":235,"endColumn":49},{"ruleId":"656","severity":1,"message":"657","line":271,"column":40,"nodeType":"658","messageId":"659","endLine":271,"endColumn":42},{"ruleId":"656","severity":1,"message":"657","line":273,"column":47,"nodeType":"658","messageId":"659","endLine":273,"endColumn":49},{"ruleId":"643","severity":1,"message":"721","line":7,"column":10,"nodeType":"645","messageId":"646","endLine":7,"endColumn":18},{"ruleId":"643","severity":1,"message":"675","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":19},{"ruleId":"724","severity":1,"message":"725","line":220,"column":59,"nodeType":"658","messageId":"726","endLine":220,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":227,"column":65,"nodeType":"658","messageId":"659","endLine":227,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":228,"column":79,"nodeType":"658","messageId":"659","endLine":228,"endColumn":81},{"ruleId":"643","severity":1,"message":"675","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":19},{"ruleId":"724","severity":1,"message":"725","line":220,"column":59,"nodeType":"658","messageId":"726","endLine":220,"endColumn":60},{"ruleId":"656","severity":1,"message":"657","line":227,"column":65,"nodeType":"658","messageId":"659","endLine":227,"endColumn":67},{"ruleId":"656","severity":1,"message":"657","line":228,"column":79,"nodeType":"658","messageId":"659","endLine":228,"endColumn":81},{"ruleId":"656","severity":1,"message":"657","line":48,"column":41,"nodeType":"658","messageId":"659","endLine":48,"endColumn":43},{"ruleId":"643","severity":1,"message":"660","line":1,"column":31,"nodeType":"645","messageId":"646","endLine":1,"endColumn":37},{"ruleId":"643","severity":1,"message":"702","line":2,"column":8,"nodeType":"645","messageId":"646","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"744","line":47,"column":8,"nodeType":"654","endLine":47,"endColumn":18,"suggestions":"754"},{"ruleId":"656","severity":1,"message":"657","line":56,"column":50,"nodeType":"658","messageId":"659","endLine":56,"endColumn":52},{"ruleId":"643","severity":1,"message":"755","line":66,"column":11,"nodeType":"645","messageId":"646","endLine":66,"endColumn":34},{"ruleId":"643","severity":1,"message":"689","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":17},{"ruleId":"663","severity":1,"message":"664","line":158,"column":21,"nodeType":"665","endLine":158,"endColumn":71},{"ruleId":"656","severity":1,"message":"657","line":162,"column":52,"nodeType":"658","messageId":"659","endLine":162,"endColumn":54},{"ruleId":"656","severity":1,"message":"657","line":130,"column":64,"nodeType":"658","messageId":"659","endLine":130,"endColumn":66},{"ruleId":"643","severity":1,"message":"675","line":1,"column":10,"nodeType":"645","messageId":"646","endLine":1,"endColumn":19},{"ruleId":"643","severity":1,"message":"721","line":1,"column":21,"nodeType":"645","messageId":"646","endLine":1,"endColumn":29},{"ruleId":"643","severity":1,"message":"756","line":85,"column":7,"nodeType":"645","messageId":"646","endLine":85,"endColumn":22},{"ruleId":"643","severity":1,"message":"757","line":93,"column":7,"nodeType":"645","messageId":"646","endLine":93,"endColumn":21},{"ruleId":"643","severity":1,"message":"758","line":104,"column":7,"nodeType":"645","messageId":"646","endLine":104,"endColumn":19},{"ruleId":"643","severity":1,"message":"702","line":2,"column":8,"nodeType":"645","messageId":"646","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"744","line":50,"column":8,"nodeType":"654","endLine":50,"endColumn":18,"suggestions":"759"},{"ruleId":"656","severity":1,"message":"657","line":100,"column":54,"nodeType":"658","messageId":"659","endLine":100,"endColumn":56},{"ruleId":"656","severity":1,"message":"657","line":103,"column":61,"nodeType":"658","messageId":"659","endLine":103,"endColumn":63},{"ruleId":"643","severity":1,"message":"733","line":2,"column":8,"nodeType":"645","messageId":"646","endLine":2,"endColumn":21},{"ruleId":"643","severity":1,"message":"760","line":58,"column":7,"nodeType":"645","messageId":"646","endLine":58,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":48,"column":41,"nodeType":"658","messageId":"659","endLine":48,"endColumn":43},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["761"],"no-negated-in-lhs",["762"],"'$' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCheckLoged'. Either include it or remove the dependency array.","ArrayExpression",["763"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'LineBreaker1' is assigned a value but never used.","'Slider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ContainerSubTitle' is assigned a value but never used.","'CardBox' is assigned a value but never used.","'CardImg' is assigned a value but never used.","'DescBox' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'propTypes' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setLinkList' is assigned a value but never used.","'ButtonEl' is assigned a value but never used.","'setCompanyInfo' is assigned a value but never used.",["761"],["762"],"'Link' is defined but never used.","'IntroduceBodyTitle' is assigned a value but never used.","'memo' is defined but never used.","'useCallback' is defined but never used.","'ExplainEl' is assigned a value but never used.","'faCaretRight' is defined but never used.",["764"],"'handleLogoutSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handleVideoDataConnect'. Either include it or remove the dependency array.",["765"],"no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","'ItemBox' is assigned a value but never used.","'ItemTitle' is assigned a value but never used.",["766"],"React Hook useEffect has a missing dependency: '__handleDataConnect'. Either include it or remove the dependency array.",["767"],"'styled' is defined but never used.","'dateToYYYYMMDD' is defined but never used.","'dateToYYYYMMDD_hhmmss' is defined but never used.","'handleScrollToTop' is defined but never used.",["768"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setAddCategoryName' is assigned a value but never used.",["769"],"no-useless-computed-key","Unnecessarily computed property ['imageUrl'] found.","Property","unnecessarilyComputedProperty",{"range":"770","text":"771"},"Unnecessarily computed property ['editorData'] found.",{"range":"772","text":"773"},{"range":"774","text":"771"},"Unnecessarily computed property ['desc'] found.",{"range":"775","text":"776"},"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleScrollToMe'. Either include it or remove the dependency array.",["777"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["778"],"React Hook useEffect has a missing dependency: 'query.pageIndex'. Either include it or remove the dependency array.",["779"],"React Hook useEffect has a missing dependency: 'handleSetSelectedCategory'. Either include it or remove the dependency array.",["780"],["781"],"'ClassicEditor' is defined but never used.","'ApplicationDatePicker' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setFloor' is assigned a value but never used.","'setOpenDate' is assigned a value but never used.","'AreaComponent' is defined but never used.","'AddAreaModal' is defined but never used.","'FixAreaModal' is defined but never used.",["782"],"'addAreaModalOpen' is assigned a value but never used.","'fixAreaModalOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handleStoreDataConnect'. Either include it or remove the dependency array.",["783"],"Unnecessarily computed property ['storeImageUrl'] found.",{"range":"784","text":"785"},{"range":"786","text":"785"},"'handleAreaEventControl' is assigned a value but never used.","Unnecessarily computed property ['storeDesc'] found.",{"range":"787","text":"788"},{"range":"789","text":"788"},"'queryString' is defined but never used.",["790"],"'handleStoreEventControl' is assigned a value but never used.","'ProductImageBox' is assigned a value but never used.","'ProductImageEl' is assigned a value but never used.","'ProductImage' is assigned a value but never used.",["791"],"'ExplainEl2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"792","fix":"793"},{"desc":"792","fix":"794"},{"desc":"795","fix":"796"},{"desc":"792","fix":"797"},{"desc":"798","fix":"799"},{"desc":"792","fix":"800"},{"desc":"798","fix":"801"},[14106,14118],"'imageUrl'",[14456,14470],"'editorData'",[16505,16517],[16864,16872],"'desc'",{"desc":"802","fix":"803"},{"desc":"802","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"792","fix":"811"},{"desc":"812","fix":"813"},[4944,4961],"'storeImageUrl'",[5168,5185],[8996,9009],"'storeDesc'",[10573,10586],{"desc":"812","fix":"814"},{"desc":"812","fix":"815"},"Update the dependencies array to be: [handleCheckLoged]",{"range":"816","text":"817"},{"range":"818","text":"817"},"Update the dependencies array to be: [__handleVideoDataConnect]",{"range":"819","text":"820"},{"range":"821","text":"817"},"Update the dependencies array to be: [__handleDataConnect, isLoged, location]",{"range":"822","text":"823"},{"range":"824","text":"817"},{"range":"825","text":"823"},"Update the dependencies array to be: [handleScrollToMe, props.modalOpen]",{"range":"826","text":"827"},{"range":"828","text":"827"},"Update the dependencies array to be: [location, query.pageIndex]",{"range":"829","text":"830"},"Update the dependencies array to be: [categoryList, handleSetSelectedCategory]",{"range":"831","text":"832"},"Update the dependencies array to be: [__handleDataConnect, location]",{"range":"833","text":"834"},{"range":"835","text":"817"},"Update the dependencies array to be: [__handleStoreDataConnect, location]",{"range":"836","text":"837"},{"range":"838","text":"837"},{"range":"839","text":"837"},[712,714],"[handleCheckLoged]",[1238,1240],[7533,7535],"[__handleVideoDataConnect]",[1467,1469],[2260,2279],"[__handleDataConnect, isLoged, location]",[1190,1192],[3228,3247],[1659,1676],"[handleScrollToMe, props.modalOpen]",[2548,2565],[1056,1066],"[location, query.pageIndex]",[2061,2075],"[categoryList, handleSetSelectedCategory]",[1427,1437],"[__handleDataConnect, location]",[983,985],[2266,2276],"[__handleStoreDataConnect, location]",[1483,1493],[1432,1442]]