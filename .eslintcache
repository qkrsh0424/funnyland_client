[{"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js":"1","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js":"2","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js":"3","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js":"4","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js":"5","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js":"6","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js":"7","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js":"8","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js":"9","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js":"10","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js":"11","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js":"12","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js":"13","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js":"14","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js":"15","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js":"16","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js":"17","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js":"18","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js":"19","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js":"20","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js":"21","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js":"22","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js":"23","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js":"24","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js":"25","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js":"26","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js":"27","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js":"28","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js":"29","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js":"30","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js":"31","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js":"32","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js":"33","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js":"34","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js":"35","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js":"36","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js":"37","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js":"38","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js":"39","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js":"40"},{"size":670,"mtime":1612407882854,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"42"},{"size":3908,"mtime":1613545511710,"results":"44","hashOfConfig":"42"},{"size":723,"mtime":1612407882726,"results":"45","hashOfConfig":"42"},{"size":2854,"mtime":1612772389276,"results":"46","hashOfConfig":"42"},{"size":3419,"mtime":1614042660058,"results":"47","hashOfConfig":"42"},{"size":1613,"mtime":1613715797939,"results":"48","hashOfConfig":"42"},{"size":5198,"mtime":1614055575141,"results":"49","hashOfConfig":"42"},{"size":5819,"mtime":1613440778369,"results":"50","hashOfConfig":"42"},{"size":7502,"mtime":1614055691483,"results":"51","hashOfConfig":"42"},{"size":95,"mtime":1613540029246,"results":"52","hashOfConfig":"42"},{"size":6067,"mtime":1614057911950,"results":"53","hashOfConfig":"42"},{"size":3031,"mtime":1614057370807,"results":"54","hashOfConfig":"42"},{"size":1389,"mtime":1612407882668,"results":"55","hashOfConfig":"42"},{"size":586,"mtime":1612417471208,"results":"56","hashOfConfig":"42"},{"size":6406,"mtime":1614056819803,"results":"57","hashOfConfig":"42"},{"size":7758,"mtime":1614057009834,"results":"58","hashOfConfig":"42"},{"size":4543,"mtime":1614056583124,"results":"59","hashOfConfig":"42"},{"size":10637,"mtime":1614056886659,"results":"60","hashOfConfig":"42"},{"size":1556,"mtime":1612511260961,"results":"61","hashOfConfig":"42"},{"size":4589,"mtime":1613445554670,"results":"62","hashOfConfig":"42"},{"size":8081,"mtime":1613455097215,"results":"63","hashOfConfig":"42"},{"size":4984,"mtime":1612866471017,"results":"64","hashOfConfig":"42"},{"size":1227,"mtime":1613465917115,"results":"65","hashOfConfig":"42"},{"size":1803,"mtime":1612865302982,"results":"66","hashOfConfig":"42"},{"size":5870,"mtime":1614055170118,"results":"67","hashOfConfig":"42"},{"size":9846,"mtime":1614057086488,"results":"68","hashOfConfig":"42"},{"size":4393,"mtime":1614056573669,"results":"69","hashOfConfig":"42"},{"size":11984,"mtime":1614057157593,"results":"70","hashOfConfig":"42"},{"size":2774,"mtime":1613540770196,"results":"71","hashOfConfig":"42"},{"size":9093,"mtime":1613541010550,"results":"72","hashOfConfig":"42"},{"size":2165,"mtime":1613545528358,"results":"73","hashOfConfig":"42"},{"size":2099,"mtime":1613540744745,"results":"74","hashOfConfig":"42"},{"size":15137,"mtime":1613712782241,"results":"75","hashOfConfig":"42"},{"size":2565,"mtime":1613712391737,"results":"76","hashOfConfig":"42"},{"size":8428,"mtime":1613641167131,"results":"77","hashOfConfig":"42"},{"size":2562,"mtime":1613552763911,"results":"78","hashOfConfig":"42"},{"size":7827,"mtime":1613641053562,"results":"79","hashOfConfig":"42"},{"size":9996,"mtime":1613640739910,"results":"80","hashOfConfig":"42"},{"size":10061,"mtime":1613640676146,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1a97x7k",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":4,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"85"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"85"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"85"},"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js",["182"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport axios from 'axios';\n// axios.defaults.xsrfCookieName='XSRF-TOKEN';\n// axios.defaults.xsrfHeaderName='X-XSRF-TOKEN';\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["183","184"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js",["185","186","187"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport {getCookie} from '../../../handler/CookieHandler';\nimport { useEffect, useState } from 'react';\nconst Container = styled.div`\n    height:100vh;\n    padding:100px 8px;\n`;\n\nconst PageTitle = styled.div`\n    text-align:center;\n    font-size:24px;\n    font-weight:700;\n\n`;\n\nconst LoginMain = ({history}) =>{\n    const [username,setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [notLoged, setNotLoged] = useState(true);\n    useEffect(()=>{\n        console.log('em')\n        async function effectInit(){\n            await handleCheckLoged();\n        }\n        effectInit();\n    },[]);\n\n    const handleCheckLoged = async () =>{\n        await axios.get('/api/auth/check/loged')\n        .then(res=>{\n            if(res.data.message == 'success' ){\n                history.push('/admin')\n                return;\n            }else{\n                setNotLoged(false);\n            }\n        })\n    }\n\n    const handleRequestLogin = (e) =>{\n        e.preventDefault();\n        axios.post('/api/auth/login',{\n                username:username,\n                password:password\n            },\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n        .then(res=>{\n            history.push('/admin')\n        })\n    }\n\n    const loginValueChange = () =>{\n        return{\n            username: function(e){\n                setUsername(e.target.value)\n            },\n            password: function(e){\n                setPassword(e.target.value)\n            }\n        }\n    }\n    return(\n        <Container className='container'>\n            {notLoged ? <></>:\n                <>\n                    <PageTitle>관리자 페이지 로그인</PageTitle>\n                    <form onSubmit={(e)=>handleRequestLogin(e)}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_username\">관리자 아이디</label>\n                            <input type=\"text\" className=\"form-control\" id=\"i_admin_username\" aria-describedby=\"emailHelp\" onChange={(e)=>loginValueChange().username(e)} value={username}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_password\">관리자 패스워드</label>\n                            <input type=\"password\" className=\"form-control\" id=\"i_admin_password\" onChange={(e)=>loginValueChange().password(e)} value={password}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">로그인</button>\n                    </form>\n                </>\n            }\n            \n        </Container>\n    );\n}\n\nexport default LoginMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js",["188"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js",["189","190"],"import styled from 'styled-components';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst Container = styled.div`\n    .thumbs { \n        text-align: center;\n    }\n    .slide .pcy-banner-image{\n        max-height:900px;\n        object-fit: cover;\n    }\n    // 이미지 크기 최적화 사이즈 1920x850\n    @media only screen and (max-width: 768px){\n        .slide .pcy-banner-image{\n            height:45vh;\n            object-fit: cover;\n        }\n    }\n`;\n\nconst BannerCarouselFullSize = (props) => {\n    const {\n        banners\n    } = props;\n    return (\n        <Container>\n            <Carousel\n                autoPlay={false}\n                interval={4000}\n                infiniteLoop={true}\n                dynamicHeight={true}\n                showIndicators={true}\n                showThumbs={false}\n                showStatus={true}\n                stopOnHover={false}\n                transitionTime={1000}\n            >\n                {\n                    banners.length>0 && banners.map((r)=>{\n                        return(\n                            <div key={r.id}>\n                                <img className=\"pcy-banner-image\" src={r.imageUrl} />\n                            </div>        \n                        )\n                    })\n                }\n                \n            </Carousel>\n        </Container>\n    )\n}\n\nexport default BannerCarouselFullSize;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js",["191"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js",["192","193"],"import { useState } from 'react';\nimport styled from 'styled-components';\n\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\n// data connect\nimport { counselingDataConnect } from '../../data_connect/CounselingDataConnect';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\nconst ApplyFormModal = (props) => {\n    const {\n        dialogOpen\n    } = props;\n\n    const {\n        mainHandleDialogControl\n    } = props;\n\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [privacyAgreeChecked, setPrivacyAgreeChecked] = useState(false);\n\n    const thisHandleValueOnChange = () => {\n        return {\n            changeCounselingType: function(e){\n                setCounselingType(e.target.value);\n            },\n            changeApplierName: function (e) {\n                setApplierName(e.target.value);\n            },\n            changeApplierPhone: function (e) {\n                setApplierPhone(e.target.value);\n            },\n            changeApplierArea: function (e) {\n                setApplierArea(e.target.value);\n            },\n            changePrivacyAreeChecked: function(e){\n                setPrivacyAgreeChecked(e.target.checked);\n            },\n            allClear: function () {\n                setApplierName('');\n                setApplierPhone('');\n                setApplierArea('');\n                setPrivacyAgreeChecked(false);\n            }\n        }\n    }\n\n    const thisHandleClose = () => {\n        mainHandleDialogControl().close();\n        thisHandleValueOnChange().allClear();\n    }\n\n    const thisHandleFormSubmit = async (e) => {\n        e.preventDefault();\n        if(privacyAgreeChecked!=true){\n            alert('개인정보 수집 동의에 체크해주세요');\n            return;\n        }\n        let jsonData = {\n            counselingType:counselingType,\n            applierName: applierName,\n            applierPhone: applierPhone,\n            applierArea: applierArea,\n            privacyAgreement:privacyAgreeChecked?'동의':'비동의'\n        };\n        await counselingDataConnect().insertCounselingOne(jsonData)\n            .then(data => {\n                if (data.message == 'success') {\n                    alert('상담이 신청되었습니다.');\n                    thisHandleClose();\n                }\n            });\n    }\n\n    return (\n        <Dialog\n            fullWidth={true}\n            open={dialogOpen}\n            onClose={thisHandleClose}\n        >\n            <DialogTitle className='text-center'>{\"신속한 상담신청\"}</DialogTitle>\n            <form onSubmit={(e) => thisHandleFormSubmit(e)}>\n                <DialogContent>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"i_counseling_type\">상담구분</label>\n                        <select className=\"form-control\" defaultValue={counselingType} onChange={(e)=>thisHandleValueOnChange().changeCounselingType(e)}>\n                            <option value='counseling'>창업상담</option>\n                            <option value='purchase'>상품구매상담</option>\n                        </select>\n                        {/* <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeCounselingType(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" /> */}\n                    </div>\n                    <div className=\"form-group\">\n                        <label>이름</label>\n                        <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeApplierName(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>연락처</label>\n                        <input type=\"text\" value={applierPhone} onChange={(e) => thisHandleValueOnChange().changeApplierPhone(e)} className=\"form-control\" placeholder=\"'-' 를 제외한 연락처를 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>희망지역 or 상품설치지역</label>\n                        <input type=\"text\" value={applierArea} onChange={(e) => thisHandleValueOnChange().changeApplierArea(e)} className=\"form-control\" placeholder=\"지역을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={privacyAgreeChecked} onChange={(e)=>thisHandleValueOnChange().changePrivacyAreeChecked(e)} required/>\n                        <label className=\"form-check-label\">\n                            개인정보 수집 동의\n                        </label>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type='button' onClick={thisHandleClose} color=\"secondary\">\n                        취소\n                    </Button>\n                    <Button type='submit' color=\"primary\">\n                        문의등록\n                    </Button>\n                </DialogActions>\n            </form>\n\n        </Dialog>\n    )\n}\nApplyFormModal.defaultProps = {\n}\nexport default ApplyFormModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js",["194","195","196"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js",["197"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js",["198"],"import { useState } from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    background:#282828;\n    padding:50px 0 20vh 0;\n    color:#777;\n    text-align:center;\n    font-size:14px;\n    @media only screen and (max-width:768px){\n        font-size:10px;\n    }\n`;\n\nconst CompanyDetailText = styled.div`\n\n`;\n\nconst CopyrightText = styled.div`\n    margin-top: 5px;\n    font-size: 13px;\n    color: #555;\n`;\nconst FooterDefault = () =>{\n    const [companyInfo, setCompanyInfo] = useState({\n        name:'주식회사 게임토피아',\n        president: '조정준',\n        bussinessNo:'xxx-xx-xxxxx',\n        address:'서울특별시 중구 청계천로 160(산림동) 대림상가 2F 다열 265호',\n        tel:'02-2272-1244',\n        fax:'02-2274-1244',\n        mobile:'010-5381-9104',\n        copyright:'게임토피아'\n    });\n    return(\n        <Container>\n            <CompanyDetailText>업체명: {companyInfo.name} | 대표: {companyInfo.president} | 사업자번호: {companyInfo.bussinessNo}</CompanyDetailText>\n            <CompanyDetailText>주소: {companyInfo.address}</CompanyDetailText>\n            <CompanyDetailText>TEL: {companyInfo.tel} | FAX: {companyInfo.fax}</CompanyDetailText>\n            <CopyrightText>Copyright(c) {companyInfo.name}, All rights reserved.</CopyrightText>\n        </Container>\n    );\n}\n\nexport default FooterDefault;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js",[],["199","200"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js",["201","202"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js",["203","204","205"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js",["206","207","208","209","210"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js",["211"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js",["212","213","214","215","216","217","218","219","220","221","222","223","224"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { uuidv4 } from '../../../../handler/MyHandlers';\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport AdminBannerManage from './AdminBannerManage';\n// data connector\nimport { bannerDataConnect } from '../../../data_connect/BannerDataConnect';\n\nconst Container = styled.div`\noverflow:hidden;\n`;\n\nconst FullPageLoading = styled.div`\n    position:fixed;\n    height:100%;\n    width:100%;\n    z-index:1999;\n    background-color:#80808050;\n`;\n\nconst FullPageLoadingSpinner = styled.div`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n`;\n\nconst AdminHomeMain = ({history}) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [bannerListLoading, setBannerListLoading] = useState(true);\n    const [bannerList, setBannerList] = useState([]);\n    useEffect(()=>{\n        \n        async function effectInit() {\n            if(isLoged==false){\n                return;\n            }\n            await handleGetBanners();\n        }\n        effectInit();\n    },[isLoged])\n\n    const [uploadFile, setUploadFile] = useState([]);\n    const [fullPageLoading, setFullPageLoading] = useState(false);\n\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    // history.push('/');\n                }\n            })\n    }\n\n    const handleGetBanners = async () =>{\n        await bannerDataConnect().searchBanners()\n        .then(data=>{\n            if(data.message=='success'){\n                setBannerList(data.data);\n            }\n        })\n        setBannerListLoading(false);\n    }\n\n    const handleBannerImage = () => {\n        return {\n            uploaderOpen: function(){\n                document.getElementById('i_banner_uploadfile').click();\n            },\n            upToServer: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await bannerDataConnect().imageUploadToS3(fd).then(data => {\n                        document.getElementById('i_banner_uploadfile').value = '';\n                        if (data.message == 'success') {\n                            setUploadFile([\n                                ...uploadFile,\n                                {\n                                    uuid: uuidv4(),\n                                    imageUrl: data.imageUrl\n                                }\n                            ])\n                        }\n                    });\n                    setFullPageLoading(false);\n                }\n            },\n            deleteImage: function (uuid) {\n                setUploadFile(uploadFile.filter(r => r.uuid != uuid));\n            },\n            submitBanner: async function () {\n                if(uploadFile.length==0){\n                    return;\n                }\n                setFullPageLoading(true);\n                await bannerDataConnect().insertBanners(uploadFile)\n                .then(data=>{\n                    setUploadFile([]);\n                });\n                await handleGetBanners();\n                setFullPageLoading(false);\n            },\n            moveLeft: async function(index){\n                if(index <= 0){\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let prev = bannerList[index-1];\n                \n                newList[index] = prev;\n                newList[index-1] = curr;\n                newList.forEach((r,index)=>{\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                .then(data=>{\n                    console.log(data);\n                    if(data.message=='success'){\n                        handleGetBanners();\n                        setBannerListLoading(false);\n                    }else{\n                        alert('undefined error');\n                    }\n                });\n                setFullPageLoading(false);\n            },\n            moveRight: async function(index){\n                if(index >= bannerList.length-1){\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let next = bannerList[index+1];\n                \n                newList[index] = next;\n                newList[index+1] = curr;\n                newList.forEach((r,index)=>{\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                .then(data=>{\n                    if(data.message=='success'){\n                        handleGetBanners();\n                        setBannerListLoading(false);\n                    }else{\n                        alert('undefined error');\n                    }\n                });\n                setFullPageLoading(false);\n            },\n            deleteBanner: async function(id){\n                setFullPageLoading(true);\n                let banner = bannerList.filter(r=>r.id==id)[0];\n                await bannerDataConnect().deleteBanner(banner)\n                .then(data=>{\n                    // console.log(data);\n                })\n                await handleGetBanners();\n                setFullPageLoading(false);\n            }\n        }\n    }\n\n    const testConsole = () =>{\n        console.log(bannerList);\n    }\n    return (\n        isLoged ?\n            (\n                <Container>\n                    {fullPageLoading ? \n                        <FullPageLoading>\n                            <FullPageLoadingSpinner>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </FullPageLoadingSpinner>\n                        </FullPageLoading>\n                        :\n                        \"\"\n                    }\n                    <AdminNav></AdminNav>\n                    <button onClick={testConsole}>con</button>\n                    <AdminBannerManage\n                        uploadFile={uploadFile}\n                        bannerListLoading={bannerListLoading}\n                        bannerList = {bannerList}\n\n                        handleBannerImage={handleBannerImage}\n                    >\n\n                    </AdminBannerManage>\n                </Container>\n            ) :\n            (\n                <></>\n            )\n    );\n}\n\nexport default AdminHomeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js",["225","226","227","228"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faTimes,\n    faChevronLeft,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst ImageButton = styled.button`\n    background:white;\n    padding:20px;\n    border:1px solid #333;\n    border-radius:15px;\n    white-space:normal;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageListWrapper = styled.div`\n    margin:15px 0;\n    height:220px;\n    padding:10px;\n    border:1px solid #f1f1f1;\n    overflow-x:scroll;\n    white-space: nowrap;\n`;\n\n\nconst ImageEl = styled.img`\n    width:384px;\n    height:170px;\n    margin:0 5px;\n    object-fit:cover;\n`;\n\nconst ImageDeleteBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:60px;\n    height:60px;\n`;\n\nconst ImageLeftBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:10%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageRightBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:90%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position:relative;\n    display:inline;\n    &:hover{\n        ${ImageEl}{\n            opacity:0.3;\n        }\n        ${ImageDeleteBtn}{\n            display:block;\n            color:black;\n        }\n        ${ImageDeleteBtn}:hover{\n            background-color:#ff0000a1;\n        }\n        ${ImageRightBtn}, ${ImageLeftBtn}{\n            display:block;\n            color:black;\n        }\n    }\n`;\n\nconst CurrentBannerListLoaderWrapper = styled.div`\n    text-align:center;\n    \n`;\nconst AdminBannerManage = (props) =>{\n    const {\n        uploadFile,\n        bannerListLoading,\n        bannerList\n    } = props;\n\n    const {\n        handleBannerImage\n    } = props;\n    return(\n        <Container>\n            <div>\n                <h4>배너 등록</h4>\n                <input type='file' id='i_banner_uploadfile' accept=\"image/*\" onChange={(e)=>handleBannerImage().upToServer(e)} hidden/>\n                <ImageButton type=\"button\" onClick={()=>handleBannerImage().uploaderOpen()}>이미지 업로드<br/>1920x850 권장</ImageButton>\n                <ImageListWrapper>\n                    {uploadFile.map(data=>{\n                        return(\n                            <ImageBox key={data.uuid}>\n                                <ImageEl src={data.imageUrl}></ImageEl>\n                                <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteImage(data.uuid)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                            </ImageBox>\n                        )\n                    })}\n                    \n                </ImageListWrapper>\n                <button className='btn btn-primary' onClick={()=>handleBannerImage().submitBanner()}>배너로 등록하기</button>\n            </div>\n            <hr/>\n            <div>\n                <h4>현재 배너 리스트</h4>\n                <ImageListWrapper>\n                    {bannerListLoading ==false && bannerList!=[]? \n                        bannerList.map((data,index)=>{\n                            return(\n                                <ImageBox key={data.id}>\n                                    <ImageEl src={data.imageUrl}></ImageEl>\n                                    <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteBanner(data.id)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                                    {index==0?'':<ImageLeftBtn onClick={()=>handleBannerImage().moveLeft(index)}><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon></ImageLeftBtn>}\n                                    {index==bannerList.length-1?'':<ImageRightBtn onClick={()=>handleBannerImage().moveRight(index)}><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></ImageRightBtn>}\n                                </ImageBox>\n                            );\n                        })\n                        :\n                        <CurrentBannerListLoaderWrapper>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </CurrentBannerListLoaderWrapper>\n                    }\n                </ImageListWrapper>\n            </div>\n        </Container>\n    );\n}\n\nexport default AdminBannerManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js",["229","230","231"],"function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nfunction dateToYYYYMMDD(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nfunction dateToYYYYMMDD_hhmmss(date) {\n    function leadingZeros(n, digits) {\n        var zero = '';\n        n = n.toString();\n\n        if (n.length < digits) {\n            for (let i = 0; i < digits - n.length; i++)\n                zero += '0';\n        }\n        return zero + n;\n    }\n    var d = new Date(date);\n    var s =\n        leadingZeros(d.getFullYear(), 4) + '-' +\n        leadingZeros(d.getMonth() + 1, 2) + '-' +\n        leadingZeros(d.getDate(), 2) + ' ' +\n\n        leadingZeros(d.getHours(), 2) + ':' +\n        leadingZeros(d.getMinutes(), 2) + ':' +\n        leadingZeros(d.getSeconds(), 2);\n\n    return s;\n}\nexport {\n    uuidv4,\n    dateToYYYYMMDD,\n    dateToYYYYMMDD_hhmmss\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js",["232"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js",["233","234","235","236","237","238","239","240","241"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js",["242","243","244","245"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js",["246","247"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js",["248","249","250","251"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\nimport queryString from 'query-string';\n\nconst counselingDataConnect = () =>{\n    return{\n        searchCounselingAll: async function(){\n            let query = queryString.parse(window.location.search);\n            return await axios.get('/api/search/counseling/all',{\n                params:{\n                    pageIndex:query.pageIndex ? query.pageIndex-1 : 0\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Error code : 405')\n                }\n            });\n        },\n        insertCounselingOne: async function(data){\n            return await axios.post('/api/insert/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 405');\n                }\n            })\n        },\n        updateCounselingOne: async function(data){\n            return await axios.post('/api/update/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 500');\n                }\n            })\n        },\n        deleteCounselingOne: async function(data){\n            return await axios.post('/api/delete/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport {\n    counselingDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import { useEffect ,useState } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// data connect\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// handler\nimport {dateToYYYYMMDD,dateToYYYYMMDD_hhmmss} from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport PageableComponent from './PageableComponent';\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    /* padding:2%; */\n`;\n\nconst ListWrapper = styled.div`\n    position:relative;\n    border:1px solid #a1a1a1;\n    border-radius:5px;\n    padding:8px;\n    margin: 15px 0;\n`;\n\nconst ListWrapperBlind = styled.div`\n    position:absolute;\n    left:0;\n    top:50px;\n    width:100%;\n    height:calc(100% - 50px);\n    background-color:#91919180;\n    background: repeating-linear-gradient(45deg, #44444430, #44444430 10px, #88888830 0, #88888830 20px);\n    z-index:2;\n`;\n\nconst ListTextField = styled.div`\n    font-size:12px;\n    font-weight:600;\n    padding:5px;\n    border-bottom:1px dotted #818181;\n    /* border-radius:3px; */\n`;\n\nconst AdminCounselingMain = ({match,location,history}) =>{\n    \n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [counselingData, setCounselingData] = useState(null);\n    const [counselingPage, setCounselingPage] = useState(null);\n\n    useEffect(()=>{\n        async function fetchInit() {\n            if(isLoged){\n                await __handleDataConnect().getCounselingList();\n                handleScrollToTop();\n                // console.log('heoo')\n            }\n        }\n\n        fetchInit();\n        \n    },[isLoged, location])\n\n    const __handleDataConnect = () =>{\n        return {\n            getCounselingList : async function(){\n                let data = await counselingDataConnect().searchCounselingAll();\n                // console.log(data);\n                if(data){\n                    if(data.message == 'success'){\n                        setCounselingData(data.data);\n                        setCounselingPage(data.page);\n                    }else if(data.message == 'not_auth'){\n                        alert('관리자 권한이 없습니다.');\n                        history.push('/');\n                    }else if(data.message == 'user_invalid'){\n                        alert('로그인 세션이 만료되었습니다.');\n                        history.push('/admin');\n                    }\n                }else{\n                    alert('undefined error');\n                }\n            },\n            setCounselingAdminCheck: function(){\n                return {\n                    setCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 1;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    },\n                    setUnCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 0;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    }\n                }\n            },\n            deleteCounselingOne: async function(id){\n                let data = counselingData.filter(r=>r.id==id)[0];\n                let resData = await counselingDataConnect().deleteCounselingOne(data);\n                if(resData && resData.message == 'success'){\n                    alert('삭제되었습니다.');\n                    await __handleDataConnect().getCounselingList();\n                }\n            }\n        }\n    }\n\n    const AdminCheckBtnProp = (props) =>{\n        if(props.checked==0){\n            return <button className='btn btn-sm btn-outline-danger' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setCheck(props.id)}>미확인</button>\n        }else{\n            return <button className='btn btn-sm btn-outline-primary' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setUnCheck(props.id)}>확인됨</button>\n        }\n    }\n\n    return(\n        isLoged? \n        <>\n            <Container>\n                <AdminNav></AdminNav>\n                <ListContainer className='container-fluid'>\n                    {counselingPage && counselingData ? counselingData.map((r,index)=>{\n                        let itemIndex = counselingPage.displaySize*(counselingPage.curr-1)+index+1;\n                        return(\n                            <ListWrapper key={`${r.id}-${itemIndex}`}>\n                                {r.adminChecked == 1 ? <ListWrapperBlind></ListWrapperBlind> : ''}\n                                <ListTextField>\n                                    <span style={{padding:'0 5px'}}>\n                                        {itemIndex}-{r.id}\n                                    </span>\n                                    {r.counselingType=='counseling'?\n                                        <span style={{padding:'0 5px', color:'blue'}}>가맹상담</span>\n                                    :''}\n                                    {r.counselingType=='purchase'?\n                                        <span style={{padding:'0 5px', color:'green'}}>상품상담</span>\n                                    :''}\n                                    <span style={{padding:'0 5px'}}>\n                                        <AdminCheckBtnProp \n                                            id={r.id}\n                                            checked={r.adminChecked}\n                                        >\n                                        </AdminCheckBtnProp>\n                                    </span>\n                                    {r.adminChecked ? <span style={{padding:'0 5px'}}><button className='btn btn-sm btn-danger' onClick={()=>__handleDataConnect().deleteCounselingOne(r.id)}>삭제</button></span> :''}\n                                </ListTextField>\n                                <div className='row'>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>상담 등록일 : {dateToYYYYMMDD_hhmmss(r.createdAt)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>신청자 : {r.applierName}</ListTextField>\n                                        <ListTextField>전화번호 : {r.applierPhone}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>희망지역 : {r.applierArea}</ListTextField>\n                                        <ListTextField>주소 : {r.address}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>점포층수 : {r.floor}</ListTextField>\n                                        <ListTextField>오픈예정일 : {r.openDate == null? '' : dateToYYYYMMDD(r.openDate)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>\n                                            <div>기타문의내용</div>\n                                            <div>{r.desc}</div>\n                                        </ListTextField>\n                                    </div>\n                                </div>\n                                \n                            </ListWrapper>\n                        )\n                    })\n                    :\n                    <></>\n                    }\n                </ListContainer>\n                {counselingPage ? <PageableComponent\n                    defaultUrl={'/admin/counseling'}\n                    pageData={counselingPage}\n                ></PageableComponent>\n                :<></>}\n                \n            </Container>\n        </>\n        :\n        <></>\n    );\n}\n\nexport default AdminCounselingMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js",["266","267"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { Link } from 'react-router-dom';\nconst AdminNav = () =>{\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    window.location.href='/'\n                }\n            })\n    }\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/admin\">관리자 페이지</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>홈</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/counseling'>상담신청 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>매장 안내 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/product'>상품 안내 관리</Link>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e) => handleLogoutSubmit(e)}>\n                    <button type='submit' className='btn btn-outline-danger'>로그아웃</button>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default AdminNav;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js",["268"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nconst Container = styled.div`\n`;\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:props.defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.prev}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.next}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// handler\nimport { dateToYYYYMMDD, dateToYYYYMMDD_hhmmss } from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport CategoryComponent from './CategoryComponent';\nimport AddCategoryModal from './AddCategoryModal';\nimport ProductComponent from './ProductComponent';\nimport AddProductModal from './AddProductModal';\nimport UpdateProductModal from './UpdateProductModal';\n\nconst Container = styled.div`\n    margin-bottom:150px;\n`;\nconst AdminProductMain = ({ history, match, location }) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n    const addProductImageUploaderRef = useRef();\n    const addProductFieldRef = useRef();\n\n    const updateProductImageUploaderRef = useRef();\n    const updateProductFieldRef = useRef();\n\n    const [loading, setLoading] = useState(false);\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n\n    const [addCategoryModalOpen, setAddCategoryModalOpen] = useState(false);\n    const [addCategoryName, setAddCategoryName] = useState('');\n    const [addCategoryData,setAddCategoryData] = useState({\n        categoryName:'',\n        priority:9999\n    })\n\n    const [addProductModalOpen, setAddProductModalOpen] = useState(false);\n    const [addProductItemData, setAddProductItemData] = useState({\n        categoryId: '',\n        priority: 9999,\n        name: '',\n        introduce: '',\n        summary: '',\n        editorData: '',\n        imageUrl: '/images/sample/imageNo.png'\n    });\n\n    const [updateProductModalOpen, setUpdateProductModalOpen] = useState(false);\n    const [updateProductItemData, setUpdateProductItemData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            if (isLoged) {\n                await __handleDataConnect().getProductCategoryList();\n                await __handleDataConnect().getProductList();\n            }\n        }\n        fetchData();\n    }, [isLoged, location]);\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList({\n                                size: data.data.length,\n                                data: data.data\n                            })\n                        }\n                    })\n            },\n            deleteProductCategoryOne: async function (jsonData) {\n                await productDataConnect().deleteProductCategoryOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n                await __handleDataConnect().getProductCategoryList();\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setProductList(data.data);\n                        }\n                    })\n            },\n            insertProductOne: async function (jsonData) {\n                await productDataConnect().insertProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 등록되었습니다.');\n                            }\n                        }\n                    });\n            },\n            updateProductOne: async function(jsonData){\n                await productDataConnect().updateProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 수정되었습니다.');\n                            }\n                        }\n                    });\n            },\n            deleteProductOne: async function (jsonData) {\n                await productDataConnect().deleteProductOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n            },\n        }\n    }\n\n    const handleAddCategoryModalControl = () => {\n        return {\n            open: function () {\n                setAddCategoryModalOpen(true);\n            },\n            close: function () {\n                setAddCategoryModalOpen(false);\n                handleAddCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                // let jsonData = {\n                //     categoryName: addCategoryName\n                // }\n                await productDataConnect().insertProductCategoryOne(addCategoryData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품 카테고리가 생성되었습니다.');\n                            }\n                        }\n                    });\n                await __handleDataConnect().getProductCategoryList();\n                handleAddCategoryModalControl().close();\n\n            },\n            addCategoryDataOnChange: function(e){\n                setAddCategoryData({...addCategoryData, [e.target.name]:e.target.value})\n            },\n            modalInputClear: function () {\n                setAddCategoryData({\n                    categoryName:'',\n                    priority:9999\n                })\n            }\n        }\n    }\n\n    const handleCategoryControl = () => {\n        return {\n            deleteOne: async function (id) {\n                if(window.confirm('정말로 삭제하시겠습니까?')){\n                    let jsonData = categoryList.data.filter(r => r.id == id)[0];\n                    await __handleDataConnect().deleteProductCategoryOne(jsonData);\n                }else{\n                    return;\n                }\n                \n            }\n        }\n    }\n\n    const handleProductControl = () => {\n        return {\n            deleteOne: async function (id) {\n                let jsonData = productList.filter(r => r.product.id == id)[0].product;\n                await __handleDataConnect().deleteProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n            }\n        }\n    }\n\n    const handleAddProductModalControl = () => {\n        return {\n            open: function () {\n                handleUpdateProductModalControl().close();\n                setAddProductModalOpen(true);\n            },\n            close: function () {\n                setAddProductModalOpen(false);\n                handleAddProductModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                let jsonData = {\n                    categoryId: addProductItemData.categoryId,\n                    priority: addProductItemData.priority,\n                    name: addProductItemData.name,\n                    introduce: addProductItemData.introduce,\n                    summary: addProductItemData.summary,\n                    desc: addProductItemData.editorData,\n                    imageUrl: addProductItemData.imageUrl\n                }\n                await __handleDataConnect().insertProductOne(jsonData);\n                handleAddProductModalControl().close();\n\n            },\n            modalInputClear: function () {\n                setAddProductItemData({\n                    categoryId: '',\n                    priority: 9999,\n                    name: '',\n                    introduce: '',\n                    summary: '',\n                    editorData: '',\n                    imageUrl: '/images/sample/imageNo.png'\n                });\n            },\n            onValueChange: function (e) {\n                setAddProductItemData({ ...addProductItemData, [e.target.name]: e.target.value })\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        addProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setAddProductItemData({ ...addProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleAddProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setAddProductItemData({ ...addProductItemData, ['editorData']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    const handleUpdateProductModalControl = () => {\n        return {\n            open: function (targetId) {\n                handleAddProductModalControl().close();\n\n                let data = productList.filter(r => r.product.id == targetId)[0].product;\n                // console.log(data);\n                setUpdateProductItemData(data);\n                setUpdateProductModalOpen(true);\n            },\n            close: function () {\n                setUpdateProductModalOpen(false);\n                setUpdateProductItemData(null);\n            },\n            submit: async function(e){\n                e.preventDefault();\n                await __handleDataConnect().updateProductOne(updateProductItemData);\n                await __handleDataConnect().getProductList();\n                handleUpdateProductModalControl().close();\n            },\n            onValueChange: function (e) {\n                setUpdateProductItemData({ ...updateProductItemData, [e.target.name]: e.target.value })\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        updateProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setUpdateProductItemData({ ...updateProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleUpdateProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setUpdateProductItemData({ ...updateProductItemData, ['desc']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    return (\n        isLoged ?\n            <>\n                <Container>\n                    <AdminNav></AdminNav>\n                    <CategoryComponent\n                        categoryList={categoryList}\n\n                        handleModalControl={handleAddCategoryModalControl}\n                        handleCategoryControl={handleCategoryControl}\n                    ></CategoryComponent>\n                    <ProductComponent\n                        productList={productList}\n                        updateProductModalOpen = {updateProductModalOpen}\n\n                        handleProductControl={handleProductControl}\n                        handleAddProductModalControl={handleAddProductModalControl}\n                        handleUpdateProductModalControl={handleUpdateProductModalControl}\n                    >\n\n                    </ProductComponent>\n                    <AddCategoryModal\n                        modalOpen={addCategoryModalOpen}\n                        addCategoryData={addCategoryData}\n                        addCategoryName={addCategoryName}\n\n                        handleModalControl={handleAddCategoryModalControl}\n                    ></AddCategoryModal>\n                    <AddProductModal\n                        addProductFieldRef={addProductFieldRef}\n                        imageUploaderRef={addProductImageUploaderRef}\n\n                        categoryList={categoryList}\n                        addProductItemData={addProductItemData}\n\n                        modalOpen={addProductModalOpen}\n                        handleModalControl={handleAddProductModalControl}\n                        handleEditorControl={handleAddProductEditorControl}\n                    >\n\n                    </AddProductModal>\n                    <UpdateProductModal\n                        updateProductFieldRef={updateProductFieldRef}\n                        imageUploaderRef={updateProductImageUploaderRef}\n\n                        modalOpen={updateProductModalOpen}\n                        categoryList={categoryList}\n                        updateProductItemData={updateProductItemData}\n\n                        handleModalControl={handleUpdateProductModalControl}\n                        handleEditorControl={handleUpdateProductEditorControl}\n                    >\n\n                    </UpdateProductModal>\n                </Container>\n            </>\n            :\n            <></>\n    );\n}\n\nexport default AdminProductMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js",["294"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={()=>props.handleModalControl().close()}\n            >\n                <DialogTitle className='text-center'>{\"카테고리 추가\"}</DialogTitle>\n                <form onSubmit={(e)=>props.handleModalControl().submit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>카테고리</label>\n                            <input type=\"text\" className=\"form-control\" name='categoryName' value={props.addCategoryData.categoryName} onChange={(e)=>props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>카테고리 우선도</label>\n                            <input type=\"number\" className=\"form-control\" name='priority' value={props.addCategoryData.priority} onChange={(e)=>props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                            <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={()=>props.handleModalControl().close()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            카테고리 등록\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\nconst productDataConnect = () =>{\n    return{\n        searchProductCategoryAll: async function(){\n            return await axios.get('/api/search/product_category/all',{\n\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        },\n        insertProductCategoryOne: async function(data){\n            return await axios.post('/api/insert/product_category/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        },\n        deleteProductCategoryOne: async function(data){\n            return await axios.post('/api/delete/product_category/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            });\n        },\n        imageUploadToS3: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            //에러가 날 경우 처리\n            .catch(error => {\n                console.log(error.response);\n            });\n        },\n        searchProductAll: async function(){\n            return await axios.get('/api/search/product/all',{\n\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        },\n        insertProductOne: async function(data){\n            return await axios.post('/api/insert/product/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        },\n        updateProductOne: async function(data){\n            return await axios.post('/api/update/product/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        },\n        deleteProductOne: async function(data){\n            return await axios.post('/api/delete/product/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            });\n        },\n    }\n}\n\nexport{\n    productDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js",["319"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    \n`;\n\nconst ListWrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n\n`;\n\nconst TopPart = styled.div`\n    padding:8px;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst TopPartTitle = styled.div`\n    font-size:21px;\n    font-weight:600;\n`;\n\nconst TopPartAddProduct = styled.button`\n    \n`;\n\nconst BodyPart = styled.div`\n    padding:8px;\n`;\n\nconst TableBox = styled.div`\n\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\nconst ImageEl = styled.img`\n    width:80px;\n    height:80px;\n    object-fit:cover;\n`;\n\nconst ControlBtn = styled.button`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst ControlLink = styled.a`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\nconst ProductComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <ListContainer className='container-fluid'>\n                    <ListWrapper>\n                        <TopPart className='clearfix'>\n                            <TopPartTitle className='float-left'>상품 목록</TopPartTitle>\n                            <TopPartAddProduct type='button' className='float-right btn btn-outline-primary' onClick={() => props.handleAddProductModalControl().open()}>상품 추가</TopPartAddProduct>\n                        </TopPart>\n                        <BodyPart>\n                            {props.productList ?\n                                <TableBox className='table-responsive'>\n                                    <table className=\"table table-sm text-center\" style={{ tableLayout: 'fixed' }}>\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\" width='50'>#</th>\n                                                <th scope=\"col\" width='200'>상품명</th>\n                                                <th scope=\"col\" width='150'>이미지</th>\n                                                <th scope=\"col\" width='150'>카테고리</th>\n                                                <th scope=\"col\" width='100'>우선순위</th>\n                                                <th scope=\"col\" width='200'>컨트롤</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.productList.map((r, index) => {\n                                                return (\n                                                    <tr key={r.product.id}>\n                                                        <TableTh scope=\"row\">{index + 1}</TableTh>\n                                                        <TableTd>{r.product.name}</TableTd>\n                                                        <TableTd><ImageEl src={r.product.imageUrl}></ImageEl></TableTd>\n                                                        <TableTd>{r.category.categoryName}</TableTd>\n                                                        <TableTd>{r.product.priority}</TableTd>\n                                                        <TableTd>\n                                                            <ControlLink\n                                                                href={'/'}\n                                                                color_prop={'#80dd80'}\n                                                                className='btn btn-sm'\n                                                                target='_blank'\n                                                            >바로가기</ControlLink>\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#8080dd'}\n                                                                    onClick={() => props.handleUpdateProductModalControl().open(r.product.id)}\n                                                                >수정</ControlBtn>\n                                                            }\n\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#dd8080'}\n                                                                    onClick={()=>props.handleProductControl().deleteOne(r.product.id)}\n                                                                >삭제</ControlBtn>\n                                                            }\n\n                                                        </TableTd>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </TableBox>\n                                :\n                                <></>\n                            }\n\n                        </BodyPart>\n                    </ListWrapper>\n                </ListContainer>\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js",["320","321","322","323","324","325","326"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin]\n}\nconst AddProductModal = (props) => {\n    useEffect(() => {\n        function propFetch(){\n            if (props.modalOpen) {\n                handleScrollToMe();\n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () =>{\n        props.addProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    return (\n        <>\n            {props.modalOpen ?\n                <Container className='container-fluid' ref={props.addProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 추가\"}<button className='float-right btn btn-large btn-outline-danger' onClick={()=>props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' defaultValue={props.addProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.addProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.addProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.addProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.addProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.addProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.addProductItemData.editorData}\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={custom_config}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    상품 등록\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        this.url = `/api/fileupload/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\n\nexport default AddProductModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js",["327","328","329","330","331","332","333"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin]\n}\n\nconst UpdateProductModal = (props) =>{\n    useEffect(() => {\n        function propFetch(){\n            if (props.modalOpen) {\n                handleScrollToMe();\n                \n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () =>{\n        props.updateProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return(\n        <>\n            {props.modalOpen && props.updateProductItemData?\n                <Container className='container-fluid' ref={props.updateProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 수정\"}<button className='float-right btn btn-large btn-outline-danger' onClick={()=>props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' value={props.updateProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.updateProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.updateProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.updateProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.updateProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.updateProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.updateProductItemData.desc}\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={custom_config}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    수정하기\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        this.url = `/api/fileupload/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default UpdateProductModal;",{"ruleId":"334","severity":1,"message":"335","line":8,"column":8,"nodeType":"336","messageId":"337","endLine":8,"endColumn":13},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"334","severity":1,"message":"342","line":3,"column":8,"nodeType":"336","messageId":"337","endLine":3,"endColumn":9},{"ruleId":"343","severity":1,"message":"344","line":28,"column":7,"nodeType":"345","endLine":28,"endColumn":9,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":33,"column":33,"nodeType":"349","messageId":"350","endLine":33,"endColumn":35},{"ruleId":"334","severity":1,"message":"351","line":1,"column":31,"nodeType":"336","messageId":"337","endLine":1,"endColumn":37},{"ruleId":"334","severity":1,"message":"352","line":4,"column":8,"nodeType":"336","messageId":"337","endLine":4,"endColumn":14},{"ruleId":"353","severity":1,"message":"354","line":45,"column":33,"nodeType":"355","endLine":45,"endColumn":86},{"ruleId":"334","severity":1,"message":"356","line":57,"column":7,"nodeType":"336","messageId":"337","endLine":57,"endColumn":14},{"ruleId":"347","severity":1,"message":"357","line":69,"column":31,"nodeType":"349","messageId":"350","endLine":69,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":82,"column":34,"nodeType":"349","messageId":"350","endLine":82,"endColumn":36},{"ruleId":"334","severity":1,"message":"358","line":1,"column":10,"nodeType":"336","messageId":"337","endLine":1,"endColumn":19},{"ruleId":"334","severity":1,"message":"359","line":151,"column":22,"nodeType":"336","messageId":"337","endLine":151,"endColumn":33},{"ruleId":"360","severity":1,"message":"361","line":226,"column":63,"nodeType":"362","messageId":"363","endLine":226,"endColumn":65},{"ruleId":"334","severity":1,"message":"364","line":65,"column":22,"nodeType":"336","messageId":"337","endLine":65,"endColumn":33},{"ruleId":"334","severity":1,"message":"365","line":24,"column":25,"nodeType":"336","messageId":"337","endLine":24,"endColumn":39},{"ruleId":"338","replacedBy":"366"},{"ruleId":"340","replacedBy":"367"},{"ruleId":"334","severity":1,"message":"368","line":4,"column":9,"nodeType":"336","messageId":"337","endLine":4,"endColumn":13},{"ruleId":"334","severity":1,"message":"369","line":62,"column":7,"nodeType":"336","messageId":"337","endLine":62,"endColumn":25},{"ruleId":"334","severity":1,"message":"370","line":1,"column":31,"nodeType":"336","messageId":"337","endLine":1,"endColumn":35},{"ruleId":"334","severity":1,"message":"371","line":1,"column":37,"nodeType":"336","messageId":"337","endLine":1,"endColumn":48},{"ruleId":"334","severity":1,"message":"372","line":90,"column":7,"nodeType":"336","messageId":"337","endLine":90,"endColumn":16},{"ruleId":"334","severity":1,"message":"373","line":6,"column":5,"nodeType":"336","messageId":"337","endLine":6,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":156,"column":21,"nodeType":"355","endLine":156,"endColumn":71},{"ruleId":"347","severity":1,"message":"348","line":160,"column":52,"nodeType":"349","messageId":"350","endLine":160,"endColumn":54},{"ruleId":"347","severity":1,"message":"348","line":166,"column":52,"nodeType":"349","messageId":"350","endLine":166,"endColumn":54},{"ruleId":"347","severity":1,"message":"348","line":170,"column":52,"nodeType":"349","messageId":"350","endLine":170,"endColumn":54},{"ruleId":"334","severity":1,"message":"372","line":72,"column":7,"nodeType":"336","messageId":"337","endLine":72,"endColumn":16},{"ruleId":"334","severity":1,"message":"368","line":2,"column":10,"nodeType":"336","messageId":"337","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"344","line":40,"column":8,"nodeType":"345","endLine":40,"endColumn":10,"suggestions":"374"},{"ruleId":"347","severity":1,"message":"348","line":45,"column":38,"nodeType":"349","messageId":"350","endLine":45,"endColumn":40},{"ruleId":"347","severity":1,"message":"348","line":60,"column":23,"nodeType":"349","messageId":"350","endLine":60,"endColumn":25},{"ruleId":"334","severity":1,"message":"375","line":71,"column":11,"nodeType":"336","messageId":"337","endLine":71,"endColumn":29},{"ruleId":"347","severity":1,"message":"348","line":81,"column":38,"nodeType":"349","messageId":"350","endLine":81,"endColumn":40},{"ruleId":"347","severity":1,"message":"348","line":90,"column":28,"nodeType":"349","messageId":"350","endLine":90,"endColumn":30},{"ruleId":"347","severity":1,"message":"348","line":113,"column":42,"nodeType":"349","messageId":"350","endLine":113,"endColumn":44},{"ruleId":"347","severity":1,"message":"357","line":127,"column":61,"nodeType":"349","messageId":"350","endLine":127,"endColumn":63},{"ruleId":"347","severity":1,"message":"348","line":130,"column":37,"nodeType":"349","messageId":"350","endLine":130,"endColumn":39},{"ruleId":"347","severity":1,"message":"348","line":159,"column":36,"nodeType":"349","messageId":"350","endLine":159,"endColumn":38},{"ruleId":"347","severity":1,"message":"348","line":185,"column":36,"nodeType":"349","messageId":"350","endLine":185,"endColumn":38},{"ruleId":"347","severity":1,"message":"348","line":196,"column":55,"nodeType":"349","messageId":"350","endLine":196,"endColumn":57},{"ruleId":"347","severity":1,"message":"348","line":146,"column":40,"nodeType":"349","messageId":"350","endLine":146,"endColumn":42},{"ruleId":"347","severity":1,"message":"357","line":146,"column":61,"nodeType":"349","messageId":"350","endLine":146,"endColumn":63},{"ruleId":"347","severity":1,"message":"348","line":152,"column":43,"nodeType":"349","messageId":"350","endLine":152,"endColumn":45},{"ruleId":"347","severity":1,"message":"348","line":153,"column":43,"nodeType":"349","messageId":"350","endLine":153,"endColumn":45},{"ruleId":"347","severity":1,"message":"348","line":3,"column":47,"nodeType":"349","messageId":"350","endLine":3,"endColumn":49},{"ruleId":"376","severity":1,"message":"377","line":3,"column":63,"nodeType":"349","messageId":"378","endLine":3,"endColumn":64},{"ruleId":"376","severity":1,"message":"377","line":3,"column":69,"nodeType":"349","messageId":"378","endLine":3,"endColumn":70},{"ruleId":"347","severity":1,"message":"348","line":27,"column":36,"nodeType":"349","messageId":"350","endLine":27,"endColumn":38},{"ruleId":"353","severity":1,"message":"354","line":171,"column":41,"nodeType":"355","endLine":171,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":180,"column":41,"nodeType":"355","endLine":180,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":189,"column":41,"nodeType":"355","endLine":189,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":198,"column":41,"nodeType":"355","endLine":198,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":207,"column":41,"nodeType":"355","endLine":207,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":216,"column":41,"nodeType":"355","endLine":216,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":225,"column":41,"nodeType":"355","endLine":225,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":234,"column":41,"nodeType":"355","endLine":234,"endColumn":90},{"ruleId":"353","severity":1,"message":"354","line":243,"column":41,"nodeType":"355","endLine":243,"endColumn":90},{"ruleId":"334","severity":1,"message":"373","line":6,"column":5,"nodeType":"336","messageId":"337","endLine":6,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":157,"column":21,"nodeType":"355","endLine":157,"endColumn":71},{"ruleId":"347","severity":1,"message":"348","line":161,"column":52,"nodeType":"349","messageId":"350","endLine":161,"endColumn":54},{"ruleId":"347","severity":1,"message":"348","line":167,"column":52,"nodeType":"349","messageId":"350","endLine":167,"endColumn":54},{"ruleId":"334","severity":1,"message":"372","line":59,"column":7,"nodeType":"336","messageId":"337","endLine":59,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":198,"column":28,"nodeType":"349","messageId":"350","endLine":198,"endColumn":30},{"ruleId":"347","severity":1,"message":"348","line":63,"column":35,"nodeType":"349","messageId":"350","endLine":63,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":66,"column":41,"nodeType":"349","messageId":"350","endLine":66,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":68,"column":41,"nodeType":"349","messageId":"350","endLine":68,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":70,"column":41,"nodeType":"349","messageId":"350","endLine":70,"endColumn":43},{"ruleId":"343","severity":1,"message":"344","line":59,"column":8,"nodeType":"345","endLine":59,"endColumn":10,"suggestions":"379"},{"ruleId":"347","severity":1,"message":"348","line":64,"column":38,"nodeType":"349","messageId":"350","endLine":64,"endColumn":40},{"ruleId":"343","severity":1,"message":"380","line":88,"column":7,"nodeType":"345","endLine":88,"endColumn":26,"suggestions":"381"},{"ruleId":"347","severity":1,"message":"348","line":96,"column":37,"nodeType":"349","messageId":"350","endLine":96,"endColumn":39},{"ruleId":"347","severity":1,"message":"348","line":99,"column":43,"nodeType":"349","messageId":"350","endLine":99,"endColumn":45},{"ruleId":"347","severity":1,"message":"348","line":102,"column":43,"nodeType":"349","messageId":"350","endLine":102,"endColumn":45},{"ruleId":"347","severity":1,"message":"348","line":113,"column":65,"nodeType":"349","messageId":"350","endLine":113,"endColumn":67},{"ruleId":"347","severity":1,"message":"348","line":121,"column":65,"nodeType":"349","messageId":"350","endLine":121,"endColumn":67},{"ruleId":"347","severity":1,"message":"348","line":131,"column":57,"nodeType":"349","messageId":"350","endLine":131,"endColumn":59},{"ruleId":"347","severity":1,"message":"348","line":133,"column":47,"nodeType":"349","messageId":"350","endLine":133,"endColumn":49},{"ruleId":"347","severity":1,"message":"348","line":142,"column":25,"nodeType":"349","messageId":"350","endLine":142,"endColumn":27},{"ruleId":"347","severity":1,"message":"348","line":159,"column":49,"nodeType":"349","messageId":"350","endLine":159,"endColumn":51},{"ruleId":"347","severity":1,"message":"348","line":164,"column":54,"nodeType":"349","messageId":"350","endLine":164,"endColumn":56},{"ruleId":"347","severity":1,"message":"348","line":167,"column":54,"nodeType":"349","messageId":"350","endLine":167,"endColumn":56},{"ruleId":"334","severity":1,"message":"382","line":2,"column":8,"nodeType":"336","messageId":"337","endLine":2,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":16,"column":38,"nodeType":"349","messageId":"350","endLine":16,"endColumn":40},{"ruleId":"347","severity":1,"message":"348","line":22,"column":41,"nodeType":"349","messageId":"350","endLine":22,"endColumn":43},{"ruleId":"334","severity":1,"message":"383","line":9,"column":10,"nodeType":"336","messageId":"337","endLine":9,"endColumn":24},{"ruleId":"334","severity":1,"message":"384","line":9,"column":26,"nodeType":"336","messageId":"337","endLine":9,"endColumn":47},{"ruleId":"334","severity":1,"message":"385","line":10,"column":10,"nodeType":"336","messageId":"337","endLine":10,"endColumn":27},{"ruleId":"343","severity":1,"message":"344","line":31,"column":8,"nodeType":"345","endLine":31,"endColumn":10,"suggestions":"386"},{"ruleId":"347","severity":1,"message":"348","line":36,"column":38,"nodeType":"349","messageId":"350","endLine":36,"endColumn":40},{"ruleId":"334","severity":1,"message":"387","line":51,"column":12,"nodeType":"336","messageId":"337","endLine":51,"endColumn":19},{"ruleId":"334","severity":1,"message":"388","line":51,"column":21,"nodeType":"336","messageId":"337","endLine":51,"endColumn":31},{"ruleId":"334","severity":1,"message":"389","line":57,"column":29,"nodeType":"336","messageId":"337","endLine":57,"endColumn":47},{"ruleId":"343","severity":1,"message":"380","line":85,"column":8,"nodeType":"345","endLine":85,"endColumn":27,"suggestions":"390"},{"ruleId":"347","severity":1,"message":"348","line":92,"column":50,"nodeType":"349","messageId":"350","endLine":92,"endColumn":52},{"ruleId":"347","severity":1,"message":"348","line":103,"column":50,"nodeType":"349","messageId":"350","endLine":103,"endColumn":52},{"ruleId":"347","severity":1,"message":"348","line":112,"column":50,"nodeType":"349","messageId":"350","endLine":112,"endColumn":52},{"ruleId":"347","severity":1,"message":"348","line":122,"column":46,"nodeType":"349","messageId":"350","endLine":122,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":132,"column":46,"nodeType":"349","messageId":"350","endLine":132,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":141,"column":50,"nodeType":"349","messageId":"350","endLine":141,"endColumn":52},{"ruleId":"347","severity":1,"message":"348","line":166,"column":46,"nodeType":"349","messageId":"350","endLine":166,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":191,"column":71,"nodeType":"349","messageId":"350","endLine":191,"endColumn":73},{"ruleId":"347","severity":1,"message":"348","line":204,"column":69,"nodeType":"349","messageId":"350","endLine":204,"endColumn":71},{"ruleId":"347","severity":1,"message":"348","line":261,"column":42,"nodeType":"349","messageId":"350","endLine":261,"endColumn":44},{"ruleId":"391","severity":1,"message":"392","line":262,"column":76,"nodeType":"393","messageId":"394","endLine":262,"endColumn":103,"fix":"395"},{"ruleId":"391","severity":1,"message":"396","line":274,"column":64,"nodeType":"393","messageId":"394","endLine":274,"endColumn":84,"fix":"397"},{"ruleId":"347","severity":1,"message":"348","line":286,"column":65,"nodeType":"349","messageId":"350","endLine":286,"endColumn":67},{"ruleId":"347","severity":1,"message":"348","line":315,"column":42,"nodeType":"349","messageId":"350","endLine":315,"endColumn":44},{"ruleId":"391","severity":1,"message":"392","line":316,"column":82,"nodeType":"393","messageId":"394","endLine":316,"endColumn":109,"fix":"398"},{"ruleId":"391","severity":1,"message":"399","line":328,"column":70,"nodeType":"393","messageId":"394","endLine":328,"endColumn":84,"fix":"400"},{"ruleId":"334","severity":1,"message":"401","line":7,"column":10,"nodeType":"336","messageId":"337","endLine":7,"endColumn":18},{"ruleId":"347","severity":1,"message":"348","line":19,"column":35,"nodeType":"349","messageId":"350","endLine":19,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":21,"column":41,"nodeType":"349","messageId":"350","endLine":21,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":45,"column":35,"nodeType":"349","messageId":"350","endLine":45,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":48,"column":41,"nodeType":"349","messageId":"350","endLine":48,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":50,"column":41,"nodeType":"349","messageId":"350","endLine":50,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":52,"column":41,"nodeType":"349","messageId":"350","endLine":52,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":76,"column":35,"nodeType":"349","messageId":"350","endLine":76,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":79,"column":41,"nodeType":"349","messageId":"350","endLine":79,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":81,"column":41,"nodeType":"349","messageId":"350","endLine":81,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":83,"column":41,"nodeType":"349","messageId":"350","endLine":83,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":117,"column":35,"nodeType":"349","messageId":"350","endLine":117,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":119,"column":41,"nodeType":"349","messageId":"350","endLine":119,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":143,"column":35,"nodeType":"349","messageId":"350","endLine":143,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":146,"column":41,"nodeType":"349","messageId":"350","endLine":146,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":148,"column":41,"nodeType":"349","messageId":"350","endLine":148,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":150,"column":41,"nodeType":"349","messageId":"350","endLine":150,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":174,"column":35,"nodeType":"349","messageId":"350","endLine":174,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":177,"column":41,"nodeType":"349","messageId":"350","endLine":177,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":179,"column":41,"nodeType":"349","messageId":"350","endLine":179,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":181,"column":41,"nodeType":"349","messageId":"350","endLine":181,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":205,"column":35,"nodeType":"349","messageId":"350","endLine":205,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":208,"column":41,"nodeType":"349","messageId":"350","endLine":208,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":210,"column":41,"nodeType":"349","messageId":"350","endLine":210,"endColumn":43},{"ruleId":"347","severity":1,"message":"348","line":212,"column":41,"nodeType":"349","messageId":"350","endLine":212,"endColumn":43},{"ruleId":"334","severity":1,"message":"368","line":2,"column":10,"nodeType":"336","messageId":"337","endLine":2,"endColumn":14},{"ruleId":"334","severity":1,"message":"401","line":1,"column":10,"nodeType":"336","messageId":"337","endLine":1,"endColumn":18},{"ruleId":"334","severity":1,"message":"351","line":1,"column":20,"nodeType":"336","messageId":"337","endLine":1,"endColumn":26},{"ruleId":"334","severity":1,"message":"335","line":3,"column":8,"nodeType":"336","messageId":"337","endLine":3,"endColumn":13},{"ruleId":"343","severity":1,"message":"402","line":55,"column":8,"nodeType":"345","endLine":55,"endColumn":25,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":194,"column":59,"nodeType":"349","messageId":"406","endLine":194,"endColumn":60},{"ruleId":"347","severity":1,"message":"348","line":201,"column":65,"nodeType":"349","messageId":"350","endLine":201,"endColumn":67},{"ruleId":"347","severity":1,"message":"348","line":202,"column":79,"nodeType":"349","messageId":"350","endLine":202,"endColumn":81},{"ruleId":"334","severity":1,"message":"401","line":1,"column":10,"nodeType":"336","messageId":"337","endLine":1,"endColumn":18},{"ruleId":"334","severity":1,"message":"351","line":1,"column":20,"nodeType":"336","messageId":"337","endLine":1,"endColumn":26},{"ruleId":"334","severity":1,"message":"335","line":3,"column":8,"nodeType":"336","messageId":"337","endLine":3,"endColumn":13},{"ruleId":"343","severity":1,"message":"402","line":57,"column":8,"nodeType":"345","endLine":57,"endColumn":25,"suggestions":"407"},{"ruleId":"404","severity":1,"message":"405","line":197,"column":59,"nodeType":"349","messageId":"406","endLine":197,"endColumn":60},{"ruleId":"347","severity":1,"message":"348","line":204,"column":65,"nodeType":"349","messageId":"350","endLine":204,"endColumn":67},{"ruleId":"347","severity":1,"message":"348","line":205,"column":79,"nodeType":"349","messageId":"350","endLine":205,"endColumn":81},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["408"],"no-negated-in-lhs",["409"],"'$' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCheckLoged'. Either include it or remove the dependency array.","ArrayExpression",["410"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Slider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardBox' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'setProducts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setLinkList' is assigned a value but never used.","'setCompanyInfo' is assigned a value but never used.",["408"],["409"],"'Link' is defined but never used.","'IntroduceBodyTitle' is assigned a value but never used.","'memo' is defined but never used.","'useCallback' is defined but never used.","'ExplainEl' is assigned a value but never used.","'faCaretRight' is defined but never used.",["411"],"'handleLogoutSubmit' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator",["412"],"React Hook useEffect has a missing dependency: '__handleDataConnect'. Either include it or remove the dependency array.",["413"],"'styled' is defined but never used.","'dateToYYYYMMDD' is defined but never used.","'dateToYYYYMMDD_hhmmss' is defined but never used.","'handleScrollToTop' is defined but never used.",["414"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setAddCategoryName' is assigned a value but never used.",["415"],"no-useless-computed-key","Unnecessarily computed property ['imageUrl'] found.","Property","unnecessarilyComputedProperty",{"range":"416","text":"417"},"Unnecessarily computed property ['editorData'] found.",{"range":"418","text":"419"},{"range":"420","text":"417"},"Unnecessarily computed property ['desc'] found.",{"range":"421","text":"422"},"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleScrollToMe'. Either include it or remove the dependency array.",["423"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["424"],"no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"425","fix":"427"},{"desc":"425","fix":"428"},{"desc":"429","fix":"430"},{"desc":"425","fix":"431"},{"desc":"429","fix":"432"},[9794,9806],"'imageUrl'",[10144,10158],"'editorData'",[11976,11988],[12335,12343],"'desc'",{"desc":"433","fix":"434"},{"desc":"433","fix":"435"},"Update the dependencies array to be: [handleCheckLoged]",{"range":"436","text":"437"},{"range":"438","text":"437"},{"range":"439","text":"437"},"Update the dependencies array to be: [__handleDataConnect, isLoged, location]",{"range":"440","text":"441"},{"range":"442","text":"437"},{"range":"443","text":"441"},"Update the dependencies array to be: [handleScrollToMe, props.modalOpen]",{"range":"444","text":"445"},{"range":"446","text":"445"},[712,714],"[handleCheckLoged]",[1061,1063],[1467,1469],[2260,2279],"[__handleDataConnect, isLoged, location]",[1040,1042],[2792,2811],[1357,1374],"[handleScrollToMe, props.modalOpen]",[1377,1394]]