[{"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js":"1","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js":"2","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js":"3","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js":"4","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js":"5","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js":"6","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js":"7","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js":"8","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js":"9","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js":"10","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js":"11","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js":"12","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js":"13","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js":"14","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js":"15","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js":"16","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js":"17","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js":"18","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js":"19","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js":"20","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js":"21","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js":"22","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js":"23","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js":"24","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js":"25","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js":"26","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js":"27","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js":"28","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js":"29","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js":"30","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js":"31","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js":"32","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js":"33","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js":"34","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js":"35","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js":"36","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js":"37","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js":"38","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js":"39","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js":"40","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js":"41","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js":"42","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js":"43","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js":"44","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js":"45","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js":"46","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js":"47","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js":"48","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js":"49","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminVideoManage.js":"50","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddVideoModal.js":"51","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/VideoDataConnect.js":"52","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/counsel/ProductCounselMain.js":"53","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AdminStoreMain.js":"54","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AreaComponent.js":"55","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddAreaModal.js":"56","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/StoreDataConnect.js":"57","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixAreaModal.js":"58","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/StoreComponent.js":"59","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddStoreModal.js":"60","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixStoreModal.js":"61","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/PageableComponent.js":"62","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreListMain.js":"63","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/layout/StoreTopLayout.js":"64","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/AreaNavComponent.js":"65","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreComponent.js":"66","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/StoreDetailMain.js":"67","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/DetailComponent.js":"68","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/PageableComponent.js":"69","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/modules/CkeditorModules.js":"70","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/AdminCSMain.js":"71","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/CsComponent.js":"72","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/AddCsModal.js":"73","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CsDataConnect.js":"74","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/PageableComponent.js":"75","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/FixCsModal.js":"76","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/CsNoticeMain.js":"77","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/layout/CsTopLayout.js":"78","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/NoticeComponent.js":"79","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/PageableComponent.js":"80","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/detail/CsDetailMain.js":"81","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/detail/CsDetailComponent.js":"82","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/NoticeComponent.js":"83","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/counsel/CsCounselMain.js":"84","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/policy/privacy/PrivacyAgreement.js":"85","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout2.js":"86","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro3/FoundIntro3Main.js":"87","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent2.js":"88","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/PopupComponent.js":"89","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminPopupManage.js":"90","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddPopupModal.js":"91","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/PopupDataConnect.js":"92"},{"size":670,"mtime":1612407882854,"results":"93","hashOfConfig":"94"},{"size":362,"mtime":499162500000,"results":"95","hashOfConfig":"94"},{"size":6536,"mtime":1615780100812,"results":"96","hashOfConfig":"94"},{"size":766,"mtime":1615786218849,"results":"97","hashOfConfig":"94"},{"size":2860,"mtime":1614906544983,"results":"98","hashOfConfig":"94"},{"size":8938,"mtime":1615863735738,"results":"99","hashOfConfig":"94"},{"size":1612,"mtime":1614058291805,"results":"100","hashOfConfig":"94"},{"size":8669,"mtime":1615184254766,"results":"101","hashOfConfig":"94"},{"size":6101,"mtime":1615780524546,"results":"102","hashOfConfig":"94"},{"size":13095,"mtime":1614653984942,"results":"103","hashOfConfig":"94"},{"size":95,"mtime":1613540029246,"results":"104","hashOfConfig":"94"},{"size":6465,"mtime":1615870567970,"results":"105","hashOfConfig":"94"},{"size":6394,"mtime":1614587377550,"results":"106","hashOfConfig":"94"},{"size":1525,"mtime":1614307544495,"results":"107","hashOfConfig":"94"},{"size":586,"mtime":1612417471208,"results":"108","hashOfConfig":"94"},{"size":4950,"mtime":1615885101816,"results":"109","hashOfConfig":"94"},{"size":7743,"mtime":1614238804140,"results":"110","hashOfConfig":"94"},{"size":4545,"mtime":1615775842951,"results":"111","hashOfConfig":"94"},{"size":15213,"mtime":1614236264870,"results":"112","hashOfConfig":"94"},{"size":1556,"mtime":1612511260961,"results":"113","hashOfConfig":"94"},{"size":4589,"mtime":1613445554670,"results":"114","hashOfConfig":"94"},{"size":17883,"mtime":1615862859710,"results":"115","hashOfConfig":"94"},{"size":4984,"mtime":1612866471017,"results":"116","hashOfConfig":"94"},{"size":1227,"mtime":1613465917115,"results":"117","hashOfConfig":"94"},{"size":2524,"mtime":1615884234601,"results":"118","hashOfConfig":"94"},{"size":10762,"mtime":1615786427731,"results":"119","hashOfConfig":"94"},{"size":10604,"mtime":1615356236869,"results":"120","hashOfConfig":"94"},{"size":4630,"mtime":1615780468432,"results":"121","hashOfConfig":"94"},{"size":12016,"mtime":1615780482846,"results":"122","hashOfConfig":"94"},{"size":2774,"mtime":1613540770196,"results":"123","hashOfConfig":"94"},{"size":9755,"mtime":1615780439184,"results":"124","hashOfConfig":"94"},{"size":2341,"mtime":1615013725498,"results":"125","hashOfConfig":"94"},{"size":2099,"mtime":1614130025986,"results":"126","hashOfConfig":"94"},{"size":21248,"mtime":1614411592847,"results":"127","hashOfConfig":"94"},{"size":2567,"mtime":1614062326420,"results":"128","hashOfConfig":"94"},{"size":14267,"mtime":1615884312700,"results":"129","hashOfConfig":"94"},{"size":2784,"mtime":1614063576570,"results":"130","hashOfConfig":"94"},{"size":12123,"mtime":1614414010540,"results":"131","hashOfConfig":"94"},{"size":13550,"mtime":1615884397185,"results":"132","hashOfConfig":"94"},{"size":16287,"mtime":1615884400611,"results":"133","hashOfConfig":"94"},{"size":2703,"mtime":1614062970655,"results":"134","hashOfConfig":"94"},{"size":2955,"mtime":1614131366156,"results":"135","hashOfConfig":"94"},{"size":5085,"mtime":1615780694289,"results":"136","hashOfConfig":"94"},{"size":4415,"mtime":1614232520433,"results":"137","hashOfConfig":"94"},{"size":3222,"mtime":1615360345564,"results":"138","hashOfConfig":"94"},{"size":5809,"mtime":1615785698893,"results":"139","hashOfConfig":"94"},{"size":2941,"mtime":1614148395406,"results":"140","hashOfConfig":"94"},{"size":3574,"mtime":1614929197795,"results":"141","hashOfConfig":"94"},{"size":7404,"mtime":1614930429607,"results":"142","hashOfConfig":"94"},{"size":3613,"mtime":1614584164384,"results":"143","hashOfConfig":"94"},{"size":2520,"mtime":1614579597092,"results":"144","hashOfConfig":"94"},{"size":5188,"mtime":1614584202808,"results":"145","hashOfConfig":"94"},{"size":10787,"mtime":1615258813078,"results":"146","hashOfConfig":"94"},{"size":14333,"mtime":1615023641420,"results":"147","hashOfConfig":"94"},{"size":2732,"mtime":1614666628487,"results":"148","hashOfConfig":"94"},{"size":1903,"mtime":1614664990157,"results":"149","hashOfConfig":"94"},{"size":12493,"mtime":1615884322924,"results":"150","hashOfConfig":"94"},{"size":1895,"mtime":1614666573273,"results":"151","hashOfConfig":"94"},{"size":9881,"mtime":1614856446661,"results":"152","hashOfConfig":"94"},{"size":12422,"mtime":1615884404623,"results":"153","hashOfConfig":"94"},{"size":12467,"mtime":1615884406871,"results":"154","hashOfConfig":"94"},{"size":2941,"mtime":1614755554785,"results":"155","hashOfConfig":"94"},{"size":3210,"mtime":1615779176042,"results":"156","hashOfConfig":"94"},{"size":4162,"mtime":1615779115642,"results":"157","hashOfConfig":"94"},{"size":3958,"mtime":1614824382872,"results":"158","hashOfConfig":"94"},{"size":7045,"mtime":1615779141383,"results":"159","hashOfConfig":"94"},{"size":5525,"mtime":1614843591148,"results":"160","hashOfConfig":"94"},{"size":6232,"mtime":1614930453883,"results":"161","hashOfConfig":"94"},{"size":2941,"mtime":1614848870175,"results":"162","hashOfConfig":"94"},{"size":2311,"mtime":1614930060240,"results":"163","hashOfConfig":"94"},{"size":6903,"mtime":1615024139960,"results":"164","hashOfConfig":"94"},{"size":6885,"mtime":1615868972548,"results":"165","hashOfConfig":"94"},{"size":8433,"mtime":1615884360075,"results":"166","hashOfConfig":"94"},{"size":6450,"mtime":1615180395698,"results":"167","hashOfConfig":"94"},{"size":2941,"mtime":1615021068599,"results":"168","hashOfConfig":"94"},{"size":8433,"mtime":1615884393584,"results":"169","hashOfConfig":"94"},{"size":2859,"mtime":1615184389222,"results":"170","hashOfConfig":"94"},{"size":4399,"mtime":1615184667382,"results":"171","hashOfConfig":"94"},{"size":10048,"mtime":1615180622385,"results":"172","hashOfConfig":"94"},{"size":2941,"mtime":1615167663204,"results":"173","hashOfConfig":"94"},{"size":3165,"mtime":1615180698120,"results":"174","hashOfConfig":"94"},{"size":2976,"mtime":1615180606471,"results":"175","hashOfConfig":"94"},{"size":3706,"mtime":1615184198629,"results":"176","hashOfConfig":"94"},{"size":11965,"mtime":1615780579920,"results":"177","hashOfConfig":"94"},{"size":11138,"mtime":1615258899966,"results":"178","hashOfConfig":"94"},{"size":4706,"mtime":1615776147159,"results":"179","hashOfConfig":"94"},{"size":3096,"mtime":1615780250670,"results":"180","hashOfConfig":"94"},{"size":6700,"mtime":1615785229855,"results":"181","hashOfConfig":"94"},{"size":3261,"mtime":1615868792549,"results":"182","hashOfConfig":"94"},{"size":3821,"mtime":1615862551231,"results":"183","hashOfConfig":"94"},{"size":4289,"mtime":1615861404314,"results":"184","hashOfConfig":"94"},{"size":5401,"mtime":1615884974399,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},"1a97x7k",{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"189"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"189"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"189"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"189"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"189"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"189"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"189"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"189"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"189"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"189"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"189"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"189"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"189"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"189"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"189"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"189"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"189"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"189"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"189"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"189"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":4,"source":"279","usedDeprecatedRules":"189"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"189"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"189"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"189"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"189"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"189"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"189"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"189"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"189"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"189"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"189"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"189"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"189"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"189"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"189"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"189"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"189"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"189"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"189"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":4,"source":"338","usedDeprecatedRules":"189"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"189"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"189"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"189"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"189"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"189"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"189"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"189"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"189"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"189"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"189"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"189"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"189"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"189"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"189"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":2,"source":"385","usedDeprecatedRules":"189"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"189"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"189"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"189"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"189"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"189"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"189"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"189"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"189"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"189"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"189"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"189"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"189"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"189"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"189"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"189"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"189"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"189"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"189"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"189"},"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js",["445"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport axios from 'axios';\n// axios.defaults.xsrfCookieName='XSRF-TOKEN';\n// axios.defaults.xsrfHeaderName='X-XSRF-TOKEN';\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["446","447"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js",["448","449","450"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport {getCookie} from '../../../handler/CookieHandler';\nimport { useEffect, useState } from 'react';\nconst Container = styled.div`\n    height:100vh;\n    padding:100px 8px;\n`;\n\nconst PageTitle = styled.div`\n    text-align:center;\n    font-size:24px;\n    font-weight:700;\n\n`;\n\nconst LoginMain = ({history}) =>{\n    const [username,setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [notLoged, setNotLoged] = useState(true);\n    useEffect(()=>{\n        console.log('em')\n        async function effectInit(){\n            await handleCheckLoged();\n        }\n        effectInit();\n    },[]);\n\n    const handleCheckLoged = async () =>{\n        await axios.get('/api/auth/check/loged')\n        .then(res=>{\n            if(res.data.message == 'success' ){\n                history.replace('/admin')\n                return;\n            }else{\n                setNotLoged(false);\n            }\n        })\n    }\n\n    const handleRequestLogin = (e) =>{\n        e.preventDefault();\n        axios.post('/api/auth/login',{\n                username:username,\n                password:password\n            },\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n        .then(res=>{\n            history.replace('/admin')\n        })\n    }\n\n    const loginValueChange = () =>{\n        return{\n            username: function(e){\n                setUsername(e.target.value)\n            },\n            password: function(e){\n                setPassword(e.target.value)\n            }\n        }\n    }\n    return(\n        <Container className='container'>\n            {notLoged ? <></>:\n                <>\n                    <PageTitle>관리자 페이지 로그인</PageTitle>\n                    <form onSubmit={(e)=>handleRequestLogin(e)}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_username\">관리자 아이디</label>\n                            <input type=\"text\" className=\"form-control\" id=\"i_admin_username\" aria-describedby=\"emailHelp\" onChange={(e)=>loginValueChange().username(e)} value={username}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_password\">관리자 패스워드</label>\n                            <input type=\"password\" className=\"form-control\" id=\"i_admin_password\" onChange={(e)=>loginValueChange().password(e)} value={password}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">로그인</button>\n                    </form>\n                </>\n            }\n            \n        </Container>\n    );\n}\n\nexport default LoginMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js",["451","452","453","454","455","456","457","458","459","460","461"],"import { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\n\n\n// components\nimport NavbarDynamic from '../../navbar/NavbarDynamic';\nimport BannerCarouselFullSize from './BannerCarouselFullSize';\nimport OpenStore from './OpenStore';\nimport FooterDefault from '../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from './ApplyFormModal';\nimport ProductList from './ProductList';\nimport YoutubePlayPart from './YoutubePlayPart';\nimport NoticeComponent from './NoticeComponent';\nimport PopupComponent from './PopupComponent';\n\n// handler\nimport { handleScrollToTop } from '../../../handler/ScrollHandler';\nimport { setCookie, getCookie } from '../../../handler/CookieHandler';\n\n// dataConnect\nimport { bannerDataConnect } from '../../data_connect/BannerDataConnect';\nimport { videoDataConnect } from '../../data_connect/VideoDataConnect';\nimport { productDataConnect } from '../../data_connect/ProductDataConnect';\nimport { storeDataConnect } from '../../data_connect/StoreDataConnect';\nimport { csDataConnect } from '../../data_connect/CsDataConnect';\nimport { popupDataConnect } from '../../data_connect/PopupDataConnect';\n\nconst MainContainer = styled.div`\n    /* position:relative; */\n`;\n\nconst LineBreaker1 = styled.div`\n    width: 80%;\n    height: 1px;\n    margin: 10px auto 25px;\n    border-bottom:1px dashed #ee5470;\n    /* background-color: #ee5470; */\n`;\n\n// Scroll을 움직이면 h1의 스타일을 변화해주기 위한 함수.\nconst useScroll = () => {\n    // state를 생성합니다.\n    const [state, setState] = useState({\n        x: 0,\n        y: 0\n    });\n    // scrll의 값을 가져와 state를 갱신합니다.\n    const onScroll = () => {\n        setState({ y: window.scrollY, x: window.scrollX });\n    };\n    useEffect(() => {\n        // scroll 이벤트를 만들어줍니다. 스크롤을 움직일때 마다 \n        // onScroll 함수가 실행됩니다.\n        window.addEventListener(\"scroll\", onScroll);\n        return () => window.removeEventListener(\"scroll\", onScroll);\n    }, []);\n    return state.y;\n};\n\nconst HomeMain = () => {\n    const scrollY = useScroll();\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [banners, setBanners] = useState([]);\n    const [videoList, setVideoList] = useState(null);\n    const [productNewList, setProductNewList] = useState(null);\n    const [productHitList, setProductHitList] = useState(null);\n    const [productEventList, setProductEventList] = useState(null);\n    const [storeList, setStoreList] = useState(null);\n    const [csList, setCsList] = useState(null);\n    const [popupList, setPopupList] = useState(null);\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    useEffect(() => {\n        async function loadInit() {\n            await loadDataConnect().loadBannerList();\n            await loadDataConnect().getVideoList();\n            await loadDataConnect().getProductList().new();\n            await loadDataConnect().getProductList().hit();\n            await loadDataConnect().getProductList().event();\n            await loadDataConnect().getStoreList();\n            await loadDataConnect().getCsList();\n            await loadDataConnect().getPopupList();\n        }\n        loadInit();\n    }, [])\n\n    const loadDataConnect = () => {\n        return {\n            loadBannerList: async function () {\n                await bannerDataConnect().searchBanners()\n                    .then(data => {\n                        setBanners(data.data);\n                    })\n            },\n            getVideoList: async function () {\n                await videoDataConnect().searchVideoAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setVideoList(data.data);\n                        }\n                    })\n            },\n            getProductList: function () {\n                return {\n                    all: async function () {\n\n                    },\n                    new: async function () {\n                        await productDataConnect().searchProductAllByCondition(true, false, false)\n                            .then(data => {\n                                if (data && data.message == 'success') {\n                                    setProductNewList(data.data);\n                                }\n                            });\n                    },\n                    hit: async function () {\n                        await productDataConnect().searchProductAllByCondition(false, true, false)\n                            .then(data => {\n                                if (data && data.message == 'success') {\n                                    setProductHitList(data.data);\n                                }\n                            });\n                    },\n                    event: async function () {\n                        await productDataConnect().searchProductAllByCondition(false, false, true)\n                            .then(data => {\n                                if (data && data.message == 'success') {\n                                    setProductEventList(data.data);\n                                }\n                            });\n                    }\n                }\n            },\n            getStoreList: async function () {\n                await storeDataConnect().searchStoreAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setStoreList(data.data);\n                        }\n                    })\n            },\n            getCsList: async function () {\n                await csDataConnect().searchCsAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCsList(data.data);\n                        }\n                    })\n            },\n            getPopupList: async function () {\n                await popupDataConnect().searchPopupAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            let popupData = data.data;\n                            let newPopupList = [];\n                            popupData.forEach(r => {\n                                let popupCookie = getCookie(`popup${r.popupId}`);\n                                if (popupCookie && popupCookie == 1) {\n                                }else{\n                                    newPopupList.push(r);\n                                }\n                            })\n                            setPopupList(newPopupList);\n                        }\n                    })\n            }\n        }\n    }\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    return (\n        <MainContainer>\n            <NavbarDynamic\n                scrollY={scrollY}\n            ></NavbarDynamic>\n            {popupList ?\n                <PopupComponent\n                    popupList = {popupList}\n                ></PopupComponent>\n                :\n                <></>\n            }\n\n            <BannerCarouselFullSize\n                banners={banners}\n            ></BannerCarouselFullSize>\n            {productNewList && productHitList && productEventList ?\n                <ProductList\n                    productNewList={productNewList}\n                    productHitList={productHitList}\n                    productEventList={productEventList}\n                ></ProductList>\n                :\n                <></>\n            }\n            {storeList ?\n                <OpenStore\n                    banners={banners}\n                    storeList={storeList}\n                ></OpenStore>\n                :\n                <></>\n            }\n\n            {/* <LineBreaker1></LineBreaker1> */}\n            {videoList ?\n                <YoutubePlayPart\n                    scrollY={scrollY}\n                    videoList={videoList}\n                ></YoutubePlayPart>\n                :\n                <></>\n            }\n            {csList ?\n                <NoticeComponent\n                    csList={csList}\n                ></NoticeComponent>\n                :\n                <></>\n            }\n\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </MainContainer >\n\n    );\n}\n\nexport default HomeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js",["462","463"],"import styled from 'styled-components';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst Container = styled.div`\n    .thumbs { \n        text-align: center;\n    }\n    .slide .pcy-banner-image{\n        max-height:900px;\n        object-fit: cover;\n    }\n    // 이미지 크기 최적화 사이즈 1920x850\n    @media only screen and (max-width: 768px){\n        .slide .pcy-banner-image{\n            height:45vh;\n            object-fit: cover;\n        }\n    }\n`;\n\nconst BannerCarouselFullSize = (props) => {\n    const {\n        banners\n    } = props;\n    return (\n        <Container>\n            <Carousel\n                autoPlay={true}\n                interval={4000}\n                infiniteLoop={true}\n                dynamicHeight={true}\n                showIndicators={true}\n                showThumbs={false}\n                showStatus={true}\n                stopOnHover={false}\n                transitionTime={1000}\n            >\n                {\n                    banners.length>0 && banners.map((r)=>{\n                        return(\n                            <div key={r.id}>\n                                <img className=\"pcy-banner-image\" src={r.imageUrl} />\n                            </div>        \n                        )\n                    })\n                }\n                \n            </Carousel>\n        </Container>\n    )\n}\n\nexport default BannerCarouselFullSize;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js",["464","465","466","467","468","469"],"import {useRef} from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n\n    background-image: \n        linear-gradient(#eeeeeed0, #eeeeeed0),\n        url(/images/funnyland/bg/funnyland-bg6.jpeg);\n    /* background:#f1f1f1; */\n    background-size:cover;\n    padding:50px 0;\n    /* border-top:1px dashed #ee5470; */\n    \n`;\n\nconst ContainerTitle = styled.div`\n    /* color: white; */\n    text-align:center;\n    /* font-size: 40px; */\n    font-size: 50px;\n    font-weight:600;\n    padding:15px;\n\n    @media only screen and (max-width:768px){\n        padding:0;\n        /* font-size: 26px; */\n        font-size: 32px;\n    }\n`;\n\nconst ContainerSubTitle = styled.div`\n    color: white;\n    text-align:center;\n    font-size: 20px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        font-size: 15px;\n    }\n`;\n\nconst SliderContainer = styled.div`\n    margin:15px 0;\n    overflow:hidden;\n    min-height:50vh;\n    @media only screen and (max-width:1024px){\n        min-height:30vh;\n    }\n    @media only screen and (max-width:768px){\n        min-height:30vh;\n    }\n    & .slick-list{\n        padding-top: 15px !important;\n    }\n\n    & .slick-dots li button:before{\n        color: #333;\n    }\n\n    & .slick-slide {\n        padding:15px;\n    }\n`;\n\nconst CardBox = styled.div`\n    /* padding:15px; */\n`;\n\n\n\nconst CardImg = styled.img`\n    height:50%;\n    width:100%;\n    object-fit: cover;\n`;\n\nconst ButtonEl = styled(Link)`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(255,255,255,.4);\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(255,255,255,.4);\n    }\n`;\n\nconst ImageWrapper = styled.div`\n    width:100%;\n    height:auto;\n    /* cursor:pointer; */\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n    transition: .5s;\n`;\n\nconst TitleBox = styled.div`\n    padding:5px;\n    font-size:21px;\n    font-weight:700;\n    text-align:center;\n\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n`;\n\nconst DescBox = styled.div`\n    padding:10px;\n    font-size:17px;\n    font-weight:700;\n    text-align:center;\n\n    @media only screen and (max-width:768px){\n        font-size:12px;\n    }\n`;\n\nconst ContentBox = styled.div`\n    padding:5px;\n`;\n\nconst ContentIconEl = styled(Link)`\n    /* font-size:21px; */\n    color:#a0a0a0;\n    & .icon{\n        display:inline-block;\n        font-size:30px;\n        margin:0 5px;\n    }\n    & .detail{\n        display:inline-block;\n        margin:0 5px;\n    }\n\n    @media only screen and (max-width:768px){\n        & .icon{\n            font-size:20px;\n        }\n        & .detail{\n            font-size:15px;\n        }\n    }\n`;\n\nconst CardEl = styled.div`\n    /* display: inline-block; */\n    overflow:hidden;\n    border-radius:3px;\n    border:1px solid #a0a0a0;\n    /* height: 400px; */\n    background-color:#ffffffcc;\n    /* box-shadow: rgb(255 255 255 / 25%) 0px 5px 15px; */\n    /* box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem; */\n    box-shadow: rgb(0 0 0 / 8%) 0.3rem 0.3rem 0.3rem;\n    /* @media only screen and (max-width:768px){\n        height:30vh;\n    } */\n\n    .slick-center &{\n        border: 2px solid #ee5470;\n        transform: scale(1.05);\n    }\n    .slick-current &{\n        border: 2px solid #ee5470;\n    }\n\n    .mySlider2 .slick-center &{\n        border: 1px solid #ee5470;\n    }\n    &:hover{\n        & ${TitleBox}{\n            color:#ee5470;\n        }\n        & ${ContentBox} .icon, & ${ContentBox} .detail{\n            color:#ee5470;\n        }\n    }\n`;\n\n\nconst OpenStore = (props) => {\n    let slider1 = useRef();\n    let slider2 = useRef();\n\n    var settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 3,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        centerMode: true,\n        pauseOnHover: false,\n        focusOnSelect: true,\n        asNavFor: slider2.current,\n        responsive: [\n            {\n                breakpoint: 992,\n                settings: {\n                    arrows: false,\n                    centerMode: false,\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                }\n            },\n            {\n                breakpoint: 480,\n                settings: {\n                    arrows: false,\n                    centerMode: false,\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                }\n            }\n        ]\n    };\n\n    var settings2 = {\n        slidesToShow: props.storeList.length >= 6 ? 6 : props.storeList.length,\n        slidesToScroll: 1,\n        asNavFor: slider1.current,\n        // dots: true,\n        centerMode: true,\n        focusOnSelect: true,\n        responsive: [\n            {\n                breakpoint: 992,\n                settings: {\n                    arrows: false,\n                    centerMode: true,\n                    slidesToShow: 3,\n                    slidesToScroll: 1,\n                }\n            },\n            {\n                breakpoint: 480,\n                settings: {\n                    arrows: false,\n                    centerMode: true,\n                    slidesToShow: 2,\n                    slidesToScroll: 1,\n                }\n            }\n        ]\n    };\n    return (\n        <Container>\n            <ContainerTitle><span style={{ color: '#ee5470', fontWeight: '800' }}>OPEN</span> 매장 안내</ContainerTitle>\n            {/* <ContainerSubTitle>전국 <span style={{color:'#ee5470', fontWeight:'800'}}>퍼니랜드</span> 가맹점들을 확인해 보세요</ContainerSubTitle> */}\n            <SliderContainer>\n                <Slider \n                    ref={slider1}\n                    {...settings}\n                >\n                    {props.storeList.map((r, index) => {\n                        if (index < 10) {\n                            return (\n                                <CardEl key={r.storeId}>\n                                    <ImageWrapper>\n                                        <ImageBox>\n                                            <ImageEl src={r.storeImageUrl}></ImageEl>\n                                        </ImageBox>\n                                    </ImageWrapper>\n                                    <TitleBox>\n                                        {r.storeName}\n                                    </TitleBox>\n                                    <ContentBox className='clearfix'>\n                                        <ContentIconEl className='float-right' to={`/store/detail?storeId=${r.storeId}`}>\n                                            <span className='icon'><FontAwesomeIcon icon={faMapMarkerAlt}></FontAwesomeIcon></span>\n                                            <span className='align-middle detail'>상세보기</span>\n                                        </ContentIconEl>\n                                    </ContentBox>\n                                </CardEl>\n                            );\n                        }\n\n                    })}\n                </Slider>\n                <Slider \n                    className='mySlider2'\n                    ref={slider2}\n                    {...settings2}\n                >\n                    {props.storeList.map((r, index) => {\n                        if (index < 10) {\n                            return (\n                                <CardEl key={r.storeId}>\n                                    <ImageWrapper>\n                                        <ImageBox>\n                                            <ImageEl src={r.storeImageUrl}></ImageEl>\n                                        </ImageBox>\n                                    </ImageWrapper>\n                                </CardEl>\n                            );\n                        }\n\n                    })}\n                </Slider>\n            </SliderContainer>\n            <div className=\"text-center\">\n                <ButtonEl className=\"btn\" to={'/store/list'}>오픈매장안내 바로가기</ButtonEl>\n            </div>\n        </Container>\n    );\n}\n\nexport default OpenStore;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js",["470","471"],"import { useState } from 'react';\nimport styled from 'styled-components';\n\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\n// data connect\nimport { counselingDataConnect } from '../../data_connect/CounselingDataConnect';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\nconst ApplyFormModal = (props) => {\n    const {\n        dialogOpen\n    } = props;\n\n    const {\n        mainHandleDialogControl\n    } = props;\n\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [privacyAgreeChecked, setPrivacyAgreeChecked] = useState(false);\n\n    const thisHandleValueOnChange = () => {\n        return {\n            changeCounselingType: function(e){\n                setCounselingType(e.target.value);\n            },\n            changeApplierName: function (e) {\n                setApplierName(e.target.value);\n            },\n            changeApplierPhone: function (e) {\n                setApplierPhone(e.target.value);\n            },\n            changeApplierArea: function (e) {\n                setApplierArea(e.target.value);\n            },\n            changePrivacyAreeChecked: function(e){\n                setPrivacyAgreeChecked(e.target.checked);\n            },\n            allClear: function () {\n                setApplierName('');\n                setApplierPhone('');\n                setApplierArea('');\n                setPrivacyAgreeChecked(false);\n            }\n        }\n    }\n\n    const thisHandleClose = () => {\n        mainHandleDialogControl().close();\n        thisHandleValueOnChange().allClear();\n    }\n\n    const thisHandleFormSubmit = async (e) => {\n        e.preventDefault();\n        if(privacyAgreeChecked!=true){\n            alert('개인정보 수집 동의에 체크해주세요');\n            return;\n        }\n        let jsonData = {\n            counselingType:counselingType,\n            applierName: applierName,\n            applierPhone: applierPhone,\n            applierArea: applierArea,\n            privacyAgreement:privacyAgreeChecked?'동의':'비동의'\n        };\n        await counselingDataConnect().insertCounselingOne(jsonData)\n            .then(data => {\n                if (data.message == 'success') {\n                    alert('상담이 신청되었습니다.');\n                    thisHandleClose();\n                }\n            });\n    }\n\n    return (\n        <Dialog\n            fullWidth={true}\n            open={dialogOpen}\n            onClose={thisHandleClose}\n        >\n            <DialogTitle className='text-center'>{\"신속한 상담신청\"}</DialogTitle>\n            <form onSubmit={(e) => thisHandleFormSubmit(e)}>\n                <DialogContent>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"i_counseling_type\">상담구분</label>\n                        <select className=\"form-control\" defaultValue={counselingType} onChange={(e)=>thisHandleValueOnChange().changeCounselingType(e)}>\n                            <option value='counseling'>창업상담</option>\n                            <option value='rental'>임대상담</option>\n                            <option value='purchase'>상품구매상담</option>\n                            <option value='closed'>폐업상담</option>\n                            <option value='renewal'>매장리뉴얼상담</option>\n                        </select>\n                        {/* <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeCounselingType(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" /> */}\n                    </div>\n                    <div className=\"form-group\">\n                        <label>이름</label>\n                        <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeApplierName(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>연락처</label>\n                        <input type=\"text\" value={applierPhone} onChange={(e) => thisHandleValueOnChange().changeApplierPhone(e)} className=\"form-control\" placeholder=\"'-' 를 제외한 연락처를 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>희망지역 or 상품설치지역</label>\n                        <input type=\"text\" value={applierArea} onChange={(e) => thisHandleValueOnChange().changeApplierArea(e)} className=\"form-control\" placeholder=\"지역을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={privacyAgreeChecked} onChange={(e)=>thisHandleValueOnChange().changePrivacyAreeChecked(e)} required/>\n                        <label className=\"form-check-label\">\n                            개인정보 수집 동의 <a href='/policy/privacy' target='_blank'>보기</a>\n                        </label>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type='button' onClick={thisHandleClose} color=\"secondary\">\n                        취소\n                    </Button>\n                    <Button type='submit' color=\"primary\">\n                        문의등록\n                    </Button>\n                </DialogActions>\n            </form>\n\n        </Dialog>\n    )\n}\nApplyFormModal.defaultProps = {\n}\nexport default ApplyFormModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js",["472","473","474","475","476","477","478"],"import { useEffect, useState } from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    /* overflow:hidden; */\n    /* margin:8px; */\n    background-image: \n        linear-gradient(#202020f0, #202020f0),\n        url(/images/funnyland/bg/funnyland-bg5.jpeg);\n    background-size:cover;\n    /* background: \n        white; */\n        /* linear-gradient(336deg, #a0a0a0, #101010a0 70.71%); */\n        /* linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%); */\n        /* linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%), */\n        /* linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%); */\n    padding:40px 0;\n`;\n\nconst ProductListContainer = styled.div`\n    padding:20px 0;\n`;\n\nconst ProductListTitle = styled.div`\n    color: white;\n    text-align:center;\n    /* font-size: 40px; */\n    font-size: 50px;\n    font-weight:600;\n    padding:15px;\n\n    @media only screen and (max-width:768px){\n        padding:0;\n        /* font-size: 26px; */\n        font-size: 32px;\n    }\n`;\n\nconst ContainerSubTitle = styled.div`\n    color: white;\n    text-align:center;\n    font-size: 20px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        font-size: 15px;\n    }\n`;\n\nconst ProductBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    border: 1px solid black;\n    border-radius:15px;\n    object-fit: cover;\n`;\n\nconst ProductDescBox = styled.div`\n    transition: .5s ease;\n    opacity: 0;\n    position: absolute;\n    width:100%;\n    padding:0 5px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    text-align: center;\n`;\n\nconst ProductDescTitle = styled.div`\n    color:#f1f1f1;\n    /* text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666;\n    -moz-text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666;\n    -webkit-text-shadow: -1px 0 #666, 0 1px #666, 1px 0 #666, 0 -1px #666; */\n    font-size:15px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        font-size: 11px;\n    }\n`;\nconst ProductUrlBtn = styled(Link)`\n    transition: transform .5s;\n    margin:8px;\n    /* border:2px solid white;\n    color:white; */\n    border:2px solid white;\n    background-color:white;\n    color:#ee5470;\n    font-weight:600;\n    border-radius:10px;\n\n    &:hover{\n        font-weight:600;\n        transform:scale(1.1);\n        /* color:white;\n        background-color:#ee5470; */\n        color:#ee5470;\n        background-color:white;\n    }\n    @media only screen and (max-width:768px){\n        font-size: 11px;\n    }\n`;\n\nconst ProductEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    box-shadow: rgb(255 255 255 / 25%) 0px 5px 15px;\n    /* box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px; */\n    border-radius:15px;\n    transition: .5s;\n    &:hover {\n        background:#ee5470;\n        transform:scale(1.1);\n        border: 1px solid white;\n        ${ProductImage}{\n            transition: opacity 1s;\n            /* border: 1px solid #ee5470; */\n            border: 1px solid white;\n            opacity:0.1;\n        }\n        ${ProductDescBox}{\n            opacity:1;\n        }\n    }\n`;\n\nconst ProductWrapper = styled.div`\n    text-align:center;\n    padding-top:8px;\n    padding-bottom:8px;\n`;\n\nconst ButtonEl = styled(Link)`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\nconst ProductList = (props) => {\n    const [products, setProducts] = useState([\n        {\n            id: 1,\n            image: '/images/funnyland/product/cart_product.png',\n            title: '마리오카트2 DX'\n        },\n        {\n            id: 2,\n            image: '/images/funnyland/product/initialDZORO.png',\n            title: '이니셜D ZORO'\n        },\n        {\n            id: 3,\n            image: '/images/funnyland/product/overtakeDX.png',\n            title: '오버테이크 DX'\n        },\n        {\n            id: 4,\n            image: '/images/funnyland/product/prod1.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 5,\n            image: '/images/funnyland/product/prod2.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 6,\n            image: '/images/funnyland/product/prod3.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 7,\n            image: '/images/funnyland/product/prod4.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 8,\n            image: '/images/funnyland/product/prod5.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 9,\n            image: '/images/funnyland/product/prod6.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 10,\n            image: '/images/funnyland/product/prod7.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 11,\n            image: '/images/funnyland/product/prod8.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 12,\n            image: '/images/funnyland/product/prod9.png',\n            title: '게임기 이름 게임기 이름'\n        },\n        {\n            id: 13,\n            image: '/images/funnyland/product/initialDZORO.png',\n            title: '게임기 이름 게임기 이름'\n        },\n\n    ]);\n    return (\n        <Container>\n            <ProductListTitle><span style={{ borderLeft: '5px solid #ee5470', paddingLeft: '20px' }}>제품 안내</span></ProductListTitle>\n            <ContainerSubTitle>퍼니랜드x게임토피아가 공급하는 훌륭한 제품들을</ContainerSubTitle>\n            <ContainerSubTitle>지금 바로 확인해보세요</ContainerSubTitle>\n            <div style={{ padding: '15px' }}>\n                {/* <ProductListContainer className='row'>\n                    {products && products.map((product,index) => {\n                        if(index<12){\n                            return (\n                                <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={product.id}>\n                                    <ProductBox>\n                                        <ProductEl>\n                                            <ProductImage src={product.image} />\n                                            <ProductDescBox>\n                                                <ProductDescTitle>{product.title}</ProductDescTitle>\n                                                <div>\n                                                    <ProductUrlBtn className=\"btn btn-sm\">자세히</ProductUrlBtn>\n                                                </div>\n                                            </ProductDescBox>\n                                        </ProductEl>\n                                    </ProductBox>\n                                </ProductWrapper>\n                            )\n                        }\n                        \n                    })}\n                </ProductListContainer> */}\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>NEW</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 신상품</p>\n                        </h3>\n                        {props.productNewList && props.productNewList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>HIT</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 히트상품</p>\n                        </h3>\n                        {props.productHitList && props.productHitList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div>\n                    <ProductListContainer className='row'>\n                        <h3 className='col-12 text-center'>\n                            <p style={{ color: 'white', fontSize: '18px' }}><span style={{ color: '#ee5470' }}>EVENT</span> PRODUCT</p>\n                            <p style={{ color: 'white',fontWeight:'800'}}>퍼니랜드 이벤트렌탈</p>\n                        </h3>\n                        {props.productEventList && props.productEventList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <ProductWrapper className='col-6 col-sm-4 col-lg-2' key={r.product.id}>\n                                        <ProductBox>\n                                            <ProductEl>\n                                                <ProductImage src={r.product.imageUrl} />\n                                                <ProductDescBox>\n                                                    <ProductDescTitle>{r.product.name}</ProductDescTitle>\n                                                    <div>\n                                                        <ProductUrlBtn className=\"btn btn-sm\" to={`/product/detail?productId=${r.product.id}`}>자세히</ProductUrlBtn>\n                                                    </div>\n                                                </ProductDescBox>\n                                            </ProductEl>\n                                        </ProductBox>\n                                    </ProductWrapper>\n                                )\n                            }\n\n                        })}\n                    </ProductListContainer>\n                </div>\n                <div className=\"text-center\">\n                    <ButtonEl className=\"btn\" to={'/product/list'}>제품 더보기</ButtonEl>\n                </div>\n            </div>\n        </Container>\n    );\n}\n\nexport default ProductList;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js",["479"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// Fontawesome Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faBars,\n    faBuilding,\n    faCoins,\n    faStore,\n    faGamepad,\n    faInfoCircle\n} from '@fortawesome/free-solid-svg-icons';\nconst NavContainer = styled.nav`\n        overflow: hidden;\n        width: 100%;\n        padding:10px;\n        color:#333;\n        position:fixed;\n        background-color: ${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#f1f1f1' : 'none'};\n        border-bottom: 2px solid ${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#ee5470' : 'none'};\n        transition: background-color 1s;\n        z-index:30;\n`;\n\nconst NavBrandTop = styled(Link)`\n        color: white;\n        \n        &:hover{\n            color:white;\n        }\n        img{\n            height:60px;\n            @media only screen and (max-width:320px){\n                height:50px;\n            }\n        }\n    `;\n\nconst NavItemEl = styled(Link)`\n        color:${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#333' : '#f1f1f1'};\n        font-size:19px;\n        font-weight:600;\n        /* padding-top:10px;\n        padding-left : 10px;\n        padding-right : 10px; */\n        padding:10px;\n        border:1px solid #00000000;\n        &:hover{\n            color:#ee5470 !important;\n            border-bottom:1px solid #ee5470;\n        }\n        \n\n        @media only screen and (max-width:320px){\n            font-size:16px;\n        }\n    `;\n\nconst NavbarMobileToggleBtn = styled.button`\n        color:${(props) => props.mobile_nav_open | props.scroll_y >= 60 ? '#333' : '#f1f1f1'};\n`;\n\nconst NavbarDynamic = (props) => {\n\n    const [mobileNavOpen, setMobileNavOpen] = useState(false);\n    const [linkList, setLinkList] = useState([\n        {\n            id: 'navLink1',\n            name: '회사소개',\n            icon: <FontAwesomeIcon icon={faBuilding}></FontAwesomeIcon>,\n            url: '/introduce/intro1'\n        },\n        {\n            id: 'navLink2',\n            name: '창업안내',\n            icon: <FontAwesomeIcon icon={faCoins}></FontAwesomeIcon>,\n            url: '/found/intro1'\n        },\n        {\n            id: 'navLink3',\n            name: '오픈매장안내',\n            icon: <FontAwesomeIcon icon={faStore}></FontAwesomeIcon>,\n            url: '/store/list'\n        },\n        {\n            id: 'navLink4',\n            name: '제품안내',\n            icon: <FontAwesomeIcon icon={faGamepad}></FontAwesomeIcon>,\n            url: '/product/list'\n        },\n        {\n            id: 'navLink5',\n            name: '고객센터',\n            icon: <FontAwesomeIcon icon={faInfoCircle}></FontAwesomeIcon>,\n            url: '/cs/notice'\n        }\n    ]);\n    const [scrollY, setScrollY] = useState(0);\n    function logit() {\n        setScrollY(window.pageYOffset);\n    }\n\n    useEffect(() => {\n        // console.log(scrollY);\n        function watchScroll() {\n            window.addEventListener(\"scroll\", logit);\n        }\n        watchScroll();\n        return () => {\n            window.removeEventListener(\"scroll\", logit);\n        };\n    });\n\n    const hamburgClick = () => {\n        if (mobileNavOpen) {\n            setMobileNavOpen(false);\n        } else {\n            setMobileNavOpen(true);\n        }\n    }\n\n    return (\n        <div>\n            <NavContainer\n                mobile_nav_open={mobileNavOpen}\n                scroll_y={props.scrollY? props.scrollY : scrollY}\n                className={`navbar navbar-expand-lg`}\n            >\n                {/* 모바일 로고 센터를 위한 요소 */}\n                <button\n                    className={`navbar-toggler`}\n                    style={{color:'#00000000', background:'none'}}\n                >\n                    <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\n                </button>\n\n                <NavBrandTop\n                    className='navbar-brand mx-auto'\n                    to=\"/\"\n                >\n                    <img src=\"/images/funnyland/logo/logo3.png\" width=\"auto\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\" />\n                </NavBrandTop>\n                <NavbarMobileToggleBtn\n                    mobile_nav_open={mobileNavOpen}\n                    scroll_y={props.scrollY? props.scrollY : scrollY}\n                    className={`navbar-toggler`}\n                    type=\"button\"\n                    onClick={hamburgClick}\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"true\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\n                </NavbarMobileToggleBtn>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        {\n                            linkList.map(r => {\n                                return (\n                                    <li className=\"nav-item\" key={r.id}>\n                                        <NavItemEl\n                                            mobile_nav_open={mobileNavOpen ? 1 : 0}\n                                            scroll_y={props.scrollY? props.scrollY : scrollY}\n                                            className={`navbar-brand`}\n                                            to={r.url}\n                                        >\n                                            <span className='mr-1'>{r.icon}</span>\n                                            {r.name}\n                                        </NavItemEl>\n                                    </li>\n                                );\n                            })\n                        }\n                        <NavItemEl\n                            mobile_nav_open={mobileNavOpen ? 1 : 0}\n                            scroll_y={props.scrollY? props.scrollY : scrollY}\n                            className={`navbar-brand`}\n                            to={'/admin'}\n                        >\n                            관리자 페이지\n                        </NavItemEl>\n                    </ul>\n                </div>\n            </NavContainer>\n        </div>\n\n    );\n}\n\nexport default NavbarDynamic;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js",["480"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPhone} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n    position:fixed;\n    bottom:0;\n    width:100%;\n    background-color:#00000094;\n    padding:10px;\n    overflow:hidden;\n    z-index:999;\n\n    & .text-strong{\n        /* color:#f8bac9; */\n        color:#ee5470;\n        /* text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1.5px 0 #ee5470, 0 1.5px #ee5470, 1.5px 0 #ee5470, 0 -1.5px #ee5470;\n        -moz-text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1px 2px #ee5470, 2px 1px #ee5470, 1px 2px #ee5470, 2px -1px #ee5470;\n        -webkit-text-shadow: \n            -1px 0 #ffffff, 0 1px #ffffff, 1px 0 #ffffff, 0 -1px #ffffff,\n            -1px 2px #ee5470, 2px 1px #ee5470, 1px 2px #ee5470, 2px -1px #ee5470; */\n    }\n`;\n\nconst TextEl = styled.div`\n    color: white;\n    font-size:19px;\n    font-weight:700;\n    margin-bottom:5px;\n    @media only screen and (max-width: 768px){\n        font-size:14px;\n    }\n    @media only screen and (max-width: 320px){\n        font-size:11px;\n    }\n`;\n\nconst ButtonEl = styled.button`\n    color: white;\n    font-size:21px;\n    font-weight:500;\n    margin:8px;\n\n    &:hover{\n        color:white;\n        background:#f8bac9;\n    }\n    @media only screen and (max-width: 768px){\n        font-size:16px;\n    }\n    \n`;\n\nconst TelLink = styled.a`\n    display:inline-block;\n    padding:0 5px;\n    color:white;\n    border:1px solid #f1f1f1;\n    border-radius:25%;\n    &:hover{\n        text-decoration:none;\n        color:white;\n    }\n`;\n\nconst ButtonEl2 = styled.button`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    color: white;\n    font-size:21px;\n    font-weight:500;\n    margin:0;\n    padding:3px 5px;\n    border:1px solid white; \n    border-radius:5px;\n    background:#ee5470;\n    @media only screen and (max-width: 768px){\n        font-size:16px;\n    }\n    @media only screen and (max-width: 320px){\n        font-size:13px;\n    }\n`;\nconst NavbarBottomFixed = (props) => {\n    const {\n        mainHandleDialogControl\n    } = props;\n    return (\n        <Container id='i_bottom_fixed_nav' className='clearfix'>\n            {/* <div className=\"row\">\n                <div className=\"col-6 text-center\">\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은</TextEl>\n                    <TextEl className=\"text-center\"><b className='text-strong'>퍼니랜드</b>와 함께</TextEl>\n                    <TextEl className=\"text-center\">시작해 보세요</TextEl>\n                    \n                </div>\n                <div className=\"col-6 text-center\">\n                    <TextEl className='text-center'><b className='text-strong'>무료창업상담</b> : <b>02-2272-1244</b></TextEl>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{borderColor:'white', background:'#f7734a', color:'white'}}>Tel.</ButtonEl>\n                </div>\n            </div> */}\n            {/* <div className='row'>\n                <div className='col-6'>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 !</TextEl>\n                </div>\n                <div className='col-6'>\n                    <TextEl className='text-center'><b className='text-strong'>무료창업상담</b> <br/> <b>02-2272-1244</b></TextEl>\n                </div>\n                <div className='col-12'>\n                    <div className='text-center'>\n                        <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{ borderColor: 'white', background: '#ee5470' }} onClick={() => mainHandleDialogControl().open()}>문의하기</ButtonEl>\n                        <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{ borderColor: 'white', background: '#f7734a', color: 'white' }}>Tel.</ButtonEl>\n                    </div>\n                </div>\n            </div> */}\n            {/* <div> */}\n                \n                {/* <div className='float-right'>\n                    <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl> */}\n                    {/* <ButtonEl type=\"button\" className=\"btn btn-sm btn-outline-warning\" style={{borderColor:'white', background:'#f7734a', color:'white'}}><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></ButtonEl> */}\n                {/* </div> */}\n                {/* <div className=''>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 ! <ButtonEl2>문의하기</ButtonEl2></TextEl>\n                    <TextEl className='text-center'><b className='text-strong'>무료상담</b> : <b>02-2272-1244 <TelLink href='tel:02-2272-1244'><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></TelLink></b></TextEl>\n                </div>\n            </div> */}\n            <div className='row'>\n                <div className='col-9' style={{paddingRight:'0'}}>\n                    <TextEl className=\"text-center\">성공적인 오락실 창업은 <b className='text-strong'>퍼니랜드</b>와 함께 !</TextEl>\n                    <TextEl className='text-center'><b className='text-strong'>무료상담</b> : <b>02-2272-1244 <TelLink href='tel:02-2272-1244'><FontAwesomeIcon icon={faPhone}></FontAwesomeIcon></TelLink></b></TextEl>\n                </div>\n                <div className='col-3' style={{paddingLeft:'0', textAlign:'center', position:'relative'}}>\n                    <ButtonEl2 type=\"button\" onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl2>\n                {/* <ButtonEl type=\"button\" className=\"btn btn-sm\" style={{borderColor:'white', background:'#ee5470'}} onClick={()=>mainHandleDialogControl().open()}>문의하기</ButtonEl> */}\n                </div>\n            </div>\n        </Container>\n    )\n}\n\nexport default NavbarBottomFixed;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js",["481","482"],"import { useState } from 'react';\nimport styled from 'styled-components';\nconst Container = styled.div`\n    background:#282828;\n    padding:50px 0 20vh 0;\n    color:#777;\n    text-align:center;\n    font-size:14px;\n    @media only screen and (max-width:768px){\n        font-size:10px;\n    }\n`;\n\nconst CompanyDetailText = styled.div`\n\n`;\n\nconst CopyrightText = styled.div`\n    margin-top: 5px;\n    font-size: 13px;\n    color: #555;\n`;\nconst FooterDefault = () =>{\n    const [companyInfo, setCompanyInfo] = useState({\n        name:'게임토피아',\n        president: '조정준',\n        bussinessNo:'104-06-23141',\n        address:'서울특별시 중구 을지로 157 대림상가 2F 다열 265호',\n        tel:'02-2272-1244',\n        fax:'02-2274-1244',\n        mobile:'010-5381-9104',\n        copyright:'게임토피아'\n    });\n    return(\n        <Container>\n            <div className='text-center' style={{}}>\n                <img src='/images/funnyland/logo/logo3.png' style={{width:'200px'}}></img>\n            </div>\n            <CompanyDetailText>업체명: {companyInfo.name} | 대표: {companyInfo.president} | 사업자번호: {companyInfo.bussinessNo}</CompanyDetailText>\n            <CompanyDetailText>주소: {companyInfo.address}</CompanyDetailText>\n            <CompanyDetailText>TEL: {companyInfo.tel} | FAX: {companyInfo.fax}</CompanyDetailText>\n            <CopyrightText>Copyright(c) {companyInfo.name}, All rights reserved.</CopyrightText>\n        </Container>\n    );\n}\n\nexport default FooterDefault;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js",[],["483","484"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js",["485","486","487"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js",["488","489","490"],"import { useEffect, useState, memo, useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMapMarkedAlt,\n    faPhoneAlt\n} from '@fortawesome/free-solid-svg-icons';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport IntroduceTopLayout from '../layout/IntroduceTopLayout';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%',\n    height: '400px'\n};\n\nconst center = {\n    lat: 37.54927888427358,\n    lng: 126.9210000267195\n};\n\nconst center2 = {\n    lat: 37.56701055743499,\n    lng: 126.99542015596762\n}\nconst Container = styled.div`\n\n`;\n\nconst IntroduceBodyWrapper = styled.div`\n    margin-bottom:100px;\n`;\n\nconst IntroduceBodyContentWrapper = styled.div`\n    width:80%;\n    margin:0 10%;\n    .intro3-title{\n        font-weight:700;\n        margin:70px 0 20px 0;\n    }\n    .intro3-content-box{\n        padding:15px 0;\n    }\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\nconst IntroduceIntro3Main = () => {\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    return (\n        <Container>\n            <NavbarDynamic></NavbarDynamic>\n            <IntroduceTopLayout\n                title={'오시는 길'}\n                linkPage={'intro3'}\n            ></IntroduceTopLayout>\n            <MainTitleBox>\n                <MainTitle>\n                    DIRECTIONS\n                </MainTitle>\n                <MainTitleSub>오시는 길</MainTitleSub>\n                <LineBreaker1></LineBreaker1>\n            </MainTitleBox>\n            <IntroduceBodyWrapper>\n                <IntroduceBodyContentWrapper>\n                    <h4 className=\"intro3-title\">\n                        퍼니랜드 본점\n                    </h4>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faMapMarkedAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>주소</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>서울특별시 마포구 서교동 어울마당로 46-1</div>\n                    </div>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faPhoneAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>전화번호</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>02-332-9074</div>\n                    </div>\n                    <div style={{border:'4px double #f1f1f1'}}>\n                        <LoadScript\n                            googleMapsApiKey={process.env.REACT_APP_GOOGLEMAP_API}\n                        >\n                            <GoogleMap\n                                mapContainerStyle={containerStyle}\n                                center={center}\n                                zoom={18}\n                            >\n                                { /* Child components, such as markers, info windows, etc. */}\n                                <>\n                                    <Marker\n                                        position={center}\n                                        title={`퍼니랜드`}\n                                        label={'퍼니랜드'}\n                                    ></Marker>\n                                </>\n                            </GoogleMap>\n                        </LoadScript>\n                    </div>\n                    \n                </IntroduceBodyContentWrapper>\n                <IntroduceBodyContentWrapper>\n                    <h4 className=\"intro3-title\">\n                        게임토피아 유통 센터\n                    </h4>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faMapMarkedAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>주소</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>서울특별시 중구 을지로 157 대림상가 2F 다열 265호</div>\n                    </div>\n                    <div className='intro3-content-box'>\n                        <h5>\n                            <FontAwesomeIcon icon={faPhoneAlt} color='#ee5470'></FontAwesomeIcon>\n                            <span style={{marginLeft:'8px'}}>전화번호 / 팩스</span>\n                        </h5>\n                        <div style={{paddingLeft:'16px', fontWeight:'600'}}>02-2272-1244 / 02-2274-1244</div>\n                    </div>\n                    <div style={{border:'4px double #f1f1f1'}}>\n                        <LoadScript\n                            googleMapsApiKey={process.env.REACT_APP_GOOGLEMAP_API}\n                        >\n                            <GoogleMap\n                                mapContainerStyle={containerStyle}\n                                center={center2}\n                                zoom={18}\n                            >\n                                { /* Child components, such as markers, info windows, etc. */}\n                                <>\n                                    <Marker\n                                        position={center2}\n                                        title={`게임토피아`}\n                                        label={'게임토피아'}\n                                    ></Marker>\n                                </>\n                            </GoogleMap>\n                        </LoadScript>\n                    </div>\n                </IntroduceBodyContentWrapper>\n            </IntroduceBodyWrapper>\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </Container>\n    );\n}\n\nexport default IntroduceIntro3Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js",["491","492","493","494","495"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    width:100%;\n    color: #ffffffb3;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:90%;\n    display:grid;\n    grid-template-columns:repeat(3,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:700;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst IntroduceTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>회사소개</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    회사소개\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro1'?1:0}\n                        to='/introduce/intro1'\n                    >\n                        인사말\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro2'?1:0}\n                        to='/introduce/intro2'\n                    >연혁</TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='intro3'?1:0}\n                        to='/introduce/intro3'\n                    >오시는 길</TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default IntroduceTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js",["496"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport IntroduceTopLayout from '../layout/IntroduceTopLayout';\nimport CompanyHistoryPresent from './CompanyHistoryPresent';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst IntroduceBodyWrapper = styled.div`\n    margin-bottom:100px;\n`;\n\nconst IntroduceBodyContentWrapper = styled.div`\n    width:80%;\n    margin:0 10%;\n    border-top: 1px solid #ee5470;\n    padding:15px;\n`;\n\nconst IntroduceBodyTitle = styled.div`\n    text-align:center;\n    font-size:30px;\n    font-weight:500;\n    margin: 70px 0 20px 0;\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    \n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst IntroduceIntro2Main = () => {\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    return (\n        <Container>\n            <NavbarDynamic\n            // scrollY={scrollY}\n            ></NavbarDynamic>\n            <IntroduceTopLayout\n                title={'연혁'}\n                linkPage={'intro2'}\n            ></IntroduceTopLayout>\n            <MainTitleBox>\n                <MainTitle>\n                    HISTORY\n                </MainTitle>\n                <MainTitleSub>연혁</MainTitleSub>\n                <LineBreaker1></LineBreaker1>\n            </MainTitleBox>\n            <IntroduceBodyWrapper>\n                <IntroduceBodyTitle>\n                    <div>\n                        SINCE <span className='funnyland-color1'>2001</span>\n                    </div>\n                </IntroduceBodyTitle>\n                <IntroduceBodyContentWrapper>\n                    <CompanyHistoryPresent\n                        historyYear={'2020'}\n                        historys={[\n                            'CGV 부산 센텀시티120평 규모 게임장 개설.',\n                            'CGV 수원광교 70평 규모 게임장 개설.',\n                            'CGV 일산고양 60평 규모 게임장 개설.',\n                            'CGV 인천학익 50평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2019'}\n                        historys={[\n                            '홍대 퍼니랜드 직영 게임장으로 재오픈 및 운영.',\n                            'CGV 등촌 70평 규모 게임장 개설.',\n                            'CGV 부산동래,계양,연수,부천 게임장 개설.',\n                            'CGV 광주금남로 60평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2018'}\n                        historys={[\n                            'CGV 구리,울산,평촌 게임장 개설.',\n                            'CGV 의정부 150평 규모 게임장 개설.',\n                            'CGV 대전 100평 규모 게임장 개설.',\n                            'CGV 수유리 70평 규모 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2017'}\n                        historys={[\n                            '신촌 지플렉스 게임장 개설 및 유지보수 업무 제휴.',\n                            '범계 100평 규모 퍼니랜드 게임장 개설 및 운영.',\n                            '대명 양양 솔비치&리조트 게임장 확장 이전 오픈.',\n                            '부평 120평 규모 퍼니랜드 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2016'}\n                        historys={[\n                            '대명 솔비치&리조트 게임장 개설.',\n                            '홍대 퍼니랜드 게임장 개설 및 운영.',\n                            '대명리조트 삼척 게임장 개설.',\n                            '화정 100평 규모 퍼니랜드 게임장 개설.',\n                            '강남 퍼니랜드 게임장 개설 및 운영.',\n                            '강남 원플레이 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2015'}\n                        historys={[\n                            '용인 롯데시네마 게임장 개설 및 운영.',\n                            '화정 80평 규모 게임장 리모델링 및 게임기기 임대.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2014'}\n                        historys={[\n                            '당진CGV 80평 규모 게임장 개설 및 게임기 임대.',\n                            '서산 롯데시네마 60평 규모 게임장 개설 및 게임기 임대.',\n                            '안양 노리존 230평 규모 게임장 개설 및 게임기 임대.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2013'}\n                        historys={[\n                            '대명리조트 거제지점 게임장 개설.',\n                            '대명리조트 변산, 대명리조트 경주 게임기 판매 및 유지보수 업무 제휴.',\n                            '몰디브 100평 규모 게임장 수출 및 개설.',\n                            '강남 롯데시네마 게임장 개설 및 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2012'}\n                        historys={[\n                            '장원레져스포츠 야구 연습장 서울, 경기 총판 계약.',\n                            '펏스원 제품 해외수출.',\n                            '광주 운암동 게임장 개설.',\n                            '의정부 게임클럽 내 야구장 개설.',\n                            '김포공항 롯데시네마점 내 게임기 설치.',\n                            '4D 맥스라이더 수출.',\n                            '영등포 롯데시네마 내 게임장 유지 보수.'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2011'}\n                        historys={[\n                            '대전둔산CGV 내 게임장 개설.',\n                            '성남 노리존 내 게임기기 임대 관리.',\n                            '광주 시너스 내 게임장 개설.',\n                            '속초한화콘도 내 게임장 리모델링.',\n                            '노원 노리존 내 게임기기 임대 관리.',\n                            '노원 롯데시네마 내 게임기 설치.',\n                            '일산 이스턴 시티 락앤롤 게임기 설치.',\n                            '동수원 오션게임장 개설.'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2010'}\n                        historys={[\n                            '(주)펏스원 서울.경기 총판 계약.',\n                            '몽골팅기스 극장 맥스 라이더 수출.',\n                            '동수원CGV 내 게임장 개설.',\n                            '안산 메가 넥스 내 게임장 개설.',\n                            '제주도 4D 게임장 개설.',\n                            '울산 롯데시네마 내 게임장 개설.',\n                            '지행역 게임천국 게임장 개설.',\n                            '한국 민속촌 내 게임장 리모델링 개설.',\n                            '제주도 롯데시네마 내 게임장 개설.',\n                            '제주도 4D 게임장 2호점 개설.',\n                            '하이원 리조트 내 게임장 개설.',\n                            '역곡CGV 내 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2009'}\n                        historys={[\n                            '일산 웨스턴 돔 CGV 내 게임장 개설, 250평 규모.',\n                            '부산 동래CGV, 경성대 CGV, 신림 포도몰, 성신여대 CGV 개설.',\n                            '제주도 CGV 내 게임장 개설, 동대문 메가박스 게임장 개설.',\n                            '엣지 노래방 제작 판매.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2008'}\n                        historys={[\n                            '몰골 물품 납품',\n                            '성남 스타트랙 80평 게임장 개설.',\n                            '신도림 테크노마트 CGV 내 150평 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2007'}\n                        historys={[\n                            '일산 라페스타 게임장 개설.',\n                            '통신판매업신고(중구06547호)',\n                            '게임배급업자등록증(재교부)(게제 제2006-08호)',\n                            '게임제작업자등록증(재교부)(게제 제2006-26호)',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2006'}\n                        historys={[\n                            '통신판매를 위해 사업자등록증 재교부(104-06-23141)'\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2005'}\n                        historys={[\n                            '(재)서울산업통상진흥원 애니메이션 센터와 물품 공급.',\n                            '부산 화명동 게임장 개설.',\n                            '한화리조트(주) 용인, 한화리조트(주) 수안보 게임장개설.',\n                            '군산 대학 게임장 개설.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2004'}\n                        historys={[\n                            '대명콘도(홍천) 리모델링 물품 공급.',\n                            '양지 리조트 게임장 개설.',\n\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2003'}\n                        historys={[\n                            '오사모(오락실을 사랑하는 모임) www.osamo.co.kr 사이트 운영.',\n                            '둔촌동 100평 게임장 개설 및 수지, 용인, 목동 등 개설.',\n                            '수원 베레슈트 게임장 임대 운영.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2002'}\n                        historys={[\n                            '게임물 제작업자 등록.',\n                            '게임물 배급업자 등록.',\n                            '대명콘도(단양) 150평 게임장 개설 및 다수 개설.',\n                            '대명콘도(홍천) 리모델링 물품 공급.',\n                        ]}\n                        lineBreak={true}\n                    ></CompanyHistoryPresent>\n                    <CompanyHistoryPresent\n                        historyYear={'2001'}\n                        historys={[\n                            '게임토피아 설립',\n                            '대명콘도(홍천, 양평)와 업무 제휴.',\n                            '유통업자 등록.',\n                        ]}\n                        lineBreak={false}\n                    ></CompanyHistoryPresent>\n                </IntroduceBodyContentWrapper>\n            </IntroduceBodyWrapper>\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </Container>\n    );\n}\n\nexport default IntroduceIntro2Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js",["497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { uuidv4 } from '../../../../handler/MyHandlers';\n\n// data connector\nimport { bannerDataConnect } from '../../../data_connect/BannerDataConnect';\nimport { videoDataConnect } from '../../../data_connect/VideoDataConnect';\nimport { popupDataConnect } from '../../../data_connect/PopupDataConnect';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport AdminBannerManage from './AdminBannerManage';\nimport AdminVideoManage from './AdminVideoManage';\nimport AddVideoModal from './AddVideoModal';\nimport AdminPopupManage from './AdminPopupManage';\nimport AddPopupModal from './AddPopupModal';\n\n\n\nconst Container = styled.div`\noverflow:hidden;\n`;\n\nconst FullPageLoading = styled.div`\n    position:fixed;\n    height:100%;\n    width:100%;\n    z-index:1999;\n    background-color:#80808050;\n`;\n\nconst FullPageLoadingSpinner = styled.div`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n`;\n\nconst AdminHomeMain = ({ history }) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [bannerListLoading, setBannerListLoading] = useState(true);\n    const [bannerList, setBannerList] = useState([]);\n    useEffect(() => {\n\n        async function effectInit() {\n            if (isLoged == false) {\n                return;\n            }\n            await handleGetBanners();\n        }\n        effectInit();\n    }, [isLoged])\n\n    const [uploadFile, setUploadFile] = useState([]);\n    const [fullPageLoading, setFullPageLoading] = useState(false);\n\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    // history.push('/');\n                }\n            })\n    }\n\n    const handleGetBanners = async () => {\n        await bannerDataConnect().searchBanners()\n            .then(data => {\n                if (data.message == 'success') {\n                    setBannerList(data.data);\n                }\n            })\n        setBannerListLoading(false);\n    }\n\n    const handleBannerImage = () => {\n        return {\n            uploaderOpen: function () {\n                document.getElementById('i_banner_uploadfile').click();\n            },\n            upToServer: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await bannerDataConnect().imageUploadToS3(fd).then(data => {\n                        document.getElementById('i_banner_uploadfile').value = '';\n                        if (data.message == 'success') {\n                            setUploadFile([\n                                ...uploadFile,\n                                {\n                                    uuid: uuidv4(),\n                                    imageUrl: data.imageUrl\n                                }\n                            ])\n                        }\n                    });\n                    setFullPageLoading(false);\n                }\n            },\n            deleteImage: function (uuid) {\n                setUploadFile(uploadFile.filter(r => r.uuid != uuid));\n            },\n            submitBanner: async function () {\n                if (uploadFile.length == 0) {\n                    return;\n                }\n                setFullPageLoading(true);\n                await bannerDataConnect().insertBanners(uploadFile)\n                    .then(data => {\n                        setUploadFile([]);\n                    });\n                await handleGetBanners();\n                setFullPageLoading(false);\n            },\n            moveLeft: async function (index) {\n                if (index <= 0) {\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let prev = bannerList[index - 1];\n\n                newList[index] = prev;\n                newList[index - 1] = curr;\n                newList.forEach((r, index) => {\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                    .then(data => {\n                        console.log(data);\n                        if (data.message == 'success') {\n                            handleGetBanners();\n                            setBannerListLoading(false);\n                        } else {\n                            alert('undefined error');\n                        }\n                    });\n                setFullPageLoading(false);\n            },\n            moveRight: async function (index) {\n                if (index >= bannerList.length - 1) {\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let next = bannerList[index + 1];\n\n                newList[index] = next;\n                newList[index + 1] = curr;\n                newList.forEach((r, index) => {\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                    .then(data => {\n                        if (data.message == 'success') {\n                            handleGetBanners();\n                            setBannerListLoading(false);\n                        } else {\n                            alert('undefined error');\n                        }\n                    });\n                setFullPageLoading(false);\n            },\n            deleteBanner: async function (id) {\n                setFullPageLoading(true);\n                let banner = bannerList.filter(r => r.id == id)[0];\n                await bannerDataConnect().deleteBanner(banner)\n                    .then(data => {\n                        // console.log(data);\n                    })\n                await handleGetBanners();\n                setFullPageLoading(false);\n            }\n        }\n    }\n\n    const testConsole = () => {\n        console.log(bannerList);\n    }\n\n    const [videoList, setVideoList] = useState(null);\n    const [addVideoModalOpen, setAddVideoModalOpen] = useState(false);\n    const [addVideoData, setAddVideoData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleVideoDataConnect().getVideoList();\n        }\n        fetchInit();\n    }, [])\n    const __handleVideoDataConnect = () => {\n        return {\n            getVideoList: async function () {\n                await videoDataConnect().searchVideoAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setVideoList(data.data);\n                        }\n                    });\n            },\n            insertVideoOne: async function () {\n                let data = addVideoData;\n                await videoDataConnect().insertVideoOne(data);\n            },\n            updateVideoDisplay: async function (data) {\n                await videoDataConnect().updateVideoDisplay(data);\n            },\n            deleteVideoOne: async function (data) {\n                await videoDataConnect().deleteVideoOne(data)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제되었습니다.');\n                        } else {\n                            alert('error');\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleVideoEventControl = () => {\n        return {\n            addVideoModalOpen: function () {\n                setAddVideoData({\n                    videoName: '',\n                    videoType: 'TYPE_YOUTUBE',\n                    videoUrl: '',\n                    videoKey: ''\n                })\n                setAddVideoModalOpen(true);\n            },\n            addVideoModalClose: function () {\n                setAddVideoData(null);\n                setAddVideoModalOpen(true);\n            },\n            addVideoDataOnValueChange: function (e) {\n                setAddVideoData({ ...addVideoData, [e.target.name]: e.target.value })\n            },\n            addVideoDataSubmit: async function (e) {\n                e.preventDefault();\n                await __handleVideoDataConnect().insertVideoOne();\n                await __handleVideoDataConnect().getVideoList();\n                this.addVideoModalClose();\n            },\n            setVideoDisplay: function () {\n                return {\n                    view: async function (videoId) {\n                        let selectedVideo = videoList.filter(r => r.videoId == videoId)[0];\n                        selectedVideo.videoDisplay = 1;\n                        await __handleVideoDataConnect().updateVideoDisplay(selectedVideo);\n                        await __handleVideoDataConnect().getVideoList();\n                    },\n                    hide: async function (videoId) {\n                        let selectedVideo = videoList.filter(r => r.videoId == videoId)[0];\n                        selectedVideo.videoDisplay = 0;\n                        await __handleVideoDataConnect().updateVideoDisplay(selectedVideo);\n                        await __handleVideoDataConnect().getVideoList();\n                    }\n                }\n            },\n            deleteVideo: async function (videoId) {\n                let selectedVideo = videoList.filter(r => r.videoId == videoId)[0];\n                await __handleVideoDataConnect().deleteVideoOne(selectedVideo);\n                await __handleVideoDataConnect().getVideoList();\n            }\n        }\n    }\n\n    const [popupList, setPopupList] = useState(null);\n    const [addPopupModalOpen, setAddPopupModalOpen] = useState(false);\n    const [addPopupData, setAddPopupData] = useState(null);\n    const [popupImageUpload, setPopupImageUpload] = useState([]);\n    useEffect(() => {\n        async function fetchInit() {\n            await __handlePopupDataConnect().getPopupList();\n        }\n        fetchInit();\n    }, [])\n    const __handlePopupDataConnect = () => {\n        return {\n            uploadImage: async function (fd) {\n                await popupDataConnect().uploadImageToLocal(fd)\n                    .then(data => {\n                        document.getElementById('i_popup_image_uploader').value = '';\n                        if (data && data.message == 'success') {\n                            setAddPopupData({ ...addPopupData, popupImageUrl: data.imageUrl });\n                            return;\n                        } else {\n                            alert('data access error');\n                        }\n                    })\n            },\n            getPopupList: async function () {\n                await popupDataConnect().searchPopupAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setPopupList(data.data);\n                        }\n                    })\n            },\n            insertPopupOne: async function (data) {\n                await popupDataConnect().insertPopupOne(data)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('등록되었습니다.');\n                        }\n                    })\n            },\n            deletePopupOne: async function(data){\n                await popupDataConnect().deletePopupOne(data)\n                .then(data => {\n                    if (data && data.message == 'success') {\n                        alert('삭제되었습니다.');\n                    } else {\n                        alert('error');\n                    }\n                })\n            }\n        }\n    }\n    const handlePopupEventControl = () => {\n        return {\n            addPopupModalOpen: function () {\n                setAddPopupData({\n                    popupName: '',\n                    popupUrl: '#',\n                    popupImageUrl: ''\n                })\n                setAddPopupModalOpen(true);\n            },\n            addPopupModalClose: function () {\n                setAddPopupData(null);\n                setAddPopupModalOpen(true);\n            },\n            addPopupDataSubmit: async function (e) {\n                e.preventDefault();\n                let data = addPopupData;\n                await __handlePopupDataConnect().insertPopupOne(data);\n                await __handlePopupDataConnect().getPopupList();\n                handlePopupEventControl().addPopupModalClose();\n            },\n            addPopupDataOnValueChange: function (e) {\n                setAddPopupData({ ...addPopupData, [e.target.name]: e.target.value })\n            },\n            uploadImage: async function (e) {\n                //빈파일이 아닌 경우 함수 진행\n                if (e.target.files !== null) {\n                    setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', e.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await __handlePopupDataConnect().uploadImage(fd);\n                    setFullPageLoading(false);\n                }\n            },\n            addPopupDataOnValueChange: function (e) {\n                setAddPopupData({ ...addPopupData, [e.target.name]: e.target.value })\n            },\n            deletePopup: async function (popupId) {\n                let selectedPopup = popupList.filter(r => r.popupId == popupId)[0];\n                await __handlePopupDataConnect().deletePopupOne(selectedPopup);\n                await __handlePopupDataConnect().getPopupList();\n            }\n        }\n    }\n    return (\n        isLoged ?\n            (\n                <Container>\n                    {fullPageLoading ?\n                        <FullPageLoading>\n                            <FullPageLoadingSpinner>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </FullPageLoadingSpinner>\n                        </FullPageLoading>\n                        :\n                        \"\"\n                    }\n                    <AdminNav></AdminNav>\n                    <button onClick={testConsole}>con</button>\n                    <AdminBannerManage\n                        uploadFile={uploadFile}\n                        bannerListLoading={bannerListLoading}\n                        bannerList={bannerList}\n\n                        handleBannerImage={handleBannerImage}\n                    >\n                    </AdminBannerManage>\n\n                    {videoList ?\n                        <AdminVideoManage\n                            videoList={videoList}\n\n                            handleVideoEventControl={handleVideoEventControl}\n                        >\n\n                        </AdminVideoManage>\n                        :\n                        <></>\n                    }\n                    {popupList ?\n                        <AdminPopupManage\n                            popupList = {popupList}\n\n                            handlePopupEventControl={handlePopupEventControl}\n                        ></AdminPopupManage>\n                        :\n                        <></>\n                    }\n\n                    {addVideoModalOpen && addVideoData ?\n                        <AddVideoModal\n                            modalOpen={addVideoModalOpen}\n                            addVideoData={addVideoData}\n\n                            handleVideoEventControl={handleVideoEventControl}\n                        >\n\n                        </AddVideoModal>\n                        :\n                        <></>\n                    }\n                    {addPopupModalOpen && addPopupData ?\n                        <AddPopupModal\n                            addPopupData={addPopupData}\n                            modalOpen={addPopupModalOpen}\n\n                            handlePopupEventControl={handlePopupEventControl}\n                        ></AddPopupModal>\n                        :\n                        <></>\n                    }\n\n\n                </Container>\n            ) :\n            (\n                <></>\n            )\n    );\n}\n\nexport default AdminHomeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js",["525","526","527","528"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faTimes,\n    faChevronLeft,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst ImageButton = styled.button`\n    background:white;\n    padding:20px;\n    border:1px solid #333;\n    border-radius:15px;\n    white-space:normal;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageListWrapper = styled.div`\n    margin:15px 0;\n    height:220px;\n    padding:10px;\n    border:1px solid #f1f1f1;\n    overflow-x:scroll;\n    white-space: nowrap;\n`;\n\n\nconst ImageEl = styled.img`\n    width:384px;\n    height:170px;\n    margin:0 5px;\n    object-fit:cover;\n`;\n\nconst ImageDeleteBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:60px;\n    height:60px;\n`;\n\nconst ImageLeftBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:10%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageRightBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:90%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position:relative;\n    display:inline;\n    &:hover{\n        ${ImageEl}{\n            opacity:0.3;\n        }\n        ${ImageDeleteBtn}{\n            display:block;\n            color:black;\n        }\n        ${ImageDeleteBtn}:hover{\n            background-color:#ff0000a1;\n        }\n        ${ImageRightBtn}, ${ImageLeftBtn}{\n            display:block;\n            color:black;\n        }\n    }\n`;\n\nconst CurrentBannerListLoaderWrapper = styled.div`\n    text-align:center;\n    \n`;\nconst AdminBannerManage = (props) =>{\n    const {\n        uploadFile,\n        bannerListLoading,\n        bannerList\n    } = props;\n\n    const {\n        handleBannerImage\n    } = props;\n    return(\n        <Container>\n            <div>\n                <h4>배너 등록</h4>\n                <input type='file' id='i_banner_uploadfile' accept=\"image/*\" onChange={(e)=>handleBannerImage().upToServer(e)} hidden/>\n                <ImageButton type=\"button\" onClick={()=>handleBannerImage().uploaderOpen()}>이미지 업로드<br/>1920x850 권장</ImageButton>\n                <ImageListWrapper>\n                    {uploadFile.map(data=>{\n                        return(\n                            <ImageBox key={data.uuid}>\n                                <ImageEl src={data.imageUrl}></ImageEl>\n                                <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteImage(data.uuid)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                            </ImageBox>\n                        )\n                    })}\n                    \n                </ImageListWrapper>\n                <button className='btn btn-primary' onClick={()=>handleBannerImage().submitBanner()}>배너로 등록하기</button>\n            </div>\n            <hr/>\n            <div>\n                <h4>현재 배너 리스트</h4>\n                <ImageListWrapper>\n                    {bannerListLoading ==false && bannerList!=[]? \n                        bannerList.map((data,index)=>{\n                            return(\n                                <ImageBox key={data.id}>\n                                    <ImageEl src={data.imageUrl}></ImageEl>\n                                    <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteBanner(data.id)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                                    {index==0?'':<ImageLeftBtn onClick={()=>handleBannerImage().moveLeft(index)}><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon></ImageLeftBtn>}\n                                    {index==bannerList.length-1?'':<ImageRightBtn onClick={()=>handleBannerImage().moveRight(index)}><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></ImageRightBtn>}\n                                </ImageBox>\n                            );\n                        })\n                        :\n                        <CurrentBannerListLoaderWrapper>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </CurrentBannerListLoaderWrapper>\n                    }\n                </ImageListWrapper>\n            </div>\n        </Container>\n    );\n}\n\nexport default AdminBannerManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js",["529","530","531"],"function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nfunction dateToYYYYMMDD(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nfunction dateToYYYYMMDD_hhmmss(date) {\n    function leadingZeros(n, digits) {\n        var zero = '';\n        n = n.toString();\n\n        if (n.length < digits) {\n            for (let i = 0; i < digits - n.length; i++)\n                zero += '0';\n        }\n        return zero + n;\n    }\n    var d = new Date(date);\n    var s =\n        leadingZeros(d.getFullYear(), 4) + '-' +\n        leadingZeros(d.getMonth() + 1, 2) + '-' +\n        leadingZeros(d.getDate(), 2) + ' ' +\n\n        leadingZeros(d.getHours(), 2) + ':' +\n        leadingZeros(d.getMinutes(), 2) + ':' +\n        leadingZeros(d.getSeconds(), 2);\n\n    return s;\n}\nexport {\n    uuidv4,\n    dateToYYYYMMDD,\n    dateToYYYYMMDD_hhmmss\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js",["532","533","534","535","536","537","538"],"import { useEffect, useRef, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport YouTube from 'react-youtube';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport {getCookie,setCookie} from '../../../handler/CookieHandler';\n\nconst floatingPlayerTitleAnimation = () => {\n    return keyframes`\n        50% {\n            opacity:1;\n            transform: skew(-15deg) scale(1.2); \n            /* transform: scale(1.1); */\n        }\n    `;\n}\n\nconst Container = styled.div`\n    /* border-top:1px dashed #ee5470; */\n    padding-bottom: 20px;\n`;\n\nconst ItemBox = styled.div`\n    position:relative;\n    min-height:150px;\n    padding-top:15px;\n`;\n\nconst YoutubeBox = styled.div`\n    ${(props) => props.floating_close == true || props.scroll_y >= props.offset_top - document.documentElement.clientHeight ?\n        css`\n            position:relative;\n            @media only screen and (max-width: 768px){\n                width:100%;\n            }\n        ` :\n        css`\n            position:fixed;\n            bottom:88px;\n            right:13px;\n            @media only screen and (max-width: 768px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                bottom:74px;\n                right:0;\n            }\n            @media only screen and (max-width: 320px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                bottom:64px;\n                right:0;\n            }\n        `\n    }\n    \n    width:500px;\n    min-height:150px;\n    padding-top:15px;\n\n    .youtube-player-box{\n        position: relative;\n        padding-bottom: 56.25%;\n        padding-top: 25;\n        height: 0;\n    }\n    .youtube-player-el{\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    & .titleEl{\n        display:inline-block;\n        opacity:.5;\n        color:white;\n        font-size:15px;\n        padding-left: 20px;\n        animation: ${floatingPlayerTitleAnimation} 1.5s linear infinite;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        \n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n`;\n\nconst VideoPlayerBox = styled.div`\n    /* ${(props) => props.floating_close == true || props.scroll_y >= props.offset_top - document.documentElement.clientHeight ?\n        css`\n            position:relative;\n            @media only screen and (max-width: 768px){\n                width:100%;\n            }\n        ` :\n        css`\n            position:fixed;\n            bottom:20%;\n            right:5%;\n            @media only screen and (max-width: 768px){\n                width:${`${document.documentElement.clientWidth - 100}px`};\n                right:0;\n            }\n        `\n    } */\n    @media only screen and (max-width: 768px){\n        width:100%;\n    }\n    width:500px;\n    min-height:150px;\n    padding-top:15px;\n\n    .youtube-player-box{\n        position: relative;\n        padding-bottom: 56.25%;\n        padding-top: 25;\n        height: 0;\n    }\n    .youtube-player-el{\n        position: absolute;\n        top: 0;\n        left: 0;\n    }\n\n    & .titleEl{\n        display:inline-block;\n        opacity:.5;\n        color:white;\n        font-size:15px;\n        padding-left: 20px;\n        animation: ${floatingPlayerTitleAnimation} 1.5s linear infinite;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        \n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n`;\nconst ItemTitle = styled.div`\n    position:absolute;\n    width:100%;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    -ms-transform: translate(-50%, -50%);\n    -webkit-transform: translate(-50%, -50%);\n    text-align:center;\n    font-weight:600;\n    & .titleEl{\n        font-size:40px;\n        border-left: 5px solid #ee5470; \n        padding-left: 20px;\n    }\n    & .funnyland-gradient{\n        background: linear-gradient(to right, #ee5470, #f8bac9);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    & .workman-text{\n        color:red;\n        text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -moz-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n        -webkit-text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 yellow, 0 -1px yellow;\n    }\n\n    @media only screen and (max-width:768px){\n        top:50%;\n        & .titleEl{\n            font-size:25px;\n        }\n    }\n\n    \n`;\n\nconst VideoBottomTitle = styled.div`\n    margin:8px;\n    padding:8px;\n    text-align:center;\n    font-weight:600;\n    /* border-top:1px solid #f1f1f1; */\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst ContainerTitle = styled.div`\n    /* color: white; */\n    text-align:center;\n    /* font-size: 40px; */\n    font-size: 50px;\n    font-weight:600;\n    padding:40px;\n\n    @media only screen and (max-width:768px){\n        /* padding:0; */\n        /* font-size: 26px; */\n        font-size: 32px;\n    }\n`;\n\nconst opts = {\n    width: '100%',\n    height: '100%',\n    playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n    },\n};\n\nconst _onReady = (event) => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n}\n\nconst YoutubePlayPart = (props) => {\n    const floatVideoCloseCookie = getCookie('float_video_close');\n    const youtubeContainerRef = useRef();\n    const player = useRef();\n    const [myOffsetTop, setMyOffsetTop] = useState(0);\n    const [floatingClose, setFloatingClose] = useState(false);\n\n    useEffect(() => {\n        // console.log(floatVideoCloseCookie);\n        if(floatVideoCloseCookie && floatVideoCloseCookie==1){\n            setFloatingClose(true);\n        }else{\n            setFloatingClose(false);\n        }\n    }, [])\n    useEffect(() => {\n\n        setMyOffsetTop(youtubeContainerRef.current.offsetTop);\n    }, [props.scrollY])\n\n    const handleFloatingClose = () => {\n        player.current.getInternalPlayer().pauseVideo();\n        setFloatingClose(true);\n        setCookie('float_video_close','1',24*60*60*1000);\n    }\n    return (\n        <>\n            <Container ref={youtubeContainerRef}>\n                <ContainerTitle><span style={{color:'#ee5470', fontWeight:'800'}}>VIDEOS</span></ContainerTitle>\n                <div className='container-fluid'>\n                    <div className='row'>\n                        {/* <ItemBox className='col-sm-6'>\n                            <ItemTitle>\n                                <span className='titleEl'><b className='funnyland-gradient'>Funnyland</b> x <b className='workman-text'>Workman</b></span>\n                            </ItemTitle>            \n                        </ItemBox> */}\n                        {props.videoList.map(r => {\n                            if (r.videoDisplay == 1) {\n                                return (\n                                    <YoutubeBox\n                                        key={r.videoId}\n                                        className='col-sm-6'\n                                        scroll_y={props.scrollY}\n                                        offset_top={myOffsetTop}\n                                        floating_close={floatingClose}\n                                    >\n                                        {props.scrollY && myOffsetTop && props.scrollY >= myOffsetTop - document.documentElement.clientHeight ? '' :\n                                            <div className='clearfix'>\n                                                <span className='titleEl'><b className='funnyland-gradient'>Funnyland</b> x {r.videoName}</span>\n                                                <button type='button' className='float-right' style={{ border: 'none', background: 'none', color: 'gray', fontSize:'25px' }} onClick={() => handleFloatingClose()}><FontAwesomeIcon icon={faTimesCircle}></FontAwesomeIcon></button>\n                                            </div>\n                                        }\n                                        <YouTube \n                                            ref={player} \n                                            // videoId=\"-F28Byn1bbU\" \n                                            videoId={r.videoKey}\n                                            opts={opts} onReady={_onReady} className='youtube-player-el' containerClassName='youtube-player-box' />\n                                            {props.scrollY && myOffsetTop && props.scrollY >= myOffsetTop - document.documentElement.clientHeight ? \n                                                <VideoBottomTitle>{r.videoName}</VideoBottomTitle>\n                                                :\n                                                ''\n                                            }\n                                            \n                                    </YoutubeBox>\n                                );\n                            } else {\n                                return (\n                                    <VideoPlayerBox\n                                        key={r.videoId}\n                                        className='col-sm-6'\n                                    >\n                                        <YouTube \n                                            ref={player} \n                                            // videoId=\"-F28Byn1bbU\" \n                                            videoId={r.videoKey}\n                                            opts={opts} onReady={_onReady} className='youtube-player-el' containerClassName='youtube-player-box' />\n                                            <VideoBottomTitle>{r.videoName}</VideoBottomTitle>\n                                    </VideoPlayerBox>\n                                )\n                            }\n                        })}\n\n\n                    </div>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default YoutubePlayPart;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js",["539","540","541","542","543"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:80%;\n    display:grid;\n    grid-template-columns:repeat(3,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props) => props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props) => props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst FoundTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>창업안내</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n\n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    창업안내\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n\n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage == 'intro1' ? 1 : 0}\n                        to='/found/intro1'\n                    >\n                        창업 절차 안내\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage == 'intro3' ? 1 : 0}\n                        to='/found/intro3'\n                    >\n                        임대 절차 안내\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage == 'intro2' ? 1 : 0}\n                        to='/found/intro2'\n                    >\n                        상담신청\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default FoundTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js",["544","545","546"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport FoundTopLayout from '../layout/FoundTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst FoundIntro2Main = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <FoundTopLayout\n                title={'상담신청'}\n                linkPage={'intro2'}\n            ></FoundTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            FRANCHISE INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect defaultValue={counselingType} onChange={(e)=>setCounselingType(e.target.value)}>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='rental'>임대상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                {/* <div className='col-12 mt-2 mb-2'>\n                                    <label className='pl-1'>주소</label>\n                                    <ApplicationInput type='text' name='address' placeholder='주소를 입력해주세요.' value={address} onChange={(e)=>setAddress(e.target.value)}></ApplicationInput>\n                                </div> */}\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>층수</label>\n                                    <ApplicationInput type='text' name='floor' placeholder='점포 층수를 입력해주세요.' value={floor} onChange={(e)=>setFloor(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망오픈일</label>\n                                    <ApplicationDatePicker \n                                        dateFormat=\"yyyy년 MM월 dd일\"\n                                        placeholderText=\"희망오픈일 선택\"\n                                        selected={openDate} onChange={date=>setOpenDate(date)} strictParsing></ApplicationDatePicker>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span> <a href='/policy/privacy' target='_blank'>보기</a></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default FoundIntro2Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js",["547","548","549","550"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\nimport queryString from 'query-string';\n\nconst counselingDataConnect = () =>{\n    return{\n        searchCounselingAll: async function(){\n            let query = queryString.parse(window.location.search);\n            return await axios.get('/api/search/counseling/all',{\n                params:{\n                    pageIndex:query.pageIndex ? query.pageIndex-1 : 0\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Error code : 405')\n                }\n            });\n        },\n        insertCounselingOne: async function(data){\n            return await axios.post('/api/insert/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 405');\n                }\n            })\n        },\n        updateCounselingOne: async function(data){\n            return await axios.post('/api/update/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 500');\n                }\n            })\n        },\n        deleteCounselingOne: async function(data){\n            return await axios.post('/api/delete/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport {\n    counselingDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js",["551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567"],"import { useEffect ,useState } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// data connect\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// handler\nimport {dateToYYYYMMDD,dateToYYYYMMDD_hhmmss} from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport PageableComponent from './PageableComponent';\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    /* padding:2%; */\n`;\n\nconst ListWrapper = styled.div`\n    position:relative;\n    border:1px solid #a1a1a1;\n    border-radius:5px;\n    padding:8px;\n    margin: 15px 0;\n`;\n\nconst ListWrapperBlind = styled.div`\n    position:absolute;\n    left:0;\n    top:50px;\n    width:100%;\n    height:calc(100% - 50px);\n    background-color:#91919180;\n    background: repeating-linear-gradient(45deg, #44444430, #44444430 10px, #88888830 0, #88888830 20px);\n    z-index:2;\n`;\n\nconst ListTextField = styled.div`\n    font-size:12px;\n    font-weight:600;\n    padding:5px;\n    border-bottom:1px dotted #818181;\n    /* border-radius:3px; */\n`;\n\nconst AdminCounselingMain = ({match,location,history}) =>{\n    \n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [counselingData, setCounselingData] = useState(null);\n    const [counselingPage, setCounselingPage] = useState(null);\n\n    useEffect(()=>{\n        async function fetchInit() {\n            if(isLoged){\n                await __handleDataConnect().getCounselingList();\n                handleScrollToTop();\n                // console.log('heoo')\n            }\n        }\n\n        fetchInit();\n        \n    },[isLoged, location])\n\n    const __handleDataConnect = () =>{\n        return {\n            getCounselingList : async function(){\n                let data = await counselingDataConnect().searchCounselingAll();\n                // console.log(data);\n                if(data){\n                    if(data.message == 'success'){\n                        setCounselingData(data.data);\n                        setCounselingPage(data.page);\n                    }else if(data.message == 'not_auth'){\n                        alert('관리자 권한이 없습니다.');\n                        history.push('/');\n                    }else if(data.message == 'user_invalid'){\n                        alert('로그인 세션이 만료되었습니다.');\n                        history.push('/admin');\n                    }\n                }else{\n                    alert('undefined error');\n                }\n            },\n            setCounselingAdminCheck: function(){\n                return {\n                    setCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 1;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    },\n                    setUnCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 0;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    }\n                }\n            },\n            deleteCounselingOne: async function(id){\n                let data = counselingData.filter(r=>r.id==id)[0];\n                let resData = await counselingDataConnect().deleteCounselingOne(data);\n                if(resData && resData.message == 'success'){\n                    alert('삭제되었습니다.');\n                    await __handleDataConnect().getCounselingList();\n                }\n            }\n        }\n    }\n\n    const AdminCheckBtnProp = (props) =>{\n        if(props.checked==0){\n            return <button className='btn btn-sm btn-outline-danger' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setCheck(props.id)}>미확인</button>\n        }else{\n            return <button className='btn btn-sm btn-outline-primary' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setUnCheck(props.id)}>확인됨</button>\n        }\n    }\n\n    return(\n        isLoged? \n        <>\n            <Container>\n                <AdminNav></AdminNav>\n                <ListContainer className='container-fluid'>\n                    {counselingPage && counselingData ? counselingData.map((r,index)=>{\n                        let itemIndex = counselingPage.displaySize*(counselingPage.curr-1)+index+1;\n                        return(\n                            <ListWrapper key={`${r.id}-${itemIndex}`}>\n                                {r.adminChecked == 1 ? <ListWrapperBlind></ListWrapperBlind> : ''}\n                                <ListTextField>\n                                    <span style={{padding:'0 5px'}}>\n                                        {itemIndex}-{r.id}\n                                    </span>\n                                    {r.counselingType=='counseling'?\n                                        <span style={{padding:'0 5px', color:'#6060d4'}}>가맹상담</span>\n                                    :''}\n                                    {r.counselingType=='rental'?\n                                        <span style={{padding:'0 5px', color:'#0d88f5'}}>임대상담</span>\n                                    :''}\n                                    {r.counselingType=='purchase'?\n                                        <span style={{padding:'0 5px', color:'#29b529'}}>상품상담</span>\n                                    :''}\n                                    {r.counselingType=='closed'?\n                                        <span style={{padding:'0 5px', color:'#e25555'}}>폐업상담</span>\n                                    :''}\n                                    {r.counselingType=='renewal'?\n                                        <span style={{padding:'0 5px', color:'#c31ec3'}}>리뉴얼상담</span>\n                                    :''}\n                                    <span style={{padding:'0 5px'}}>\n                                        <AdminCheckBtnProp \n                                            id={r.id}\n                                            checked={r.adminChecked}\n                                        >\n                                        </AdminCheckBtnProp>\n                                    </span>\n                                    {r.adminChecked ? <span style={{padding:'0 5px'}}><button className='btn btn-sm btn-danger' onClick={()=>__handleDataConnect().deleteCounselingOne(r.id)}>삭제</button></span> :''}\n                                </ListTextField>\n                                <div className='row'>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>상담 등록일 : {dateToYYYYMMDD_hhmmss(r.createdAt)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>신청자 : {r.applierName}</ListTextField>\n                                        <ListTextField>전화번호 : {r.applierPhone}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>희망지역 : {r.applierArea}</ListTextField>\n                                        {/* <ListTextField>주소 : {r.address}</ListTextField> */}\n                                        <ListTextField>점포층수 : {r.floor}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>오픈예정일 : {r.openDate == null? '' : dateToYYYYMMDD(r.openDate)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>\n                                            <div>기타문의내용</div>\n                                            <div>{r.desc}</div>\n                                        </ListTextField>\n                                    </div>\n                                </div>\n                                \n                            </ListWrapper>\n                        )\n                    })\n                    :\n                    <></>\n                    }\n                </ListContainer>\n                {counselingPage ? <PageableComponent\n                    defaultUrl={'/admin/counseling'}\n                    pageData={counselingPage}\n                ></PageableComponent>\n                :<></>}\n                \n            </Container>\n        </>\n        :\n        <></>\n    );\n}\n\nexport default AdminCounselingMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js",["568","569"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { Link } from 'react-router-dom';\nconst AdminNav = () =>{\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    window.location.href='/'\n                }\n            })\n    }\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/admin\">관리자 페이지</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>홈</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/counseling'>상담신청 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/store'>매장 안내 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/product'>상품 안내 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/cs'>고객센터 관리</Link>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e) => handleLogoutSubmit(e)}>\n                    <button type='submit' className='btn btn-outline-danger'>로그아웃</button>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default AdminNav;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js",["570"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nconst Container = styled.div`\n`;\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:props.defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.prev}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.next}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js",["571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597"],"import { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// handler\nimport { dateToYYYYMMDD, dateToYYYYMMDD_hhmmss } from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport CategoryComponent from './CategoryComponent';\nimport AddCategoryModal from './AddCategoryModal';\nimport FixCategoryModal from './FixCategoryModal';\nimport ProductComponent from './ProductComponent';\nimport AddProductModal from './AddProductModal';\nimport UpdateProductModal from './UpdateProductModal';\n\nconst Container = styled.div`\n    margin-bottom:150px;\n`;\nconst AdminProductMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n    const addProductImageUploaderRef = useRef();\n    const addProductFieldRef = useRef();\n\n    const updateProductImageUploaderRef = useRef();\n    const updateProductFieldRef = useRef();\n\n    const [loading, setLoading] = useState(false);\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [addCategoryModalOpen, setAddCategoryModalOpen] = useState(false);\n    const [addCategoryName, setAddCategoryName] = useState(null);\n    const [addCategoryData, setAddCategoryData] = useState({\n        categoryName: '',\n        priority: 9999\n    })\n\n    const [fixCategoryModalOpen, setFixCategoryModalOpen] = useState(false);\n    const [fixCategoryData, setFixCategoryData] = useState(null)\n\n    const [addProductModalOpen, setAddProductModalOpen] = useState(false);\n    const [addProductItemData, setAddProductItemData] = useState({\n        categoryId: '',\n        priority: 9999,\n        name: '',\n        introduce: '',\n        summary: '',\n        editorData: '',\n        newChecked:false,\n        hitChecked:false,\n        eventChecked:false,\n        imageUrl: '/images/sample/imageNo.png'\n    });\n\n    const [updateProductModalOpen, setUpdateProductModalOpen] = useState(false);\n    const [updateProductItemData, setUpdateProductItemData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            if (isLoged) {\n                await __handleDataConnect().getProductCategoryList();\n                await __handleDataConnect().getProductList();\n            }\n        }\n        fetchData();\n    }, [isLoged, location]);\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList({\n                                size: data.data.length,\n                                data: data.data\n                            })\n                        }\n                    })\n            },\n            deleteProductCategoryOne: async function (jsonData) {\n                await productDataConnect().deleteProductCategoryOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n                await __handleDataConnect().getProductCategoryList();\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            },\n            insertProductOne: async function (jsonData) {\n                await productDataConnect().insertProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 등록되었습니다.');\n                            }else{\n                                alert('error')\n                            }\n                        }\n                    });\n            },\n            updateProductOne: async function (jsonData) {\n                await productDataConnect().updateProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 수정되었습니다.');\n                            }\n                        }\n                    });\n            },\n            deleteProductOne: async function (jsonData) {\n                await productDataConnect().deleteProductOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n            },\n            updateCategoryOne: async function (jsonData) {\n                await productDataConnect().updateCategoryOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('카테고리가 수정되었습니다.');\n                            }\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleAddCategoryModalControl = () => {\n        return {\n            open: function () {\n                setAddCategoryModalOpen(true);\n            },\n            close: function () {\n                setAddCategoryModalOpen(false);\n                handleAddCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                // let jsonData = {\n                //     categoryName: addCategoryName\n                // }\n                await productDataConnect().insertProductCategoryOne(addCategoryData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품 카테고리가 생성되었습니다.');\n                            }\n                        }\n                    });\n                await __handleDataConnect().getProductCategoryList();\n                handleAddCategoryModalControl().close();\n\n            },\n            addCategoryDataOnChange: function (e) {\n                setAddCategoryData({ ...addCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setAddCategoryData({\n                    categoryName: '',\n                    priority: 9999\n                })\n            }\n        }\n    }\n\n    const handleFixCategoryModalControl = () => {\n        return {\n            open: function (id) {\n                let data = categoryList.data.filter(r => r.id == id)[0];\n                setFixCategoryData(data);\n                setFixCategoryModalOpen(true);\n            },\n            close: function () {\n                setFixCategoryModalOpen(false);\n                handleFixCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateCategoryOne(fixCategoryData);\n                await __handleDataConnect().getProductCategoryList();\n                handleFixCategoryModalControl().close();\n\n            },\n            categoryDataOnChange: function (e) {\n                setFixCategoryData({ ...fixCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setFixCategoryData(null);\n            }\n        }\n    }\n\n    const handleCategoryControl = () => {\n        return {\n            deleteOne: async function (id) {\n                if (window.confirm('정말로 삭제하시겠습니까?')) {\n                    let jsonData = categoryList.data.filter(r => r.id == id)[0];\n                    await __handleDataConnect().deleteProductCategoryOne(jsonData);\n                } else {\n                    return;\n                }\n\n            }\n        }\n    }\n\n    const handleProductControl = () => {\n        return {\n            deleteOne: async function (id) {\n                let jsonData = productList.filter(r => r.product.id == id)[0].product;\n                await __handleDataConnect().deleteProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n            },\n            categoryOnChange: async function (e) {\n                \n                let categoryId = e.target.value;\n                \n                let queryData = queryString.stringify({...query, categoryId: categoryId });\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            newCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.newChecked=true;\n                }else{\n                    delete query.newChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            hitCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.hitChecked=true;\n                }else{\n                    delete query.hitChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            eventCheckedOnChange: async function(e){\n                \n                if(e.target.checked){\n                    query.eventChecked=true;\n                }else{\n                    delete query.eventChecked;\n                }\n                let queryData = queryString.stringify({...query});\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n\n            searchAll: async function () {\n                history.push('/admin/product');\n            }\n        }\n    }\n\n    const handleAddProductModalControl = () => {\n        return {\n            open: function () {\n                handleUpdateProductModalControl().close();\n                setAddProductModalOpen(true);\n            },\n            close: function () {\n                setAddProductModalOpen(false);\n                handleAddProductModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                let jsonData = {\n                    categoryId: addProductItemData.categoryId,\n                    priority: addProductItemData.priority,\n                    name: addProductItemData.name,\n                    introduce: addProductItemData.introduce,\n                    summary: addProductItemData.summary,\n                    desc: addProductItemData.editorData,\n                    imageUrl: addProductItemData.imageUrl,\n                    newChecked: addProductItemData.newChecked,\n                    hitChecked: addProductItemData.hitChecked,\n                    eventChecked: addProductItemData.eventChecked\n                }\n                // console.log(jsonData);\n                await __handleDataConnect().insertProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n                handleAddProductModalControl().close();\n\n            },\n            modalInputClear: function () {\n                setAddProductItemData({\n                    categoryId: '',\n                    priority: 9999,\n                    name: '',\n                    introduce: '',\n                    summary: '',\n                    editorData: '',\n                    imageUrl: '/images/sample/imageNo.png',\n                    newChecked:false,\n                    hitChecked:false,\n                    eventChecked:false\n                });\n            },\n            onValueChange: function (e) {\n                setAddProductItemData({ ...addProductItemData, [e.target.name]: e.target.value })\n            },\n            onValueCheckedChange: function(e){\n                // console.log(e.target.checked);\n                setAddProductItemData({...addProductItemData,[e.target.name]: e.target.checked})\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        addProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setAddProductItemData({ ...addProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleAddProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setAddProductItemData({ ...addProductItemData, ['editorData']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    const handleUpdateProductModalControl = () => {\n        return {\n            open: function (targetId) {\n                handleAddProductModalControl().close();\n\n                let data = productList.filter(r => r.product.id == targetId)[0].product;\n                // console.log(data);\n                setUpdateProductItemData(data);\n                setUpdateProductModalOpen(true);\n            },\n            close: function () {\n                setUpdateProductModalOpen(false);\n                setUpdateProductItemData(null);\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateProductOne(updateProductItemData);\n                await __handleDataConnect().getProductList();\n                handleUpdateProductModalControl().close();\n            },\n            onValueChange: function (e) {\n                setUpdateProductItemData({ ...updateProductItemData, [e.target.name]: e.target.value })\n            },\n            onValueCheckedChange: function(e){\n                // console.log(e.target.checked);\n                setUpdateProductItemData({...updateProductItemData,[e.target.name]: e.target.checked})\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        updateProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setUpdateProductItemData({ ...updateProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleUpdateProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setUpdateProductItemData({ ...updateProductItemData, ['desc']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    return (\n        isLoged ?\n            <>\n                <Container>\n                    <AdminNav></AdminNav>\n                    {categoryList ?\n                        <CategoryComponent\n                            categoryList={categoryList}\n\n                            handleModalControl={handleAddCategoryModalControl}\n                            handleCategoryControl={handleCategoryControl}\n                            handleFixModalControl={handleFixCategoryModalControl}\n                        ></CategoryComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>카테고리 리스트 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n                    {categoryList && productList && productPage ?\n                        <ProductComponent\n                            categoryList={categoryList}\n                            productList={productList}\n                            productPage={productPage}\n                            updateProductModalOpen={updateProductModalOpen}\n\n                            handleProductControl={handleProductControl}\n                            handleAddProductModalControl={handleAddProductModalControl}\n                            handleUpdateProductModalControl={handleUpdateProductModalControl}\n                        >\n                        </ProductComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>상품 목록 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n\n                    <AddCategoryModal\n                        modalOpen={addCategoryModalOpen}\n                        addCategoryData={addCategoryData}\n                        addCategoryName={addCategoryName}\n\n\n                        handleModalControl={handleAddCategoryModalControl}\n                    ></AddCategoryModal>\n                    <FixCategoryModal\n                        modalOpen={fixCategoryModalOpen}\n                        fixCategoryData={fixCategoryData}\n\n                        handleModalControl={handleFixCategoryModalControl}\n                    ></FixCategoryModal>\n                    <AddProductModal\n                        addProductFieldRef={addProductFieldRef}\n                        imageUploaderRef={addProductImageUploaderRef}\n\n                        categoryList={categoryList}\n                        addProductItemData={addProductItemData}\n\n                        modalOpen={addProductModalOpen}\n                        handleModalControl={handleAddProductModalControl}\n                        handleEditorControl={handleAddProductEditorControl}\n                    >\n\n                    </AddProductModal>\n                    <UpdateProductModal\n                        updateProductFieldRef={updateProductFieldRef}\n                        imageUploaderRef={updateProductImageUploaderRef}\n\n                        modalOpen={updateProductModalOpen}\n                        categoryList={categoryList}\n                        updateProductItemData={updateProductItemData}\n\n                        handleModalControl={handleUpdateProductModalControl}\n                        handleEditorControl={handleUpdateProductEditorControl}\n                    >\n\n                    </UpdateProductModal>\n                </Container>\n            </>\n            :\n            <></>\n    );\n}\n\nexport default AdminProductMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js",["598"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                <DialogTitle className='text-center'>{\"카테고리 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>카테고리</label>\n                            <input type=\"text\" className=\"form-control\" name='categoryName' value={props.addCategoryData.categoryName} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>카테고리 우선도</label>\n                            <input type=\"number\" className=\"form-control\" name='priority' value={props.addCategoryData.priority} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                            <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                            취소\n                    </Button>\n                        <Button type='submit' color=\"primary\">\n                            카테고리 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633"],"import axios from 'axios';\nimport queryString from 'query-string';\nimport { getCookie } from '../../handler/CookieHandler';\nconst productDataConnect = () => {\n    return {\n        searchProductCategoryAll: async function () {\n            return await axios.get('/api/search/product_category/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductCategoryOne: async function (data) {\n            return await axios.post('/api/insert/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductCategoryOne: async function (data) {\n            return await axios.post('/api/delete/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        // ============upload to s3=================\n        imageUploadToS3: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            //에러가 날 경우 처리\n            .catch(error => {\n                console.log(error.response);\n            });\n        },\n        // ==============upload to local===================\n        // imageUploadToS3: async function (fd) {\n        //     return await axios.post('/api/fileupload/external/image', fd, {\n        //         headers: {\n        //             'X-XSRF-TOKEN': getCookie('XSTO')\n        //         }\n        //     })\n        //     .then(res=>res.data)\n        //     //에러가 날 경우 처리\n        //     .catch(error => {\n        //         if(error.response.status==500){\n        //             alert('server 500 error.');\n        //         }else{\n        //             alert('server undefined error.');\n        //         }\n        //     });\n        // },\n        searchProductAll: async function () {\n            let query = queryString.parse(window.location.search);\n\n            return await axios.get('/api/search/product/all', {\n                params: {\n                    categoryId: query.categoryId,\n                    pageIndex: query.pageIndex ? query.pageIndex - 1 : 0,\n                    newChecked:query.newChecked && query.newChecked=='true' ? true : false,\n                    hitChecked:query.hitChecked && query.hitChecked=='true'? true : false,\n                    eventChecked:query.eventChecked && query.eventChecked=='true' ? true : false,\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        /**\n         * \n         * @param {boolean} newChecked \n         * @param {boolean} hitChecked \n         * @param {boolean} eventChecked \n         */\n        searchProductAllByCondition: async function (newChecked, hitChecked, eventChecked) {\n\n            return await axios.get('/api/search/product/all', {\n                params: {\n                    newChecked:newChecked ? true : false,\n                    hitChecked:hitChecked ? true : false,\n                    eventChecked:eventChecked ? true : false,\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductOne: async function (data) {\n            return await axios.post('/api/insert/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateProductOne: async function (data) {\n            return await axios.post('/api/update/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductOne: async function (data) {\n            return await axios.post('/api/delete/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        updateCategoryOne: async function (data) {\n            return await axios.post('/api/update/category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        searchProductOne: async function (productId) {\n            return await axios.get('/api/search/product/one', {\n                params: {\n                    productId:productId\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        }\n    }\n}\n\nexport {\n    productDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js",["634","635","636","637"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// components\nimport ProductPageableComponent from './ProductPageableComponent';\n\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    \n`;\n\nconst ListWrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n\n`;\n\nconst TopPart = styled.div`\n    padding:8px;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst TopPartTitle = styled.div`\n    font-size:21px;\n    font-weight:600;\n`;\n\nconst TopPartAddProduct = styled.button`\n    \n`;\n\nconst BodyPart = styled.div`\n    padding:8px;\n`;\n\nconst TableBox = styled.div`\n\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\nconst ImageEl = styled.img`\n    width:80px;\n    height:80px;\n    object-fit:cover;\n`;\n\nconst ControlBtn = styled.button`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst ControlLink = styled.a`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\nconst ProductComponent = (props) => {\n    // console.log(queryString.parse(window.location.search).categoryId?queryString.parse(window.location.search).categoryId:'')\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <ListContainer className='container-fluid'>\n                    <ListWrapper>\n                        <TopPart className='clearfix'>\n                            <TopPartTitle className='float-left'>상품 목록</TopPartTitle>\n                            <TopPartAddProduct type='button' className='float-right btn btn-outline-primary' onClick={() => props.handleAddProductModalControl().open()}>상품 추가</TopPartAddProduct>\n                        </TopPart>\n\n                        <BodyPart>\n                            <div className='pt-3 pb-3'>\n                                <p>카테고리별 조회</p>\n                                <div className='form-row'>\n                                    <div className=\"col\">\n                                        <select className=\"form-control\" name='categoryId' value={query.categoryId ? query.categoryId : ''} onChange={(e) => props.handleProductControl().categoryOnChange(e)} required>\n                                            <option value='' hidden>--카테고리 선택--</option>\n                                            {props.categoryList ? props.categoryList.data.map(r => {\n                                                return (\n                                                    <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                                );\n                                            })\n                                                :\n                                                <></>\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-success' onClick={() => props.handleProductControl().searchAll()}>전체조회</button>\n                                    </div>\n                                </div>\n                                <div className='form-group'>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={query.newChecked && query.newChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().newCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">신상품</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={query.hitChecked && query.hitChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().hitCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">히트상품</label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={query.eventChecked && query.eventChecked=='true' ? true : false} onChange={(e)=>props.handleProductControl().eventCheckedOnChange(e)}/>\n                                        <label className=\"form-check-label\">이벤트렌탈</label>\n                                    </div>\n                                </div>\n                            </div>\n                            {props.productList ?\n                                <TableBox className='table-responsive'>\n                                    <table className=\"table table-sm text-center\" style={{ tableLayout: 'fixed' }}>\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\" width='50'>#</th>\n                                                <th scope=\"col\" width='200'>상품명</th>\n                                                <th scope=\"col\" width='150'>이미지</th>\n                                                <th scope=\"col\" width='150'>카테고리</th>\n                                                <th scope=\"col\" width='100'>이벤트 뱃지</th>\n                                                <th scope=\"col\" width='200'>컨트롤</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.productList.map((r, index) => {\n                                                let itemIndex = props.productPage.displaySize * (props.productPage.curr - 1) + index + 1;\n                                                return (\n                                                    <tr key={r.product.id}>\n                                                        <TableTh scope=\"row\">{itemIndex}</TableTh>\n                                                        <TableTd>{r.product.name}</TableTd>\n                                                        <TableTd><ImageEl src={r.product.imageUrl}></ImageEl></TableTd>\n                                                        <TableTd>{r.category.categoryName}</TableTd>\n                                                        <TableTd>\n                                                            {r.product.newChecked ? <span className=\"badge badge-primary\" style={{ marginRight: '5px' }}>NEW</span> : <></>}\n                                                            {r.product.hitChecked ? <span className=\"badge badge-danger\" style={{ marginRight: '5px' }}>HIT</span> : <></>}\n                                                            {r.product.eventChecked ? <span className=\"badge badge-info\" style={{ marginRight: '5px' }}>EVENT</span> : <></>}\n                                                        </TableTd>\n                                                        <TableTd>\n                                                            <ControlLink\n                                                                href={`/product/detail?productId=${r.product.id}`}\n                                                                color_prop={'#80dd80'}\n                                                                className='btn btn-sm'\n                                                                target='_blank'\n                                                            >바로가기</ControlLink>\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#8080dd'}\n                                                                    onClick={() => props.handleUpdateProductModalControl().open(r.product.id)}\n                                                                >수정</ControlBtn>\n                                                            }\n\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#dd8080'}\n                                                                    onClick={() => props.handleProductControl().deleteOne(r.product.id)}\n                                                                >삭제</ControlBtn>\n                                                            }\n\n                                                        </TableTd>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </TableBox>\n                                :\n                                <></>\n                            }\n\n                        </BodyPart>\n                    </ListWrapper>\n                </ListContainer>\n                {props.productPage &&\n                    <ProductPageableComponent\n                        pageData={props.productPage}\n                    ></ProductPageableComponent>\n                }\n\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js",["638","639","640","641","642","643","644"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n// NOTE: Use the editor from source (not a build)!\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst editorConfiguration = {\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic','fontSize','fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image:{\n        toolbar:[\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table:{\n        contentToolbar:[\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\n\nconst AddProductModal = (props) => {\n    useEffect(() => {\n        function propFetch() {\n            if (props.modalOpen) {\n                handleScrollToMe();\n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () => {\n        props.addProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    return (\n        <>\n            {props.modalOpen ?\n                <Container className='container-fluid' ref={props.addProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 추가\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' defaultValue={props.addProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.addProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.addProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={props.addProductItemData.newChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">신상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={props.addProductItemData.hitChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">히트상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={props.addProductItemData.eventChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">이벤트렌탈</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.addProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.addProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.addProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.addProductItemData.editorData}\n                                onReady={editor => {\n                                    console.log(editor)\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={editorConfiguration}\n\n                            />\n                            {/* <CKEditor\n                                editor={ClassicEditor}\n                                config={editorConfiguration}\n                                data=\"<p>Hello from CKEditor 5!</p>\"\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    console.log('Editor is ready to use!', editor);\n                                }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    console.log({ event, editor, data });\n                                }}\n                                onBlur={(event, editor) => {\n                                    console.log('Blur.', editor);\n                                }}\n                                onFocus={(event, editor) => {\n                                    console.log('Focus.', editor);\n                                }}\n                            /> */}\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    상품 등록\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            // console.log(response.imageUrl)\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\n\nexport default AddProductModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js",["645","646","647","648","649","650","651"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n\n// NOTE: Use the editor from source (not a build)!\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// import Alignment from '@ckeditor/ckeditor5-alignment/src/alignment.js';\n// import Autoformat from '@ckeditor/ckeditor5-autoformat/src/autoformat.js';\n// import BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote.js';\n// import Bold from '@ckeditor/ckeditor5-basic-styles/src/bold.js';\n// import CKFinder from '@ckeditor/ckeditor5-ckfinder/src/ckfinder.js';\n// import CKFinderUploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js';\n// import Essentials from '@ckeditor/ckeditor5-essentials/src/essentials.js';\n// import FontColor from '@ckeditor/ckeditor5-font/src/fontcolor.js';\n// import FontSize from '@ckeditor/ckeditor5-font/src/fontsize.js';\n// import Heading from '@ckeditor/ckeditor5-heading/src/heading.js';\n// import Image from '@ckeditor/ckeditor5-image/src/image.js';\n// import ImageCaption from '@ckeditor/ckeditor5-image/src/imagecaption.js';\n// import ImageResize from '@ckeditor/ckeditor5-image/src/imageresize.js';\n// import ImageStyle from '@ckeditor/ckeditor5-image/src/imagestyle.js';\n// import ImageToolbar from '@ckeditor/ckeditor5-image/src/imagetoolbar.js';\n// import ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload.js';\n// import Indent from '@ckeditor/ckeditor5-indent/src/indent.js';\n// import Italic from '@ckeditor/ckeditor5-basic-styles/src/italic.js';\n// import Link from '@ckeditor/ckeditor5-link/src/link.js';\n// import List from '@ckeditor/ckeditor5-list/src/list.js';\n// import MediaEmbed from '@ckeditor/ckeditor5-media-embed/src/mediaembed.js';\n// import Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph.js';\n// import PasteFromOffice from '@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice';\n// import Table from '@ckeditor/ckeditor5-table/src/table.js';\n// import TableToolbar from '@ckeditor/ckeditor5-table/src/tabletoolbar.js';\n// import TextTransformation from '@ckeditor/ckeditor5-typing/src/texttransformation.js';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n    .ck-content blockquote .table:first-child {\n        margin-top: calc( 1em + 16px );\n        }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageEl = styled.img`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\n\nconst editorConfiguration = {\n    // plugins: [\n    //     Heading,\n    //     Alignment,\n    //     Essentials,\n    //     Bold,\n    //     Italic,\n    //     Link,\n    //     List,\n    //     Paragraph,\n    //     Indent,\n    //     Autoformat,\n    //     BlockQuote,\n    //     CKFinder,\n    //     CKFinderUploadAdapter,\n    //     FontColor,\n    //     FontSize,\n    //     Image,\n    //     ImageCaption,\n    //     ImageResize,\n    //     ImageStyle,\n    //     ImageToolbar,\n    //     ImageUpload,\n    //     MediaEmbed,\n    //     PasteFromOffice,\n    //     Table,\n    //     TableToolbar,\n    //     TextTransformation\n    // ],\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic','fontSize','fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image:{\n        toolbar:[\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table:{\n        contentToolbar:[\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst UpdateProductModal = (props) => {\n    // console.log(ClassicEditor.builtinPlugins.map( plugin => plugin.pluginName ));\n    useEffect(() => {\n        function propFetch() {\n            if (props.modalOpen) {\n                handleScrollToMe();\n\n            }\n        }\n        propFetch();\n    }, [props.modalOpen])\n\n    const handleScrollToMe = () => {\n        props.updateProductFieldRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <>\n            {props.modalOpen && props.updateProductItemData ?\n                <Container className='container-fluid' ref={props.updateProductFieldRef}>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"상품 수정\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleModalControl().close()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                            <div className=\"form-group\">\n                                <label>상품 카테고리 선택</label>\n                                <select className=\"form-control\" name='categoryId' value={props.updateProductItemData.categoryId} onChange={(e) => props.handleModalControl().onValueChange(e)} required>\n                                    <option value='' hidden>--선택--</option>\n                                    {props.categoryList ? props.categoryList.data.map(r => {\n                                        return (\n                                            <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                        );\n                                    })\n                                        :\n                                        <></>\n                                    }\n                                </select>\n                            </div>\n                            {/* <div className=\"form-group\">\n                                <label>상품 노출 우선도 (1~9999 숫자만 입력) 숫자가 낮을수록 우선도 높음</label>\n                                <input type=\"number\" name='priority' value={props.updateProductItemData.priority} onChange={(e) => props.handleModalControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div> */}\n                            <div className=\"form-group\">\n                                <label>상품명</label>\n                                <input type=\"text\" className=\"form-control\" name='name' value={props.updateProductItemData.name} onChange={(e) => props.handleModalControl().onValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='newChecked' checked={props.updateProductItemData.newChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">신상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='hitChecked' checked={props.updateProductItemData.hitChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">히트상품</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='eventChecked' checked={props.updateProductItemData.eventChecked} onChange={(e) => props.handleModalControl().onValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">이벤트렌탈</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>대표이미지 (권장 비율 1:1)</label>\n                                <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleModalControl().imageUploadToS3(e)} hidden></input>\n                                <figure>\n                                    <ImageEl src={props.updateProductItemData.imageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </figure>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 간단 소개</label>\n                                <input type=\"text\" className=\"form-control\" name='introduce' value={props.updateProductItemData.introduce} onChange={(e) => props.handleModalControl().onValueChange(e)} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>상품 요약 및 제원</label>\n                                {/* <input type=\"text\" className=\"form-control\" /> */}\n                                <textarea className='form-control' name='summary' value={props.updateProductItemData.summary} onChange={(e) => props.handleModalControl().onValueChange(e)}></textarea>\n                            </div>\n                            <label>상품 상세 설명</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.updateProductItemData.desc}\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    // console.log('Editor is ready to use!', editor);\n                                    // console.log(editor)\n                                }}\n                                // onChange={(event, editor) => {\n                                //     const data = editor.getData();\n                                //     console.log({ event, editor, data });\n                                // }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    console.log({ event, editor, data });\n                                    props.handleEditorControl().onChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={editorConfiguration}\n\n                            />\n                            {/* <CKEditor\n                                editor={ClassicEditor}\n                                config={editorConfiguration}\n                                data=\"<p>Hello from CKEditor 5!</p>\"\n                                onReady={editor => {\n                                    // You can store the \"editor\" and use when it is needed.\n                                    console.log('Editor is ready to use!', editor);\n                                }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    console.log({ event, editor, data });\n                                }}\n                                onBlur={(event, editor) => {\n                                    console.log('Blur.', editor);\n                                }}\n                                onFocus={(event, editor) => {\n                                    console.log('Focus.', editor);\n                                }}\n                            /> */}\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    수정하기\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default UpdateProductModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js",["652"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                {props.fixCategoryData ? <>\n                    <DialogTitle className='text-center'>{\"카테고리 수정\"}</DialogTitle>\n                    <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                        <DialogContent>\n                            <div className=\"form-group\">\n                                <label>카테고리명</label>\n                                <input type=\"text\" className=\"form-control\" name='categoryName' value={props.fixCategoryData.categoryName} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>카테고리 우선도</label>\n                                <input type=\"number\" className=\"form-control\" name='priority' value={props.fixCategoryData.priority} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                                <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                취소\n                    </Button>\n                            <Button type='submit' color=\"primary\">\n                                수정\n                    </Button>\n                        </DialogActions>\n                    </form>\n                </>:<></>}\n\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default FixCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js",["653"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst ProductPageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default ProductPageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js",["654","655","656","657","658","659","660"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CategoryNavComponent from './CategoryNavComponent';\nimport CategoryNavComponent2 from './CategoryNavComponent2';\nimport ProductComponent from './ProductComponent';\n\n\nconst ProductListMain = ({history,match,location}) => {\n    let query = queryString.parse(window.location.search);\n    const categoryNavRef = useRef();\n\n    useEffect(() => {\n        if(query.pageIndex){\n            _handleScrollToRef();\n        }else{\n            handleScrollToTop();\n        }\n        \n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [selectedCategory, setSelectedCategory] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductCategoryList();\n            await __handleDataConnect().getProductList();\n        }\n        fetchInit();\n    }, [location]);\n\n    useEffect(()=>{\n        function init(){\n            if(categoryList){\n                // console.log(categoryList);\n                handleSetSelectedCategory();\n            }\n        }\n        init();\n    },[categoryList])\n\n    const _handleScrollToRef = () =>{\n        categoryNavRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList(data.data)\n                        }\n                    })\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleSetSelectedCategory = () =>{\n        // console.log(query);\n        let category = {\n            id:0,\n            categoryName:'전체상품',\n            priority:0\n        }\n        if(query.categoryId){\n            let getCategory = categoryList.filter(r=>r.id==query.categoryId)[0];\n            if(getCategory){\n                category.id=getCategory.id;\n                category.categoryName=getCategory.categoryName;\n                category.priority=getCategory.priority;\n            }\n        }\n        setSelectedCategory(category);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품목록'}\n                linkPage={'list'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            <div ref={categoryNavRef}></div>\n            {categoryList && selectedCategory ?\n                <CategoryNavComponent2\n                    categoryList={categoryList}\n                    selectedCategory={selectedCategory}\n                ></CategoryNavComponent2>\n                :\n                <></>\n            }\n            {categoryList && selectedCategory && productList && productPage ? \n                <ProductComponent\n                    categoryList = {categoryList}\n                    selectedCategory={selectedCategory}\n                    productList = {productList}\n                    productPage = {productPage}\n                ></ProductComponent>\n                :\n                <></>\n            }\n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductListMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js",["661","662","663","664"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    min-height:250px;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n    \n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:80%;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst ProductTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>제품안내</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    제품안내\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='list'?1:0}\n                        to='/product/list'\n                    >\n                        제품목록\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='counsel'?1:0}\n                        to='/product/counsel'\n                    >\n                        제품상담신청\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default ProductTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js",["665","666","667","668","669"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    /* background:#f8bac9; */\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(13%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:1200px){\n        grid-template-columns:repeat(auto-fit,minmax(20%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:20px 0;\n    color:#333;\n    font-size:20px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:18px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n\n`;\n\nconst CategoryNavComponent = (props) => {\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <Wrapper className='container-fluid'>\n                    {props.categoryList && props.selectedCategory ?\n                        <GridGroup>\n                            {props.selectedCategory.id==0 && !query.newChecked && !query.hitChecked && !query.eventChecked? <GridEl to='/product/list' style={{color:'#ee5470'}}>전체상품</GridEl> : <GridEl to='/product/list'>전체상품</GridEl>}\n                            {query.newChecked && query.newChecked=='true' ? <GridEl to='/product/list?newChecked=true' style={{color:'#ee5470'}}>신상품</GridEl> : <GridEl to='/product/list?newChecked=true'>신상품</GridEl>}\n                            {query.hitChecked && query.hitChecked=='true' ? <GridEl to='/product/list?hitChecked=true' style={{color:'#ee5470'}}>히트상품</GridEl> : <GridEl to='/product/list?hitChecked=true'>히트상품</GridEl>}\n                            {query.eventChecked && query.eventChecked=='true' ? <GridEl to='/product/list?eventChecked=true' style={{color:'#ee5470'}}>이벤트 렌탈</GridEl> : <GridEl to='/product/list?eventChecked=true'>이벤트 렌탈</GridEl>}\n                            \n                            {props.categoryList.map(r => {\n                                if(r.id == props.selectedCategory.id){\n                                    return(\n                                        <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`} style={{color:'#ee5470'}}>{r.categoryName}</GridEl>\n                                    );    \n                                }\n                                return (\n                                    <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`}>{r.categoryName}</GridEl>\n                                );\n                            })}\n                        </GridGroup>\n                        :\n                        <></>\n                    }\n\n\n                </Wrapper>\n            </Container>\n        </>\n    )\n}\n\nexport default CategoryNavComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js",["670","671","672"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n// components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductListWrapper = styled.div`\n    padding:50px 15px;\n    display:grid;\n    grid-template-columns: repeat(4,1fr);\n    grid-template-rows: auto auto;\n    grid-gap:15px;\n    @media only screen and (max-width:992px){\n        grid-template-columns: repeat(3,1fr);\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns: repeat(2,1fr);\n    }\n`;\n\nconst ProductImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ProductImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst ProductContentBox = styled.div`\n    /* padding:2px 0; */\n`;\n\nconst ProductContentTitle = styled.div`\n/* padding:2px 0; */\n    font-size:18px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        font-size:13px;\n    }\n`;\n\nconst ProductWrapper = styled(Link)`\n    text-align:center;\n    border: 2px solid #00000000;\n    border-radius:10px;\n    box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px;\n    overflow:hidden;\n    color:#333;\n    transition: .5s;\n    &:hover{\n        /* background:#ee5470; */\n        /* border: 2px solid white; */\n        text-decoration:none;\n        color:white;\n        transform:scale(1.03);\n        background: linear-gradient(\n            60deg,\n            hsl(224, 85%, 66%),\n            hsl(269, 85%, 66%),\n            hsl(314, 85%, 66%),\n            hsl(359, 85%, 66%),\n            hsl(44, 85%, 66%),\n            hsl(89, 85%, 66%),\n            hsl(134, 85%, 66%),\n            hsl(179, 85%, 66%)\n        );\n        background-size: 300% 300%;\n        background-position: 0 50%;\n        animation: moveGradient 4s alternate infinite;\n        \n        & ${ProductImage}{\n            opacity:0.7;\n        }\n        & ${ProductContentTitle}{\n            font-weight:800;\n        }\n    }\n\n    @keyframes moveGradient {\n        50% {\n            background-position: 100% 50%;\n        }\n    }\n`;\nconst ProductComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        PRODUCT\n                        </MainTitle>\n                    <MainTitleSub>제품 안내</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    {/* <ExplainEl>{props.selectedCategory.categoryName}</ExplainEl> */}\n                </MainTitleBox>\n                <ProductListWrapper className='container'>\n                    {props.productList && props.productList.map(r => {\n                        return (\n                            <ProductWrapper key={r.product.id} to={`/product/detail?productId=${r.product.id}`}>\n                                <ProductImageBox>\n                                    <ProductImageEl>\n                                        <ProductImage src={r.product.imageUrl}></ProductImage>\n                                    </ProductImageEl>\n                                </ProductImageBox>\n                                <ProductContentBox>\n                                    <ProductContentTitle>\n                                        {r.product.newChecked ? <span className=\"badge badge-primary\" style={{ marginRight: '5px' }}>NEW</span> : <></>}\n                                        {r.product.hitChecked ? <span className=\"badge badge-danger\" style={{ marginRight: '5px' }}>HIT</span> : <></>}\n                                        {r.product.eventChecked ? <span className=\"badge badge-info\" style={{ marginRight: '5px' }}>EVENT</span> : <></>}\n                                    </ProductContentTitle>\n                                </ProductContentBox>\n                                <ProductContentBox>\n                                    <ProductContentTitle>{r.product.name}</ProductContentTitle>\n                                </ProductContentBox>\n                            </ProductWrapper>\n                        );\n                    })}\n                </ProductListWrapper>\n                <PageableComponent\n                    pageData={props.productPage}\n                ></PageableComponent>\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js",["673"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js",["674","675","676","677","678"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport DetailComponent from './DetailComponent';\n\nconst ProductDetailMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [productData, setProductData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductData();\n        }\n        fetchInit();\n    },[location])\n\n    const __handleDataConnect = () => {\n        return {\n            getProductData: async function () {\n                let productId = query.productId;\n                if (productId) {\n                    await productDataConnect().searchProductOne(productId)\n                        .then(data => {\n                            if (data && data.message == 'success') {\n                                setProductData(data.data);\n                                console.log(data);\n                            }else if(data && data.message=='no_data'){\n                                alert('존재하지 않는 데이터입니다.');\n                                history.push('/product/list');\n                            }\n                        })\n                }\n\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품상세'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            {productData ? \n                <DetailComponent\n                    productData={productData}\n                ></DetailComponent>\n                :\n                <>\n                    <div className='text-center'>\n                        <h2 className='m-3 p-3'>NOT FOUND</h2>\n                        <div className='m-1 p-1'>\n                            <Link to={'/product/list'}>Go To Product List</Link>\n                        </div>\n                        <div className='m-1 p-1'>\n                            <Link to={'/'}>Go To Home</Link>\n                        </div>\n                    </div>\n                    \n                </>\n            }\n            \n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductDetailMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js",["679"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\nconst Container = styled.div`\n    margin-bottom:100px;\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl2 = styled.div`\n    text-align:center;\n    font-size:32px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:28px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:24px;\n        }\n    }\n`;\n\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductImageWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n`;\n\nconst ProductImageEl = styled.img`\n    width:100%;\n    height:100%;\n    border: 4px double #f1f1f1;\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\nconst ProductImageBox = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    box-shadow: rgb(255 255 255 / 25%) 0px 5px 15px;\n    /* box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px; */\n    border-radius:15px;\n    transition: .5s;\n    /* &:hover {\n        background:#ee5470;\n        transform:scale(1.1);\n        border: 1px solid white;\n    } */\n`;\n\nconst ProductIntroContainer = styled.div`\n    margin:40px auto;\n`;\n\nconst ProductIntroWrapper = styled.div`\n`;\n\nconst ProductIntroBox = styled.div`\n    margin-top:12px;\n`;\n\nconst ProductIntroCategoryEl = styled.p`\n    font-size:18px;\n    color:#808080;\n`;\n\nconst ProductIntroProductNameEl = styled.h2`\n    font-weight:700;\n`;\n\nconst ProductIntroProductSub = styled.p`\n    border-left:3px solid #ee5470;\n    padding-left:15px;\n    font-size:18px;\n    font-weight:700;\n`;\n\nconst ProductIntroProductSubDesc = styled.p`\n    white-space:pre-line;\n    padding-left:15px;\n    border-left:3px solid #ee547000;\n    font-size:16px;\n    font-weight:500;\n`;\n\nconst ProductDescContainer = styled.div`\n`;\n\nconst ProductDescBox = styled.div`\n    margin:20px auto;\n    /* padding:10px; */\n    /* border: 1px solid #f1f1f1; */\n`;\n\nconst ButtonEl = styled(Link)`\n    width:100%;\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\nconst DetailComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        PRODUCT DETAILS\n                        </MainTitle>\n                    <MainTitleSub>제품 상세</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>{props.productData.product.name}</ExplainEl>\n                </MainTitleBox>\n                <ProductIntroContainer className='container'>\n                    <ProductIntroWrapper className='row'>\n                        <ProductIntroBox className='col-lg-6'>\n                            <ProductImageWrapper>\n                                <ProductImageBox>\n                                    <ProductImageEl src={props.productData.product.imageUrl} />\n                                </ProductImageBox>\n                            </ProductImageWrapper>\n                        </ProductIntroBox>\n                        <ProductIntroBox className='col-lg-6'>\n                            <ProductIntroCategoryEl>{props.productData.category.categoryName}</ProductIntroCategoryEl>\n                            <ProductIntroProductNameEl>\n                                {props.productData.product.name}\n                            </ProductIntroProductNameEl>\n                            {props.productData.product.newChecked ? <span className=\"badge badge-primary\" style={{ marginRight: '5px' }}>NEW</span> : <></>}\n                            {props.productData.product.hitChecked ? <span className=\"badge badge-danger\" style={{ marginRight: '5px' }}>HIT</span> : <></>}\n                            {props.productData.product.eventChecked ? <span className=\"badge badge-info\" style={{ marginRight: '5px' }}>EVENT</span> : <></>}\n                            <hr />\n                            <div style={{ padding: '12px' }}>\n                                <ProductIntroProductSub>제 품 소 개</ProductIntroProductSub>\n                                <ProductIntroProductSubDesc>{props.productData.product.introduce}</ProductIntroProductSubDesc>\n                            </div>\n                            <div style={{ padding: '12px' }}>\n                                <ProductIntroProductSub>제 품 요 약 | 제 원</ProductIntroProductSub>\n                                <ProductIntroProductSubDesc>{props.productData.product.summary}</ProductIntroProductSubDesc>\n                            </div>\n                            <div style={{ padding: '12px' }}>\n                                <ButtonEl className=\"btn\" to='/product/counsel'>구매상담하기</ButtonEl>\n                            </div>\n                        </ProductIntroBox>\n                    </ProductIntroWrapper>\n                </ProductIntroContainer>\n                <LineBreaker1></LineBreaker1>\n                <ProductDescContainer className='container'>\n                    <ExplainEl2>제품 상세</ExplainEl2>\n                    <ProductDescBox>\n                        <div className='ck-content clearfix' dangerouslySetInnerHTML={{ __html: props.productData.product.desc }}>\n                        </div>\n                    </ProductDescBox>\n\n                </ProductDescContainer>\n\n                {/* <CKEditor\n                    editor={ClassicEditor}\n                    // data=\"<p>Hello from CKEditor 5!</p>\"\n                    data={props.productData.product.desc}\n                    onReady={editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        // console.log('Editor is ready to use!', editor);\n                    }}\n                    config={\n                        {\n                            isReadOnly: true,\n                        }\n                    }\n                /> */}\n            </Container>\n        </>\n    );\n}\n\nexport default DetailComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminVideoManage.js",["680"],"import styled from 'styled-components';\n\nconst Container = styled.div`\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst VideoWrapper = styled.div`\n    border:1px solid #f1f1f1;\n    border-radius:10px;\n    padding:8px;\n\n`;\n\nconst TopWrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    padding:8px;\n`;\n\nconst BodyWrapper = styled.div`\n    padding:8px;\n`;\nconst AdminVideoManage = (props) => {\n    return (\n        <>\n            <Container>\n                <VideoWrapper>\n                    <TopWrapper className='clearfix'>\n                        <button type='button' className='btn btn-outline-primary float-right' onClick={() => props.handleVideoEventControl().addVideoModalOpen()}>동영상 추가</button>\n                        <h4>동영상 리스트</h4>\n                    </TopWrapper>\n                    <BodyWrapper>\n                        <div className='table-responsive text-center'>\n                            <table className=\"table\" style={{ tableLayout: 'fixed' }}>\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\" width='50'>#</th>\n                                        <th scope=\"col\" width='150'>동영상 이름</th>\n                                        <th scope=\"col\" width='150'>유튜브 키</th>\n                                        <th scope=\"col\" width='150'>전시상태</th>\n                                        <th scope=\"col\" width='150'>컨트롤</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {props.videoList && props.videoList.map((r, index) => {\n                                        return (\n                                            <tr key={r.videoId}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td>{r.videoName}</td>\n                                                <td>{r.videoKey}</td>\n                                                <td>\n                                                    {r.videoDisplay == 1 ?\n                                                        <>\n                                                            <button type='button' className='btn btn-outline-info' onClick={() => props.handleVideoEventControl().setVideoDisplay().hide(r.videoId)}>ON</button>\n                                                        </>\n                                                        :\n                                                        <>\n                                                            <button type='button' className='btn btn-outline-warning' onClick={() => props.handleVideoEventControl().setVideoDisplay().view(r.videoId)}>OFF</button>\n                                                        </>\n                                                    }\n                                                </td>\n                                                <td><button type='button' className='btn btn-outline-danger' onClick={() => props.handleVideoEventControl().deleteVideo(r.videoId)}>삭제</button></td>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n\n                    </BodyWrapper>\n                </VideoWrapper>\n            </Container>\n        </>\n    );\n}\n\nexport default AdminVideoManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddVideoModal.js",["681"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddVideoModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleVideoEventControl().addVideoModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"동영상 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleVideoEventControl().addVideoDataSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>동영상 이름</label>\n                            <input type=\"text\" className=\"form-control\" name='videoName' value={props.addVideoData.videoName} onChange={(e) => props.handleVideoEventControl().addVideoDataOnValueChange(e)} placeholder=\"구분하실 동영상 이름을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>유튜브 키</label>\n                            <input type=\"text\" className=\"form-control\" name='videoKey' value={props.addVideoData.videoKey} onChange={(e) => props.handleVideoEventControl().addVideoDataOnValueChange(e)} placeholder=\"동영상의 유튜브 키를 지정해주세요.\" required=\"required\" />\n                            <small className=\"form-text text-muted\">유튜브에 업로드된 영상의 키값을 가져와서 등록해주세요.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleVideoEventControl().addVideoModalClose()}>\n                            취소\n                    </Button>\n                        <Button type='submit' color=\"primary\">\n                            동영상 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddVideoModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/VideoDataConnect.js",["682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import axios from 'axios';\nimport { getCookie } from '../../handler/CookieHandler';\n\nconst videoDataConnect = () => {\n    return {\n        searchVideoAll: async function () {\n            return await axios.get('/api/search/video/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertVideoOne: async function (data) {\n            return await axios.post('/api/insert/video/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateVideoDisplay: async function (data) {\n            return await axios.post('/api/update/video/one/display', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteVideoOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/delete/video/one',data,{\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n    }\n}\n\nexport {\n    videoDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/counsel/ProductCounselMain.js",["696","697","698","699","700","701"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport ProductTopLayout from '../layout/ProductTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ProductCounselMain = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('purchase');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품상담신청'}\n                linkPage={'counsel'}\n            ></ProductTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            PURCHASE INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>제품상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect defaultValue={counselingType} onChange={(e)=>setCounselingType(e.target.value)} disabled>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='purchase'>상품구매상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>설치희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='제품설치 희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='구매를 원하는 제품 및 기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span> <a href='/policy/privacy' target='_blank'>보기</a></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductCounselMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AdminStoreMain.js",["702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723"],"import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport queryString from 'query-string';\n\n// data connect\nimport { storeDataConnect } from '../../../data_connect/StoreDataConnect';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport AreaComponent from './AreaComponent';\nimport AddAreaModal from './AddAreaModal';\nimport FixAreaModal from './FixAreaModal';\nimport StoreComponent from './StoreComponent';\nimport AddStoreModal from './AddStoreModal';\nimport FixStoreModal from './FixStoreModal';\n\nconst AdminStoreMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    let modalRef = useRef();\n    let addStoreUploaderRef = useRef();\n    let fixStoreUploaderRef = useRef();\n\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [areaList, setAreaList] = useState(null);\n    const [addAreaModalOpen, setAddAreaModalOpen] = useState(false);\n    const [addAreaData, setAddAreaData] = useState(null);\n    const [fixAreaModalOpen, setFixAreaModalOpen] = useState(false);\n    const [fixAreaData, setFixAreaData] = useState(null);\n\n    const [storeList, setStoreList] = useState(null);\n    const [storePage, setStorePage] = useState(null);\n    const [addStoreModalOpen, setAddStoreModalOpen] = useState(false);\n    const [addStoreData, setAddStoreData] = useState(null);\n    const [fixStoreModalOpen, setFixStoreModalOpen] = useState(false);\n    const [fixStoreData, setFixStoreData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            // await __handleAreaDataConnect().searchStoreAreaAll();\n            await __handleStoreDataConnect().searchStoreAll();\n        }\n        fetchInit();\n    }, [location]);\n\n    const __handleAreaDataConnect = () => {\n        return {\n            searchStoreAreaAll: async function () {\n                await storeDataConnect().searchStoreAreaAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setAreaList(data.data);\n                        }\n                    })\n            },\n            insertStoreAreaOne: async function (data) {\n                await storeDataConnect().insertStoreAreaOne(data)\n            },\n            deleteStoreAreaOne: async function (data) {\n                await storeDataConnect().deleteStoreAreaOne(data);\n            },\n            updateStoreAreaOne: async function (data) {\n                await storeDataConnect().updateStoreAreaOne(data);\n            },\n\n        }\n    }\n\n    const __handleStoreDataConnect = () => {\n        return {\n            searchStoreAll: async function () {\n                let areaName = query.areaName ? query.areaName : '';\n                let pageIndex = query.pageIndex ? query.pageIndex - 1 : 0;\n                await storeDataConnect().searchStoreAll(areaName, pageIndex)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setStoreList(data.data);\n                            setStorePage(data.page);\n                        }\n                    })\n            },\n            insertStoreOne: async function (data) {\n                await storeDataConnect().insertStoreOne(data);\n            },\n            deleteStoreOne: async function (data) {\n                await storeDataConnect().deleteStoreOne(data);\n            },\n            updateStoreOne: async function (data) {\n                await storeDataConnect().updateStoreOne(data);\n            },\n            imageUploadToS3: async function (event, type) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await storeDataConnect().imageUploadToS3(fd).then(data => {\n                        if (data.message == 'success') {\n                            if (type == 'add') {\n                                addStoreUploaderRef.current.value = ''\n                                setAddStoreData({ ...addStoreData, ['storeImageUrl']: data.imageUrl })\n                            } else if (type == 'fix') {\n                                fixStoreUploaderRef.current.value = ''\n                                setFixStoreData({ ...fixStoreData, ['storeImageUrl']: data.imageUrl })\n                            }\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleAreaEventControl = () => {\n        return {\n            getAreaList: async function () {\n                await __handleAreaDataConnect().searchStoreAreaAll();\n            },\n            addModalOpen: function () {\n                setAddAreaModalOpen(true);\n                setAddAreaData({\n                    areaName: ''\n                });\n            },\n            addModalClose: function () {\n                setAddAreaModalOpen(false);\n                setAddAreaData(null);\n            },\n            addModalSubmit: async function (e) {\n                e.preventDefault();\n                let data = addAreaData;\n                await __handleAreaDataConnect().insertStoreAreaOne(data);\n                await handleAreaEventControl().getAreaList();\n                this.addModalClose();\n            },\n            addAreaDataOnChange: function (e) {\n                setAddAreaData({ ...addAreaData, [e.target.name]: e.target.value });\n            },\n            delete: async function (areaId) {\n                let data = areaList.filter(r => r.areaId == areaId)[0];\n                await __handleAreaDataConnect().deleteStoreAreaOne(data);\n                await handleAreaEventControl().getAreaList();\n            },\n            fixModalOpen: function (areaId) {\n                let data = areaList.filter(r => r.areaId == areaId)[0];\n                setFixAreaModalOpen(true);\n                setFixAreaData(data);\n            },\n            fixModalClose: function () {\n                setFixAreaModalOpen(false);\n                setFixAreaData(null);\n            },\n            fixModalSubmit: async function (e) {\n                e.preventDefault();\n                let data = fixAreaData;\n                await __handleAreaDataConnect().updateStoreAreaOne(data);\n                await handleAreaEventControl().getAreaList();\n                this.fixModalClose();\n            },\n            fixAreaDataOnChange: function (e) {\n                setFixAreaData({ ...fixAreaData, [e.target.name]: e.target.value });\n            }\n        }\n    }\n\n    const handleStoreEventControl = () => {\n        return {\n            getStoreList: async function () {\n                await __handleStoreDataConnect().searchStoreAll();\n            },\n            addModalOpen: function () {\n                handleStoreEventControl().fixModalClose();\n                setAddStoreModalOpen(true);\n                setAddStoreData({\n                    storeArea: '',\n                    storeName: '',\n                    storeAddress: '',\n                    storePhone: '',\n                    storeLat: 33.450701,\n                    storeLng: 126.570667,\n                    storeDesc: '',\n                    storeImageUrl: '/images/sample/imageNo.png'\n                });\n                setTimeout(() => {\n                    modalRef.current.scrollIntoView();\n                }, 100);\n            },\n            addModalClose: function () {\n                setAddStoreModalOpen(false);\n                setAddStoreData(null);\n            },\n            addStoreSubmit: async function (e) {\n                e.preventDefault();\n                await __handleStoreDataConnect().insertStoreOne(addStoreData);\n                await handleStoreEventControl().getStoreList();\n                this.addModalClose();\n                alert('등록되었습니다.');\n            },\n            onValueChange: function (e) {\n                setAddStoreData({ ...addStoreData, [e.target.name]: e.target.value })\n            },\n            editorDataOnChange: function (data) {\n                setAddStoreData({ ...addStoreData, ['storeDesc']: data })\n            },\n            deleteOne: async function (storeId) {\n                let data = storeList.filter(r => r.storeId == storeId)[0];\n                await __handleStoreDataConnect().deleteStoreOne(data);\n                await handleStoreEventControl().getStoreList();\n                handleStoreEventControl().addModalClose();\n                handleStoreEventControl().fixModalClose();\n                alert('삭제되었습니다.');\n            },\n            fixModalOpen: function (storeId) {\n                handleStoreEventControl().addModalClose();\n                handleStoreEventControl().fixModalClose();\n                let data = storeList.filter(r => r.storeId == storeId)[0];\n                setTimeout(() => {\n                    setFixStoreData(data);\n                    setFixStoreModalOpen(true);\n                }, 10)\n\n                setTimeout(() => {\n                    modalRef.current.scrollIntoView();\n                }, 100);\n            },\n            fixModalClose: function () {\n                setFixStoreData(null);\n                setFixStoreModalOpen(false);\n            },\n            fixStoreSubmit: async function (e) {\n                e.preventDefault();\n                await __handleStoreDataConnect().updateStoreOne(fixStoreData);\n                await handleStoreEventControl().getStoreList();\n                this.fixModalClose();\n                alert('수정되었습니다.');\n            },\n            fixStoreOnValueChange: function (e) {\n                setFixStoreData({ ...fixStoreData, [e.target.name]: e.target.value });\n            },\n            fixStoreEditorDataOnChange: function (data) {\n                setFixStoreData({ ...fixStoreData, ['storeDesc']: data });\n            },\n            conditionSearch: function () {\n                return {\n                    select: async function (e) {\n                        let newUrl = decodeURI(queryString.stringifyUrl({ url: '/admin/store', query: { areaName: e.target.value } }));\n                        history.push(newUrl);\n                    },\n                    all: async function () {\n                        history.push('/admin/store');\n                    }\n                }\n            },\n            imageUploadToS3: async function (e, type) {\n                await __handleStoreDataConnect().imageUploadToS3(e, type);\n            }\n        }\n    }\n    return (\n        isLoged ?\n            (\n                <>\n                    <AdminNav></AdminNav>\n                    {/* {areaList ?\n                        <AreaComponent\n                            areaList={areaList}\n                            handleAreaEventControl={handleAreaEventControl}\n                        ></AreaComponent>\n                        :\n                        <></>\n                    } */}\n                    {storeList && storePage ?\n                        <StoreComponent\n                            storeList={storeList}\n                            storePage={storePage}\n\n                            handleStoreEventControl={handleStoreEventControl}\n                        ></StoreComponent>\n                        :\n                        <></>\n                    }\n                    <div ref={modalRef}></div>\n                    {addStoreModalOpen && addStoreData ?\n                        <AddStoreModal\n                            // modalRef={modalRef}\n                            imageUploaderRef={addStoreUploaderRef}\n                            areaList={areaList}\n                            addStoreData={addStoreData}\n                            handleStoreEventControl={handleStoreEventControl}\n                        ></AddStoreModal>\n                        :\n                        <></>\n                    }\n                    {fixStoreModalOpen && fixStoreData ?\n                        <FixStoreModal\n                            // modalRef={modalRef}\n                            imageUploaderRef={fixStoreUploaderRef}\n                            areaList={areaList}\n                            fixStoreData={fixStoreData}\n                            handleStoreEventControl={handleStoreEventControl}\n                        ></FixStoreModal>\n                        :\n                        <>\n                        </>\n                    }\n                    {/* {addAreaModalOpen && addAreaData ?\n                        <AddAreaModal\n                            modalOpen={addAreaModalOpen}\n                            addAreaData={addAreaData}\n\n                            handleAreaEventControl={handleAreaEventControl}\n                        ></AddAreaModal>\n                        :\n                        <></>\n                    }\n\n                    {fixAreaModalOpen && fixAreaData ?\n                        <FixAreaModal\n                            modalOpen={fixAreaModalOpen}\n                            fixAreaData={fixAreaData}\n\n                            handleAreaEventControl={handleAreaEventControl}\n                        ></FixAreaModal>\n                        :\n                        <></>\n                    } */}\n                </>\n            )\n            :\n            <></>\n    );\n}\n\nexport default AdminStoreMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AreaComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddAreaModal.js",["724"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleAreaEventControl().addModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"지역 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleAreaEventControl().addModalSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>지역명</label>\n                            <input type=\"text\" className=\"form-control\" name='areaName' value={props.addAreaData.areaName} onChange={(e) => props.handleAreaEventControl().addAreaDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleAreaEventControl().addModalClose()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            지역 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/StoreDataConnect.js",["725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755"],"import axios from 'axios';\nimport queryString from 'query-string';\nimport { getCookie } from '../../handler/CookieHandler';\n\nconst storeDataConnect = () => {\n    return {\n        searchStoreAreaAll: async function () {\n            return await axios.get('/api/search/store_area/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertStoreAreaOne: async function (data) {\n            return await axios.post('/api/insert/store_area/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteStoreAreaOne: async function (data) {\n            return await axios.post('/api/delete/store_area/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        updateStoreAreaOne: async function (data) {\n            return await axios.post('/api/update/store_area/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        searchStoreAll: async function (areaName, pageIndex) {\n            return await axios.get('/api/search/store/all', {\n                params: {\n                    areaName: areaName ? areaName : '',\n                    pageIndex: pageIndex ? pageIndex : 0 \n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertStoreOne: async function (data) {\n            return await axios.post('/api/insert/store/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateStoreOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/update/store/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteStoreOne: async function (data) {\n            return await axios.post('/api/delete/store/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        // ============upload to s3=================\n        imageUploadToS3: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            //에러가 날 경우 처리\n            .catch(error => {\n                console.log(error.response);\n            });\n        },\n        // ==============upload to local===================\n        // imageUploadToS3: async function (fd) {\n        //     return await axios.post('/api/fileupload/external/image', fd, {\n        //         headers: {\n        //             'X-XSRF-TOKEN': getCookie('XSTO')\n        //         }\n        //     })\n        //     .then(res=>res.data)\n        //     //에러가 날 경우 처리\n        //     .catch(error => {\n        //         if(error.response.status==500){\n        //             alert('server 500 error.');\n        //         }else{\n        //             alert('server undefined error.');\n        //         }\n        //     });\n        // },\n        searchStoreOne: async function (storeId) {\n            return await axios.get('/api/search/store/one', {\n                params:{\n                    storeId:storeId\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        }\n    }\n}\n\nexport { storeDataConnect }","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixAreaModal.js",["756"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixAreaModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleAreaEventControl().fixModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"지역 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleAreaEventControl().fixModalSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>지역명</label>\n                            <input type=\"text\" className=\"form-control\" name='areaName' value={props.fixAreaData.areaName} onChange={(e) => props.handleAreaEventControl().fixAreaDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleAreaEventControl().fixModalClose()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            지역 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default FixAreaModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/StoreComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/AddStoreModal.js",["757","758","759","760","761"],"import styled from 'styled-components';\nimport { useEffect } from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst editorConfiguration = {\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic','fontSize','fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image:{\n        toolbar:[\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table:{\n        contentToolbar:[\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n    toolbar: {\n        items: [\n            'heading', '|',\n            'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n            'outdent', 'indent', '|',\n            'imageUpload', 'mediaEmbed', 'blockQuote', '|',\n            'undo', 'redo'\n        ],\n        shouldNotGroupWhenFull: true\n    }\n}\n\nconst ImageWrapper = styled.div`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n`;\n\nconst AddStoreModal = (props) => {\n    return (\n        <>\n            <Container className='container-fluid'>\n                <Wrapper>\n                    <DialogTitle className='clearfix'>{\"오픈매장 추가\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleStoreEventControl().addModalClose()}>닫기</button></DialogTitle>\n                    <form onSubmit={(e) => props.handleStoreEventControl().addStoreSubmit(e)}>\n                        <div className=\"form-group\">\n                            <label>지역 선택 <span className='text-danger'>*</span></label>\n                            <select className=\"form-control\" name='storeArea' value={props.addStoreData.storeArea} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} required>\n                                <option value='' hidden>--선택--</option>\n                                <option value='서울특별시'>서울특별시</option>\n                                <option value='부산광역시'>부산광역시</option>\n                                <option value='대구광역시'>대구광역시</option>\n                                <option value='인천광역시'>인천광역시</option>\n                                <option value='대전광역시'>대전광역시</option>\n                                <option value='광주광역시'>광주광역시</option>\n                                <option value='울산광역시'>울산광역시</option>\n                                <option value='세종특별자치시'>세종특별자치시</option>\n                                <option value='경기도'>경기도</option>\n                                <option value='강원도'>강원도</option>\n                                <option value='충청북도'>충청북도</option>\n                                <option value='충청남도'>충청남도</option>\n                                <option value='전라북도'>전라북도</option>\n                                <option value='전라남도'>전라남도</option>\n                                <option value='경상북도'>경상북도</option>\n                                <option value='경상남도'>경상남도</option>\n                                <option value='제주특별자치도'>제주특별자치도</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장명 <span className='text-danger'>*</span></label>\n                            <input type=\"text\" name='storeName' value={props.addStoreData.storeName} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} className=\"form-control\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장주소 <span className='text-danger'>*</span></label>\n                            <input type=\"text\" name='storeAddress' value={props.addStoreData.storeAddress} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} className=\"form-control\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장전화번호</label>\n                            <input type=\"text\" name='storePhone' value={props.addStoreData.storePhone} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>대표이미지 (권장 비율 16:9)</label>\n                            <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleStoreEventControl().imageUploadToS3(e, 'add')} hidden></input>\n                            <ImageWrapper>\n                                <ImageBox>\n                                    <ImageEl src={props.addStoreData.storeImageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </ImageBox>\n                            </ImageWrapper>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className='form-group col'>\n                                <label>Lat 값</label>\n                                <input type=\"number\" step='0.0000000000001' name='storeLat' value={props.addStoreData.storeLat} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n                            <div className='form-group col'>\n                                <label>Lng 값</label>\n                                <input type=\"number\" step='0.0000000000001' name='storeLng' value={props.addStoreData.storeLng} onChange={(e) => props.handleStoreEventControl().onValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n\n                        </div>\n                        <label>오픈매장 상세 설명</label>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            // data=\"<p>Hello from CKEditor 5!</p>\"\n                            data={props.addStoreData.storeDesc}\n                            onReady={editor => {\n                                // You can store the \"editor\" and use when it is needed.\n                                // console.log('Editor is ready to use!', editor);\n                            }}\n                            // onChange={(event, editor) => {\n                            //     const data = editor.getData();\n                            //     console.log({ event, editor, data });\n                            // }}\n                            onChange={(event, editor) => {\n                                const data = editor.getData();\n                                // console.log({ event, editor, data });\n                                props.handleStoreEventControl().editorDataOnChange(data);\n                            }}\n\n                            onBlur={(event, editor) => {\n                                // console.log('Blur.', editor);\n                                // props.handleEditorControl().onBlur();\n                            }}\n                            onFocus={(event, editor) => {\n                                // console.log('Focus.', editor);\n                            }}\n                            config={editorConfiguration}\n\n                        />\n                        <DialogActions>\n                            <Button type='button' color=\"secondary\" onClick={() => props.handleStoreEventControl().addModalClose()}>\n                                취소\n                                </Button>\n                            <Button type='submit' color=\"primary\">\n                                매장 등록\n                                </Button>\n                        </DialogActions>\n                    </form>\n                </Wrapper>\n            </Container>\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default AddStoreModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/FixStoreModal.js",["762","763","764","765","766"],"import styled from 'styled-components';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { useEffect } from 'react';\n\nconst editorConfiguration = {\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic','fontSize','fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image:{\n        toolbar:[\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table:{\n        contentToolbar:[\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst custom_config = {\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n    toolbar: {\n        items: [\n            'heading', '|',\n            'bold', 'italic', 'link', 'bulletedList', 'numberedList', '|',\n            'outdent', 'indent', '|',\n            'imageUpload', 'mediaEmbed', 'blockQuote', '|',\n            'undo', 'redo'\n        ],\n        shouldNotGroupWhenFull: true\n    }\n}\n\nconst ImageWrapper = styled.div`\n    width:25%;\n    height:auto;\n    cursor:pointer;\n    @media only screen and (max-width:768px){\n        width:90%;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n`;\n\nconst FixStoreModal = (props) => {\n    return (\n        <>\n            <Container className='container-fluid'>\n                <Wrapper>\n                    <DialogTitle className='clearfix'>{\"오픈매장 수정\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleStoreEventControl().fixModalClose()}>닫기</button></DialogTitle>\n                    <form onSubmit={(e) => props.handleStoreEventControl().fixStoreSubmit(e)}>\n                        <div className=\"form-group\">\n                            <label>지역 선택 <span className='text-danger'>*</span></label>\n                            <select className=\"form-control\" name='storeArea' value={props.fixStoreData.storeArea} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} required>\n                                <option value='' hidden>--선택--</option>\n                                <option value='서울특별시'>서울특별시</option>\n                                <option value='부산광역시'>부산광역시</option>\n                                <option value='대구광역시'>대구광역시</option>\n                                <option value='인천광역시'>인천광역시</option>\n                                <option value='대전광역시'>대전광역시</option>\n                                <option value='광주광역시'>광주광역시</option>\n                                <option value='울산광역시'>울산광역시</option>\n                                <option value='세종특별자치시'>세종특별자치시</option>\n                                <option value='경기도'>경기도</option>\n                                <option value='강원도'>강원도</option>\n                                <option value='충청북도'>충청북도</option>\n                                <option value='충청남도'>충청남도</option>\n                                <option value='전라북도'>전라북도</option>\n                                <option value='전라남도'>전라남도</option>\n                                <option value='경상북도'>경상북도</option>\n                                <option value='경상남도'>경상남도</option>\n                                <option value='제주특별자치도'>제주특별자치도</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장명 <span className='text-danger'>*</span></label>\n                            <input type=\"text\" name='storeName' value={props.fixStoreData.storeName} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} className=\"form-control\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장주소 <span className='text-danger'>*</span></label>\n                            <input type=\"text\" name='storeAddress' value={props.fixStoreData.storeAddress} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} className=\"form-control\" required />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>매장전화번호</label>\n                            <input type=\"text\" name='storePhone' value={props.fixStoreData.storePhone} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>대표이미지 (권장 비율 16:9)</label>\n                            <input type='file' ref={props.imageUploaderRef} accept=\"image/*\" onChange={(e) => props.handleStoreEventControl().imageUploadToS3(e,'fix')} hidden></input>\n                            <ImageWrapper>\n                                <ImageBox>\n                                    <ImageEl src={props.fixStoreData.storeImageUrl} onClick={() => props.imageUploaderRef.current.click()}></ImageEl>\n                                </ImageBox>\n                            </ImageWrapper>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className='form-group col'>\n                                <label>Lat 값</label>\n                                <input type=\"number\" step='0.0000000000001' name='storeLat' value={props.fixStoreData.storeLat} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n                            <div className='form-group col'>\n                                <label>Lng 값</label>\n                                <input type=\"number\" step='0.0000000000001' name='storeLng' value={props.fixStoreData.storeLng} onChange={(e) => props.handleStoreEventControl().fixStoreOnValueChange(e)} className=\"form-control\" min=\"0\" max=\"9999\" required />\n                            </div>\n\n                        </div>\n                        <label>오픈매장 상세 설명</label>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            // data=\"<p>Hello from CKEditor 5!</p>\"\n                            data={props.fixStoreData.storeDesc}\n                            onReady={editor => {\n                                // You can store the \"editor\" and use when it is needed.\n                                // console.log('Editor is ready to use!', editor);\n                            }}\n                            // onChange={(event, editor) => {\n                            //     const data = editor.getData();\n                            //     console.log({ event, editor, data });\n                            // }}\n                            onChange={(event, editor) => {\n                                const data = editor.getData();\n                                // console.log({ event, editor, data });\n                                props.handleStoreEventControl().fixStoreEditorDataOnChange(data);\n                            }}\n\n                            onBlur={(event, editor) => {\n                                // console.log('Blur.', editor);\n                                // props.handleEditorControl().onBlur();\n                            }}\n                            onFocus={(event, editor) => {\n                                // console.log('Focus.', editor);\n                            }}\n                            config={editorConfiguration}\n\n                        />\n                        <DialogActions>\n                            <Button type='button' color=\"secondary\" onClick={() => props.handleStoreEventControl().fixModalClose()}>\n                                취소\n                                </Button>\n                            <Button type='submit' color=\"primary\">\n                                수정\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Wrapper>\n            </Container>\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default FixStoreModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_store/PageableComponent.js",["767"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreListMain.js",["768","769","770","771","772","773"],"import { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connector\nimport { storeDataConnect } from '../../../data_connect/StoreDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport StoreTopLayout from '../layout/StoreTopLayout';\nimport AreaNavComponent from './AreaNavComponent';\nimport StoreComponent from './StoreComponent';\n\nconst StoreListMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    useEffect(() => {\n        handleScrollToTop();\n\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [storeList, setStoreList] = useState(null);\n    const [storePage, setStorePage] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleStoreDataConnect().searchStoreAll();\n        }\n        fetchInit();\n    }, [location]);\n\n    const __handleStoreDataConnect = () => {\n        return {\n            searchStoreAll: async function () {\n                let areaName = query.areaName ? query.areaName : '';\n                let pageIndex = query.pageIndex ? query.pageIndex - 1 : 0;\n                await storeDataConnect().searchStoreAll(areaName, pageIndex)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setStoreList(data.data);\n                            setStorePage(data.page);\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleStoreEventControl = () => {\n        return {\n            getStoreList: async function () {\n\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <StoreTopLayout\n                title={'매장안내'}\n                linkPage={'list'}\n            ></StoreTopLayout>\n            {/* <AreaNavComponent></AreaNavComponent> */}\n            {storeList && storePage ?\n                <StoreComponent\n                    storeList={storeList}\n                    storePage={storePage}\n                ></StoreComponent>\n                :\n                <></>\n            }\n\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default StoreListMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/layout/StoreTopLayout.js",["774","775","776"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    min-height:250px;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:30px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:25px;\n        }\n    }\n    \n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:40%;\n    display:grid;\n    grid-template-columns:repeat(1,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst StoreTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>오픈매장안내</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    오픈매장안내\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='list'?1:0}\n                        to='/store/list'\n                    >\n                        매장안내\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default StoreTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/AreaNavComponent.js",["777"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(10%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:1200px){\n        grid-template-columns:repeat(auto-fit,minmax(11%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(25%, auto));\n    }\n\n    @media only screen and (max-width:320px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:10px 0;\n    color:#333;\n    font-size:15px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:13px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:11px;\n    }\n\n`;\n\nlet areaList = [\n    {\n        areaName:'서울특별시',\n        url:`/store/list?areaName=서울특별시`\n    },\n    {\n        areaName:'부산광역시',\n        url:`/store/list?areaName=부산광역시`\n    },\n    {\n        areaName:'대구광역시',\n        url:`/store/list?areaName=대구광역시`\n    },\n    {\n        areaName:'인천광역시',\n        url:`/store/list?areaName=인천광역시`\n    },\n    {\n        areaName:'대전광역시',\n        url:`/store/list?areaName=대전광역시`\n    },\n    {\n        areaName:'광주광역시',\n        url:`/store/list?areaName=광주광역시`\n    },\n    {\n        areaName:'울산광역시',\n        url:`/store/list?areaName=울산광역시`\n    },\n    {\n        areaName:'세종특별자치시',\n        url:`/store/list?areaName=세종특별자치시`\n    },\n    {\n        areaName:'경기도',\n        url:`/store/list?areaName=경기도`\n    },\n    {\n        areaName:'강원도',\n        url:`/store/list?areaName=강원도`\n    },\n    {\n        areaName:'충청북도',\n        url:`/store/list?areaName=충청북도`\n    },\n    {\n        areaName:'충청남도',\n        url:`/store/list?areaName=충청남도`\n    },\n    {\n        areaName:'전라북도',\n        url:`/store/list?areaName=전라북도`\n    },\n    {\n        areaName:'전라남도',\n        url:`/store/list?areaName=전라남도`\n    },\n    {\n        areaName:'경상북도',\n        url:`/store/list?areaName=경상북도`\n    },\n    {\n        areaName:'경상남도',\n        url:`/store/list?areaName=경상남도`\n    },\n    {\n        areaName:'제주특별자치도',\n        url:`/store/list?areaName=제주특별자치도`\n    },\n    \n]\nconst AreaNavComponent = (props) => {\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <Wrapper className='container-fluid'>\n                    <GridGroup>\n                        {query.areaName ? <GridEl to='/store/list'>전체매장</GridEl> : <GridEl to='/store/list' style={{ color: '#ee5470' }}>전체매장</GridEl>}\n                        {areaList.map(r=>{\n                            if(query.areaName && query.areaName==r.areaName){\n                                return(\n                                    <GridEl key={r.areaName} to={r.url} style={{ color: '#ee5470' }}>{r.areaName}</GridEl>\n                                )\n                            }else{\n                                return(\n                                    <GridEl key={r.areaName} to={r.url}>{r.areaName}</GridEl>\n                                )\n                            }\n                        })}\n                    </GridGroup>\n\n\n                </Wrapper>\n            </Container>\n        </>\n    )\n}\n\nexport default AreaNavComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/StoreComponent.js",["778","779","780","781","782","783","784"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\n\n// components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductListWrapper = styled.div`\n    padding:50px 15px;\n    display:grid;\n    grid-template-columns: repeat(3,1fr);\n    grid-template-rows: auto auto;\n    grid-gap:15px;\n    @media only screen and (max-width:992px){\n        grid-template-columns: repeat(2,1fr);\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns: repeat(1,1fr);\n    }\n`;\n\nconst ProductImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ProductImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst ImageWrapper = styled.div`\n    width:100%;\n    height:auto;\n    cursor:pointer;\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n    transition: .5s;\n`;\n\nconst ContentBox = styled.div`\n    padding:8px;\n`;\n\nconst ContentTitle = styled.div`\n/* padding:2px 0; */\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n`;\n\nconst ContentAddress = styled.div`\n    height:80px;\n    font-size:18px;\n    @media only screen and (max-width:768px){\n        font-size:12px;\n    }\n    @media only screen and (max-width:320px){\n        height:100px;\n        font-size:12px;\n    }\n`;\n\nconst ContentIconEl = styled.div`\n    /* font-size:21px; */\n    color:#a0a0a0;\n    & .icon{\n        display:inline-block;\n        font-size:30px;\n        margin:0 5px;\n    }\n    & .detail{\n        display:inline-block;\n        margin:0 5px;\n    }\n\n    @media only screen and (max-width:768px){\n        & .icon{\n            font-size:20px;\n        }\n        & .detail{\n            font-size:15px;\n        }\n    }\n`;\nconst ContentWrapper = styled(Link)`\n    border: 2px solid #00000000;\n    border-radius:2px;\n    box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px;\n    overflow:hidden;\n    color:#333;\n    transition: .5s;\n    &:hover{\n        /* background:#ee5470; */\n        border: 2px solid #ee5470;\n        text-decoration:none;\n        color:#333;\n        transform:scale(1.03);\n        /* background: linear-gradient(\n            60deg,\n            hsl(224, 85%, 66%),\n            hsl(269, 85%, 66%),\n            hsl(314, 85%, 66%),\n            hsl(359, 85%, 66%),\n            hsl(44, 85%, 66%),\n            hsl(89, 85%, 66%),\n            hsl(134, 85%, 66%),\n            hsl(179, 85%, 66%)\n        );\n        background-size: 300% 300%;\n        background-position: 0 50%;\n        animation: moveGradient 4s alternate infinite; */\n        \n        & ${ImageEl}{\n            \n            transform:scale(1.03);\n        }\n        & ${ContentTitle}{\n            /* font-weight:800; */\n            color:#ee5470\n        }\n\n        & ${ContentIconEl}{\n            color:#ee5470\n        }\n    }\n\n    @keyframes moveGradient {\n        50% {\n            background-position: 100% 50%;\n        }\n    }\n`;\nconst StoreComponent = (props) => {\n    let query = queryString.parse(window.location.search);\n\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        OPEN STORE\n                    </MainTitle>\n                    <MainTitleSub>오픈매장안내</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    {/* <ExplainEl>\n                        {query.areaName ? query.areaName : '전체매장'}\n                    </ExplainEl> */}\n                </MainTitleBox>\n                <ProductListWrapper className='container'>\n                    {props.storeList && props.storeList.map(r => {\n                        return (\n                            <ContentWrapper key={r.storeId} to={`/store/detail?storeId=${r.storeId}`}>\n                                <ContentBox>\n                                    <ContentTitle>{r.storeName}</ContentTitle>\n                                </ContentBox>\n                                <ImageWrapper>\n                                    <ImageBox>\n                                        <ImageEl src={r.storeImageUrl}></ImageEl>\n                                    </ImageBox>\n                                </ImageWrapper>\n                                \n                                <ContentBox>\n                                    <ContentAddress>{r.storeAddress}</ContentAddress>\n                                </ContentBox>\n                                <ContentBox>\n                                    <ContentIconEl>\n                                        <span className='icon'><FontAwesomeIcon icon={faMapMarkerAlt}></FontAwesomeIcon></span>\n                                        <span className='align-middle detail'>상세보기</span>\n                                    </ContentIconEl>\n                                </ContentBox>\n                                    \n                            </ContentWrapper>\n                        );\n                    })}\n                </ProductListWrapper>\n                <PageableComponent\n                    pageData={props.storePage}\n                ></PageableComponent>\n            </Container>\n        </>\n    );\n}\n\nexport default StoreComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/StoreDetailMain.js",["785","786","787","788"],"import { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connector\nimport { storeDataConnect } from '../../../data_connect/StoreDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport StoreTopLayout from '../layout/StoreTopLayout';\nimport DetailComponent from './DetailComponent';\n\nconst { kakao } = window;\nconst StoreDetailMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    let kakaoMapRef = useRef();\n\n    useEffect(() => {\n        handleScrollToTop();\n\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [storeData, setStoreData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleStoreDataConnect().getStoreOne();\n\n\n        }\n        fetchInit();\n    }, [location]);\n\n    // kakao map create\n    useEffect(() => {\n        function init() {\n            if (storeData) {\n                // var container = document.getElementById('myMap'); //지도를 담을 영역의 DOM 레퍼런스\n                var container = kakaoMapRef.current //지도를 담을 영역의 DOM 레퍼런스\n                var options = { //지도를 생성할 때 필요한 기본 옵션\n                    // center: new kakao.maps.LatLng(35.157588, 129.058822), //지도의 중심좌표.\n                    center: new kakao.maps.LatLng(storeData.storeLat, storeData.storeLng), //지도의 중심좌표.\n                    level: 3 //지도의 레벨(확대, 축소 정도)\n                };\n                const map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n\n                // 마커가 표시될 위치입니다 \n                var markerPosition = new kakao.maps.LatLng(storeData.storeLat, storeData.storeLng);\n\n                // 마커를 생성합니다\n                var marker = new kakao.maps.Marker({\n                    position: markerPosition\n                });\n\n                // 마커가 지도 위에 표시되도록 설정합니다\n                marker.setMap(map);\n\n                var iwContent = `<div style=\"padding:5px;\"> ${storeData.storeName}<br><a href=\"https://map.kakao.com/link/map/${storeData.storeName},${storeData.storeLat},${storeData.storeLng}\" style=\"color:blue\" target=\"_blank\">큰지도보기</a> <a href=\"https://map.kakao.com/link/to/${storeData.storeName},${storeData.storeLat},${storeData.storeLng}\" style=\"color:blue\" target=\"_blank\">길찾기</a></div>`, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다 \n                    iwPosition = new kakao.maps.LatLng(storeData.storeLat, storeData.storeLng); //인포윈도우 표시 위치입니다\n\n                // 인포윈도우를 생성합니다\n                var infowindow = new kakao.maps.InfoWindow({\n                    position: iwPosition,\n                    content: iwContent\n                });\n\n                // 마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다\n                infowindow.open(map, marker);\n            }\n\n        }\n        init();\n\n    }, [storeData])\n    const __handleStoreDataConnect = () => {\n        return {\n            getStoreOne: async function () {\n                let storeId = query.storeId;\n                if (storeId) {\n                    await storeDataConnect().searchStoreOne(storeId)\n                        .then(data => {\n                            if (data && data.message == 'success') {\n                                setStoreData(data.data);\n                                console.log(data);\n                            } else if (data && data.message == 'no_data') {\n                                alert('존재하지 않는 데이터입니다.');\n                                history.push('/store/list');\n                            }\n                        })\n                }\n\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <StoreTopLayout\n                title={'매장상세'}\n                linkPage={'detail'}\n            ></StoreTopLayout>\n            {/* Body Start */}\n            {storeData ?\n                <DetailComponent\n                    kakaoMapRef={kakaoMapRef}\n                    storeData={storeData}\n                ></DetailComponent>\n                :\n                <></>\n            }\n\n            {/* Body End */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default StoreDetailMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/detail/DetailComponent.js",["789","790"],"import styled from 'styled-components';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl2 = styled.div`\n    text-align:center;\n    font-size:32px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:28px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:24px;\n        }\n    }\n`;\n\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst IntroContainer = styled.div`\n    margin:40px auto;\n    & .border-top-line{\n        border-top:2px solid #ee5470\n    }\n`;\n\nconst IntroWrapper = styled.div`\n    border-bottom:1px solid #d1d1d1;\n    padding:15px;\n`;\n\nconst IntroContentLeft = styled.div`\n    text-align:center;\n    font-size:18px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:13px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:11px;\n        }\n    }\n`;\n\nconst IntroContentRight = styled.div`\n    font-size:18px;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:13px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:11px;\n        }\n    }\n\n`;\nconst ImageContainer = styled.div`\n    padding:0 10%;\n`;\nconst ImageWrapper = styled.div`\n    width:100%;\n    height:auto;\n    border:4px double #f1f1f1;\n    /* cursor:pointer; */\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n    transition: .5s;\n`;\n\nconst DetailContainer = styled.div`\n    margin-bottom:50px;\n`;\n\nconst KakaoMapContainer = styled.div`\n    /* border:3px double black; */\n`;\n\nconst KakaoMapWapper = styled.div`\n    border:4px double #d1d1d1;\n`;\n\nconst KakaoMapEl = styled.div`\n    width:100%;\n    height:450px;\n    @media only screen and (max-width:992px){\n        height:300px;\n    }\n`;\nconst DetailComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        STORE DETAILS\n                    </MainTitle>\n                    <MainTitleSub>매장 상세</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>{props.storeData.storeName}</ExplainEl>\n                </MainTitleBox>\n                <IntroContainer className='container'>\n                    \n                    <IntroWrapper className='row border-top-line'>\n                        <IntroContentLeft className='col-3'>\n                            매장명\n                        </IntroContentLeft>\n                        <IntroContentRight className='col-9'>\n                            {props.storeData.storeName}\n                        </IntroContentRight>\n                    </IntroWrapper>\n                    <IntroWrapper className='row'>\n                        <IntroContentLeft className='col-3'>\n                            매장주소\n                        </IntroContentLeft>\n                        <IntroContentRight className='col-9'>\n                            {props.storeData.storeAddress}\n                        </IntroContentRight>\n                    </IntroWrapper>\n                    <IntroWrapper className='row'>\n                        <IntroContentLeft className='col-3'>\n                            전화번호\n                        </IntroContentLeft>\n                        <IntroContentRight className='col-9'>\n                            {props.storeData.storePhone}\n                        </IntroContentRight>\n                    </IntroWrapper>\n                    <hr/>\n                    <KakaoMapContainer>\n                        <ExplainEl className='pt-3 pb-3 mt-3 mb-3'>매장위치</ExplainEl>\n                        <LineBreaker1></LineBreaker1>\n                        <KakaoMapWapper>\n                            <KakaoMapEl ref={props.kakaoMapRef}></KakaoMapEl>\n                        </KakaoMapWapper>\n                        \n                    </KakaoMapContainer>\n                    <ImageContainer>\n                        <ExplainEl className='pt-3 pb-3 mt-3 mb-3'>대표이미지</ExplainEl>\n                        <LineBreaker1></LineBreaker1>\n                        <ImageWrapper>\n                            <ImageBox>\n                                <ImageEl src={props.storeData.storeImageUrl}></ImageEl>\n                            </ImageBox>\n                        </ImageWrapper>\n                    </ImageContainer>\n                    <hr/>\n                    <ExplainEl className='pt-3 pb-3 mt-3 mb-3'>상세정보</ExplainEl>\n                    <LineBreaker1></LineBreaker1>\n                    <DetailContainer>\n                        <div className='ck-content clearfix' dangerouslySetInnerHTML={{ __html: props.storeData.storeDesc }}>\n                        </div>\n                    </DetailContainer>\n                    \n                </IntroContainer>\n            </Container>\n        </>\n    )\n}\n\nexport default DetailComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/store/list/PageableComponent.js",["791"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/modules/CkeditorModules.js",["792","793"],"import Alignment from '@ckeditor/ckeditor5-alignment/src/alignment.js';\nimport Autoformat from '@ckeditor/ckeditor5-autoformat/src/autoformat.js';\nimport BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote.js';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold.js';\nimport CKFinder from '@ckeditor/ckeditor5-ckfinder/src/ckfinder.js';\nimport CKFinderUploadAdapter from '@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js';\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials.js';\nimport FontColor from '@ckeditor/ckeditor5-font/src/fontcolor.js';\nimport FontSize from '@ckeditor/ckeditor5-font/src/fontsize.js';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading.js';\nimport Image from '@ckeditor/ckeditor5-image/src/image.js';\nimport ImageCaption from '@ckeditor/ckeditor5-image/src/imagecaption.js';\nimport ImageResize from '@ckeditor/ckeditor5-image/src/imageresize.js';\nimport ImageStyle from '@ckeditor/ckeditor5-image/src/imagestyle.js';\nimport ImageToolbar from '@ckeditor/ckeditor5-image/src/imagetoolbar.js';\nimport ImageUpload from '@ckeditor/ckeditor5-image/src/imageupload.js';\nimport Indent from '@ckeditor/ckeditor5-indent/src/indent.js';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic.js';\nimport CKLink from '@ckeditor/ckeditor5-link/src/link.js';\nimport List from '@ckeditor/ckeditor5-list/src/list.js';\nimport MediaEmbed from '@ckeditor/ckeditor5-media-embed/src/mediaembed.js';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph.js';\nimport PasteFromOffice from '@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice';\nimport Table from '@ckeditor/ckeditor5-table/src/table.js';\nimport TableToolbar from '@ckeditor/ckeditor5-table/src/tabletoolbar.js';\nimport TextTransformation from '@ckeditor/ckeditor5-typing/src/texttransformation.js';\nconst CkeditorModules = () => {\n}\n\nexport default [\n    Alignment,\n    Autoformat,\n    BlockQuote,\n    Bold,\n    CKFinder,\n    CKFinderUploadAdapter,\n    Essentials,\n    FontColor,\n    FontSize,\n    Heading,\n    Image,\n    ImageCaption,\n    ImageResize,\n    ImageStyle,\n    ImageToolbar,\n    ImageUpload,\n    Indent,\n    Italic,\n    CKLink,\n    List,\n    MediaEmbed,\n    Paragraph,\n    PasteFromOffice,\n    Table,\n    TableToolbar,\n    TextTransformation,\n];","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/AdminCSMain.js",["794","795","796","797","798","799","800","801","802","803","804"],"import { useEffect, useState,useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { uuidv4 } from '../../../../handler/MyHandlers';\n\n// data connector\nimport { csDataConnect } from '../../../data_connect/CsDataConnect';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport CsComponent from './CsComponent';\nimport AddCsModal from './AddCsModal';\nimport FixCsModal from './FixCsModal';\n\nconst AdminCSMain = ({ history, match, location }) => {\n    let modalRef = useRef();\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, [location]);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [csList, setCsList] = useState(null);\n    const [csPage, setCsPage] = useState(null);\n\n    const [addCsModalOpen, setAddCsModalOpen] = useState(false);\n    const [addCsData, setAddCsData] = useState(null);\n\n    const [fixCsModalOpen, setFixCsModalOpen] = useState(false);\n    const [fixCsData, setFixCsData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getCsList();\n        }\n        fetchInit();\n    }, [location])\n    const __handleDataConnect = () => {\n        return {\n            getCsList: async function () {\n                await csDataConnect().searchCsAll()\n                    .then(data => {\n                        // console.log(data);\n                        if (data && data.message == 'success') {\n                            setCsList(data.data);\n                            setCsPage(data.page);\n                        }\n                    })\n            },\n            insertCsOne: async function (data) {\n                await csDataConnect().insertCsOne(data);\n            },\n            updateCsOne: async function (data) {\n                await csDataConnect().updateCsOne(data);\n            },\n            deleteCsOne: async function (data) {\n                await csDataConnect().deleteCsOne(data);\n            }\n        }\n    }\n\n    const handleCsEventControl = () => {\n        return {\n            addCsModalOpen: function () {\n                setAddCsModalOpen(true);\n                setAddCsData({\n                    csType: 'TYPE_NOTICE',\n                    csTitle: '',\n                    csDesc: '',\n                    csAuthor: '관리자',\n                    csImportantChecked: false,\n                });\n                handleCsEventControl().fixCsModalClose();\n            },\n            addCsModalClose: function () {\n                setAddCsModalOpen(false);\n                setAddCsData(null);\n            },\n            addCsModalSubmit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().insertCsOne(addCsData);\n                await __handleDataConnect().getCsList();\n                this.addCsModalClose();\n\n            },\n            addCsOnValueChange: function (e) {\n                // console.log(e.target.value);\n                setAddCsData({ ...addCsData, [e.target.name]: e.target.value })\n            },\n            addCsOnValueCheckedChange: function (e) {\n                setAddCsData({ ...addCsData, [e.target.name]: e.target.checked })\n            },\n            addCsDescOnValueChange: function (data) {\n                setAddCsData({ ...addCsData, ['csDesc']: data })\n            },\n            deleteOne: async function (csId) {\n                const data = csList.filter(r => r.csId == csId)[0];\n                await __handleDataConnect().deleteCsOne(data);\n                await __handleDataConnect().getCsList();\n            },\n            fixCsModalOpen: function (csId) {\n                handleCsEventControl().fixCsModalClose();\n                handleCsEventControl().addCsModalClose();\n                let data = csList.filter(r => r.csId == csId)[0];\n                setTimeout(() => {\n                    setFixCsData(data);\n                    setFixCsModalOpen(true);    \n                }, 10);\n                \n                setTimeout(() => {\n                    modalRef.current.scrollIntoView();\n                }, 100);\n            },\n            fixCsModalClose: function () {\n                setFixCsData(null);\n                setFixCsModalOpen(false);\n            },\n            fixCsModalSubmit: async function (e) {\n                e.preventDefault();\n                // console.log(fixCsData);\n                await __handleDataConnect().updateCsOne(fixCsData);\n                await __handleDataConnect().getCsList();\n                this.fixCsModalClose();\n            },\n            fixCsOnValueChange: function (e) {\n                // console.log(e.target.value);\n                setFixCsData({ ...fixCsData, [e.target.name]: e.target.value })\n            },\n            fixCsOnValueCheckedChange: function (e) {\n                setFixCsData({ ...fixCsData, [e.target.name]: e.target.checked })\n            },\n            fixCsDescOnValueChange: function (data) {\n                setFixCsData({ ...fixCsData, ['csDesc']: data })\n            },\n        }\n    }\n\n    return (\n        isLoged ?\n            <>\n                <AdminNav></AdminNav>\n                {csList && csPage ?\n                    <CsComponent\n                        csList={csList}\n                        csPage={csPage}\n                        fixCsModalOpen={fixCsModalOpen}\n                        handleCsEventControl={handleCsEventControl}\n                    ></CsComponent>\n                    :\n                    <></>\n                }\n                <div ref={modalRef}></div>\n                {addCsModalOpen && addCsData ?\n                    <AddCsModal\n                        modalOpen={addCsModalOpen}\n                        addCsData={addCsData}\n                        handleCsEventControl={handleCsEventControl}\n                    ></AddCsModal>\n                    :\n                    <></>\n                }\n                {fixCsModalOpen && fixCsData ?\n                    <FixCsModal\n                        modalOpen={fixCsModalOpen}\n                        fixCsData={fixCsData}\n                        handleCsEventControl={handleCsEventControl}\n                    ></FixCsModal>\n                    :\n                    <></>\n                }\n\n            </>\n            :\n            <></>\n    );\n}\n\nexport default AdminCSMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/CsComponent.js",["805","806"],"import styled from 'styled-components';\nimport queryString from 'query-string';\n// handler\nimport { dateToYYYYMMDD } from '../../../../handler/MyHandlers';\n\n// Components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    \n`;\n\nconst ListWrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n\n`;\n\nconst TopPart = styled.div`\n    padding:8px;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst TopPartTitle = styled.div`\n    font-size:21px;\n    font-weight:600;\n`;\n\nconst TopPartAddBtn = styled.button`\n    \n`;\n\nconst BodyPart = styled.div`\n    padding:8px;\n`;\n\nconst TableBox = styled.div`\n\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\n\nconst ControlBtn = styled.button`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst ControlLink = styled.a`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst CsComponent = (props) => {\n    let query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <ListContainer className='container-fluid'>\n                    <ListWrapper>\n                        <TopPart className='clearfix'>\n                            <TopPartTitle className='float-left'>게시물</TopPartTitle>\n                            <TopPartAddBtn type='button' className='float-right btn btn-outline-primary' onClick={() => props.handleCsEventControl().addCsModalOpen()}>게시물 추가</TopPartAddBtn>\n                        </TopPart>\n                        <BodyPart>\n                            <TableBox className='table-responsive'>\n                                <table className=\"table table-sm text-center\" style={{ tableLayout: 'fixed' }}>\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\" width='50'>#</th>\n                                            <th scope=\"col\" width='200'>제목</th>\n                                            <th scope=\"col\" width='150'>게시물 타입</th>\n                                            <th scope=\"col\" width='150'>작성날짜</th>\n                                            <th scope=\"col\" width='100'>중요글설정</th>\n                                            <th scope=\"col\" width='200'>컨트롤</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {props.csList.map((r, index) => {\n                                            let itemIndex = props.csPage.displaySize * (props.csPage.curr - 1) + index + 1;\n                                            return (\n                                                <tr key={r.csId}>\n                                                    <TableTh scope=\"row\">{itemIndex}</TableTh>\n                                                    <TableTd>{r.csTitle}</TableTd>\n                                                    <TableTd>{r.csType == 'TYPE_NOTICE' ? '공지사항' : ''}</TableTd>\n                                                    <TableTd>{dateToYYYYMMDD(r.csCreated)}</TableTd>\n                                                    <TableTd>\n                                                        {r.csImportantChecked ? <span className='text-success'>ON</span> : <span className='text-danger'>OFF</span>}\n                                                    </TableTd>\n                                                    <TableTd>\n                                                        <ControlLink\n                                                            href={`/cs/detail?csId=${r.csId}`}\n                                                            color_prop={'#80dd80'}\n                                                            className='btn btn-sm'\n                                                            target='_blank'\n                                                        >바로가기</ControlLink>\n                                                        {/* {props.fixCsModalOpen ?\n                                                            ''\n                                                            : */}\n                                                            <>\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#8080dd'}\n                                                                    onClick={() => props.handleCsEventControl().fixCsModalOpen(r.csId)}\n                                                                >수정</ControlBtn>\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#dd8080'}\n                                                                    onClick={() => props.handleCsEventControl().deleteOne(r.csId)}\n                                                                >삭제</ControlBtn>\n                                                            </>\n                                                        {/* } */}\n                                                    </TableTd>\n                                                </tr>\n                                            );\n                                        })}\n                                    </tbody>\n                                </table>\n                            </TableBox>\n                        </BodyPart>\n                    </ListWrapper>\n                    <PageableComponent\n                        pageData={props.csPage}\n                    ></PageableComponent>\n                </ListContainer>\n            </Container>\n        </>\n    );\n}\n\nexport default CsComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/AddCsModal.js",["807","808","809","810","811","812","813","814"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n// NOTE: Use the editor from source (not a build)!\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst editorConfiguration = {\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic', 'fontSize', 'fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image: {\n        toolbar: [\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table: {\n        contentToolbar: [\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCsModal = (props) => {\n    return (\n        <>\n            {props.modalOpen ?\n                <Container className='container-fluid'>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"게시물 추가\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleCsEventControl().addCsModalClose()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleCsEventControl().addCsModalSubmit(e)}>\n                            <div className=\"form-group\">\n                                <label>게시물 타입</label>\n                                <div className=\"form-check\">\n                                    <input type=\"radio\" className=\"form-check-input\" name='csType' value={'TYPE_NOTICE'} checked={props.addCsData.csType == 'TYPE_NOTICE' ? true : false} onChange={(e) => props.handleCsEventControl().addCsOnValueChange(e)} required disabled/>\n                                    <label>공지사항</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>게시물 타이틀</label>\n                                <input type=\"text\" className=\"form-control\" name='csTitle' value={props.addCsData.csTitle} onChange={(e) => props.handleCsEventControl().addCsOnValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='csImportantChecked' checked={props.addCsData.csImportantChecked} onChange={(e) => props.handleCsEventControl().addCsOnValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">중요</label>\n                                </div>\n                            </div>\n                            <label>내용</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.addCsData.csDesc}\n                                onReady={editor => {\n                                    console.log(editor)\n                                }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleCsEventControl().addCsDescOnValueChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={editorConfiguration}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleCsEventControl().addCsModalClose()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    상품 등록\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default AddCsModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CsDataConnect.js",["815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830"],"import axios from 'axios';\nimport queryString from 'query-string';\nimport { getCookie } from '../../handler/CookieHandler';\n\nconst csDataConnect = () => {\n    return {\n        searchCsAll: async function () {\n            let query = queryString.parse(window.location.search);\n            return await axios.get('/api/search/cs/all', {\n                params: {\n                    csType: query.csType,\n                    pageIndex: query.pageIndex ? query.pageIndex - 1 : 0,\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        searchCsOne: async function (csId) {\n            return await axios.get('/api/search/cs/one', {\n                params: {\n                    csId: csId\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertCsOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/insert/cs/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteCsOne: async function (data) {\n            return await axios.post('/api/delete/cs/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        updateCsOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/update/cs/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n    }\n}\n\nexport { csDataConnect }","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/PageableComponent.js",["831"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_cs/FixCsModal.js",["832","833","834","835","836","837","838","839"],"import { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// material\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n// NOTE: Use the editor from source (not a build)!\nimport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// handler\nimport { getCookie } from '../../../../handler/CookieHandler';\n\nconst editorConfiguration = {\n    plugins: CkeditorModules,\n    toolbar: [\n        'heading', '|',\n        'bold', 'italic', 'fontSize', 'fontColor', 'link', 'bulletedList', 'numberedList', 'alignment', '|',\n        'indent', 'outdent', '|',\n        'imageUpload',\n        'blockQuote',\n        'insertTable',\n        'mediaEmbed',\n        'undo',\n        'redo'\n\n    ],\n    image: {\n        toolbar: [\n            'imageStyle:full',\n            'imageStyle:side',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table: {\n        contentToolbar: [\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\n\nconst Container = styled.div`\n    .ck-content{\n        min-height:300px !important;\n        max-height:600px !important;\n    }\n`;\n\nconst Wrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n`;\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixCsModal = (props) => {\n    return (\n        <>\n            {props.modalOpen ?\n                <Container className='container-fluid'>\n                    <Wrapper>\n                        <DialogTitle className='clearfix'>{\"게시물 수정\"}<button className='float-right btn btn-large btn-outline-danger' onClick={() => props.handleCsEventControl().fixCsModalClose()}>닫기</button></DialogTitle>\n                        <form onSubmit={(e) => props.handleCsEventControl().fixCsModalSubmit(e)}>\n                            <div className=\"form-group\">\n                                <label>게시물 타입</label>\n                                <div className=\"form-check\">\n                                    <input type=\"radio\" className=\"form-check-input\" name='csType' value={'TYPE_NOTICE'} checked={props.fixCsData.csType == 'TYPE_NOTICE' ? true : false} onChange={(e) => props.handleCsEventControl().fixCsOnValueChange(e)} required disabled/>\n                                    <label>공지사항</label>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>게시물 타이틀</label>\n                                <input type=\"text\" className=\"form-control\" name='csTitle' value={props.fixCsData.csTitle} onChange={(e) => props.handleCsEventControl().fixCsOnValueChange(e)} required />\n                            </div>\n                            <div className='form-group'>\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" name='csImportantChecked' checked={props.fixCsData.csImportantChecked} onChange={(e) => props.handleCsEventControl().fixCsOnValueCheckedChange(e)} />\n                                    <label className=\"form-check-label\">중요</label>\n                                </div>\n                            </div>\n                            <label>내용</label>\n                            <CKEditor\n                                editor={ClassicEditor}\n                                // data=\"<p>Hello from CKEditor 5!</p>\"\n                                data={props.fixCsData.csDesc}\n                                onReady={editor => {\n                                    console.log(editor)\n                                }}\n                                onChange={(event, editor) => {\n                                    const data = editor.getData();\n                                    // console.log({ event, editor, data });\n                                    props.handleCsEventControl().fixCsDescOnValueChange(data);\n                                }}\n\n                                onBlur={(event, editor) => {\n                                    // console.log('Blur.', editor);\n                                    // props.handleEditorControl().onBlur();\n                                }}\n                                onFocus={(event, editor) => {\n                                    // console.log('Focus.', editor);\n                                }}\n                                config={editorConfiguration}\n\n                            />\n                            <DialogActions>\n                                <Button type='button' color=\"secondary\" onClick={() => props.handleCsEventControl().fixCsModalClose()}>\n                                    취소\n                                </Button>\n                                <Button type='submit' color=\"primary\">\n                                    상품 등록\n                                </Button>\n                            </DialogActions>\n                        </form>\n                    </Wrapper>\n                </Container>\n                : ''}\n        </>\n    );\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n        return new MyUploadAdapter(loader)\n    }\n}\n\nclass MyUploadAdapter {\n    constructor(props) {\n        // CKEditor 5's FileLoader instance.\n        this.loader = props;\n        // URL where to send files.\n        // upload to s3\n        this.url = `/api/fileupload/image`;\n        // upload to local\n        // this.url = `/api/fileupload/external/image`;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return new Promise((resolve, reject) => {\n            this._initRequest();\n            this._initListeners(resolve, reject);\n            this._sendRequest();\n        });\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n\n    // Example implementation using XMLHttpRequest.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*')\n        xhr.setRequestHeader('X-XSRF-TOKEN', getCookie('XSTO'))\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners(resolve, reject) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = 'Couldn\\'t upload file:' + ` ${loader.file.name}.`;\n\n        xhr.addEventListener('error', () => reject(genericErrorText));\n        xhr.addEventListener('abort', () => reject());\n        xhr.addEventListener('load', () => {\n            const response = xhr.response;\n            // console.log(response)\n            if (!response || response.error || response.message == 'failure') {\n                return reject(response && (response.error || response.message == 'failure') ? response.message : genericErrorText);\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            resolve({\n                default: response.imageUrl\n            });\n            alert('이미지 업로드 완료됨.');\n        });\n\n        if (xhr.upload) {\n            xhr.upload.addEventListener('progress', evt => {\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest() {\n        const data = new FormData();\n\n        this.loader.file.then(result => {\n            data.append('file', result);\n            this.xhr.send(data);\n        }\n        )\n    }\n\n}\n\nexport default FixCsModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/CsNoticeMain.js",["840","841","842","843","844"],"import { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connector\nimport { csDataConnect } from '../../../data_connect/CsDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CsTopLayout from '../layout/CsTopLayout';\nimport NoticeComponent from './NoticeComponent';\n\nconst CsNoticeMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    useEffect(() => {\n        handleScrollToTop();\n\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [csList, setCsList] = useState(null);\n    const [csPage, setCsPage] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleCsDataConnect().getCsList();\n        }\n        fetchInit();\n    }, [location])\n    const __handleCsDataConnect = () => {\n        return {\n            getCsList: async function () {\n                await csDataConnect().searchCsAll()\n                    .then(data => {\n                        // console.log(data);\n                        if (data && data.message == 'success') {\n                            setCsList(data.data);\n                            setCsPage(data.page);\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleCsEventControl = () => {\n        return {\n\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <CsTopLayout\n                title={'공지사항'}\n                linkPage={'notice'}\n            ></CsTopLayout>\n            {/* body start */}\n            {csList && csPage ?\n                <NoticeComponent\n                    csList = {csList}\n                    csPage={csPage}\n                ></NoticeComponent>\n                :\n                <></>\n            }\n\n            {/* body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default CsNoticeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/layout/CsTopLayout.js",["845","846","847","848"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    min-height:250px;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:30px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:25px;\n        }\n    }\n    \n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    color: #ffffffb3;\n    width:100%;\n    font-size:20px;\n    font-weight:600;\n    z-index:1;\n    position: absolute;\n    top: 70%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    position: absolute;\n    width:80%;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n    bottom:0;\n    left: 50%;\n    transform: translate(-50%);\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    /* background-color: ${(props)=>props.link_active && props.link_active ? '#e88a3e' : '#ffffff40'}; */\n    background-color: ${(props)=>props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-bottom:none;\n    border-radius:4px;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    font-size:18px;\n    color:white;\n    font-weight:600;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst CsTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaTitle>고객센터</TopAreaTitle>\n                <TopAreaNavgatorFiled>\n                \n                    <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    고객센터\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    {props.title}\n                    \n                </TopAreaNavgatorFiled>\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n                <TopAreaSubNavWrapper>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='notice'?1:0}\n                        to='/cs/notice'\n                    >\n                        공지사항\n                    </TopAreaSubNavItem>\n                    <TopAreaSubNavItem\n                        link_active={props.linkPage=='counsel'?1:0}\n                        to='/cs/counsel'\n                    >\n                        기타상담안내\n                    </TopAreaSubNavItem>\n                </TopAreaSubNavWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default CsTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/NoticeComponent.js",["849","850","851","852","853","854","855","856","857","858","859","860","861","862","863"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons';\n\n// handler\nimport { dateToYYYYMMDD } from '../../../../handler/MyHandlers';\n// components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst BodyWrapper = styled.div`\n    padding:50px 15px;\n`;\n\nconst ProductImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ProductImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst ImageWrapper = styled.div`\n    width:100%;\n    height:auto;\n    cursor:pointer;\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    padding-bottom: 56.2%;\n`;\nconst ImageEl = styled.img`\n    position: absolute;\n    object-fit: cover;\n    width: 100%;\n    height: 100%;\n    transition: .5s;\n`;\n\nconst ContentBox = styled.div`\n    padding:8px;\n`;\n\nconst ContentTitle = styled.div`\n/* padding:2px 0; */\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n`;\n\nconst ContentAddress = styled.div`\n    height:80px;\n    font-size:18px;\n    @media only screen and (max-width:768px){\n        font-size:12px;\n    }\n    @media only screen and (max-width:320px){\n        height:100px;\n        font-size:12px;\n    }\n`;\n\nconst ContentIconEl = styled.div`\n    /* font-size:21px; */\n    color:#a0a0a0;\n    & .icon{\n        display:inline-block;\n        font-size:30px;\n        margin:0 5px;\n    }\n    & .detail{\n        display:inline-block;\n        margin:0 5px;\n    }\n\n    @media only screen and (max-width:768px){\n        & .icon{\n            font-size:20px;\n        }\n        & .detail{\n            font-size:15px;\n        }\n    }\n`;\nconst ContentWrapper = styled(Link)`\n    border: 2px solid #00000000;\n    border-radius:2px;\n    box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px;\n    overflow:hidden;\n    color:#333;\n    transition: .5s;\n    &:hover{\n        /* background:#ee5470; */\n        border: 2px solid #ee5470;\n        text-decoration:none;\n        color:#333;\n        transform:scale(1.03);\n        /* background: linear-gradient(\n            60deg,\n            hsl(224, 85%, 66%),\n            hsl(269, 85%, 66%),\n            hsl(314, 85%, 66%),\n            hsl(359, 85%, 66%),\n            hsl(44, 85%, 66%),\n            hsl(89, 85%, 66%),\n            hsl(134, 85%, 66%),\n            hsl(179, 85%, 66%)\n        );\n        background-size: 300% 300%;\n        background-position: 0 50%;\n        animation: moveGradient 4s alternate infinite; */\n        \n        & ${ImageEl}{\n            \n            transform:scale(1.03);\n        }\n        & ${ContentTitle}{\n            /* font-weight:800; */\n            color:#ee5470\n        }\n\n        & ${ContentIconEl}{\n            color:#ee5470\n        }\n    }\n\n    @keyframes moveGradient {\n        50% {\n            background-position: 100% 50%;\n        }\n    }\n`;\n\nconst TableBox = styled.div`\n    font-size:16px;\n    @media only screen and (max-width:768px){\n        font-size:13px;\n    }\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\nconst ListContainer = styled.div`\n    margin-bottom:15px;\n`;\nconst ListWrapper = styled.div`\n    border-top:1px solid #ee5470;\n`;\n\nconst ListBox = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    padding:8px;\n    \n`;\n\nconst ListLink = styled(Link)`\n    color:#333;\n    &:hover{\n        color:#333;\n    }\n`;\nconst ListTitle = styled.div`\n    font-size:18px;\n    font-weight:600;\n    padding:2px;\n`;\n\nconst ListSubText = styled.div`\n    font-size:14px;\n    padding:2px;\n    color:#808080;\n`;\nconst NoticeComponent = (props) => {\n    let query = queryString.parse(window.location.search);\n    let browserWidth = window.innerWidth;\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        CUSTOMER SERVICE\n                    </MainTitle>\n                    <MainTitleSub>고객센터</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>\n                        공지사항\n                    </ExplainEl>\n                </MainTitleBox>\n                <BodyWrapper className='container'>\n                    {/* {browserWidth >= 992 ?\n                        <TableBox className=''>\n                            <table className={`table text-center`}>\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\" width='50'>#</th>\n                                        <th scope=\"col\" width='500'>제목</th>\n                                        <th scope=\"col\" width='150'>작성자</th>\n                                        <th scope=\"col\" width='150'>작성날짜</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {props.csList.map((r, index) => {\n                                        let itemIndex = props.csPage.displaySize * (props.csPage.curr - 1) + index + 1;\n                                        return (\n                                            <tr key={r.csId}>\n                                                <TableTh scope=\"row\">{itemIndex}</TableTh>\n                                                <TableTd>{r.csTitle}</TableTd>\n                                                <TableTd>{r.csAuthor}</TableTd>\n                                                <TableTd>{dateToYYYYMMDD(r.csCreated)}</TableTd>\n                                            </tr>\n                                        );\n                                    })}\n                                </tbody>\n                            </table>\n                        </TableBox>\n                        : */}\n                        <ListContainer>\n                            <ListWrapper>\n                                {props.csList.map((r, index) => {\n                                    let itemIndex = props.csPage.displaySize * (props.csPage.curr - 1) + index + 1;\n                                    if (r.csImportantChecked) {\n                                        return (\n                                            <ListBox key={r.csId}>\n                                                <ListLink to={`/cs/detail?csId=${r.csId}`}>\n                                                    <ListTitle>\n                                                        <FontAwesomeIcon icon={faExclamation} className='mr-2' color={'#ee5470'}></FontAwesomeIcon>{r.csTitle}\n                                                    </ListTitle>\n                                                    <ListSubText>\n                                                        <span>{r.csAuthor} | {dateToYYYYMMDD(r.csCreated)}</span>\n                                                    </ListSubText>\n                                                </ListLink>\n                                            </ListBox>\n                                        );\n                                    } else {\n                                        return (\n                                            <ListBox key={r.csId}>\n                                                <ListLink to={`/cs/detail?csId=${r.csId}`}>\n                                                    <ListTitle>\n                                                        {itemIndex}. {r.csTitle}\n                                                    </ListTitle>\n                                                    <ListSubText>\n                                                        <span>{r.csAuthor} | {dateToYYYYMMDD(r.csCreated)}</span>\n                                                    </ListSubText>\n                                                </ListLink>\n                                            </ListBox>\n                                        );\n                                    }\n                                })}\n                            </ListWrapper>\n                        </ListContainer>\n                    {/* } */}\n                    <PageableComponent\n                        pageData={props.csPage}\n                    ></PageableComponent>\n                </BodyWrapper>\n            </Container>\n        </>\n    );\n}\n\nexport default NoticeComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/notice/PageableComponent.js",["864"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/detail/CsDetailMain.js",["865","866","867","868"],"import { useEffect, useState, useRef } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connector\nimport { csDataConnect } from '../../../data_connect/CsDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CsTopLayout from '../layout/CsTopLayout';\nimport CsDetailComponent from './CsDetailComponent';\n\nconst CsDetailMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n    useEffect(() => {\n        handleScrollToTop();\n\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [csData, setCsData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleCsDataConnect().getCsOne();\n        }\n        fetchInit();\n    }, [location]);\n\n    const __handleCsDataConnect = () => {\n        return {\n            getCsOne: async function () {\n                let csId = query.csId ? query.csId : 0;\n                await csDataConnect().searchCsOne(csId)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCsData(data.data);\n                        }\n                    })\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <CsTopLayout\n                title={'공지사항'}\n                linkPage={'detail'}\n            ></CsTopLayout>\n            {/* body start */}\n            {csData ?\n                <CsDetailComponent\n                    csData={csData}\n                ></CsDetailComponent>\n                :\n                <>\n                    <div className='text-center'>\n                        <h2 className='m-3 p-3'>NOT FOUND</h2>\n                        <div className='m-1 p-1'>\n                            <Link to={'/cs/notice'}>Go To Customer Service List</Link>\n                        </div>\n                        <div className='m-1 p-1'>\n                            <Link to={'/'}>Go To Home</Link>\n                        </div>\n                    </div>\n                </>\n            }\n\n            {/* body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default CsDetailMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/detail/CsDetailComponent.js",["869","870","871","872","873","874","875"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons';\nimport CkeditorModules from '../../../modules/CkeditorModules';\n\n// handler\nimport { dateToYYYYMMDD } from '../../../../handler/MyHandlers';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductDescContainer = styled.div`\n    border-top:1px solid #f1f1f1;\n`;\n\nconst ProductDescBox = styled.div`\n    margin:20px auto;\n    /* padding:10px; */\n    /* border: 1px solid #f1f1f1; */\n`;\n\nconst CsDetailComponent = (props) => {\n\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        CUSTOMER SERVICE\n                    </MainTitle>\n                    <MainTitleSub>고객센터</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>\n                        {props.csData.csTitle}\n                    </ExplainEl>\n                </MainTitleBox>\n                <ProductDescContainer className='container mt-3 mb-3'>\n                    <div className='mb-3 clearfix'>\n                        <div className='float-right p-3' style={{ color: '#808080', fontSize: '14px' }}>\n                            {props.csData.csAuthor} | {dateToYYYYMMDD(props.csData.csCreated)}\n                        </div>\n                    </div>\n\n                    <ProductDescBox>\n                        <div className='ck-content clearfix' dangerouslySetInnerHTML={{ __html: props.csData.csDesc }}>\n                        </div>\n                    </ProductDescBox>\n\n                </ProductDescContainer>\n            </Container>\n\n        </>\n    );\n}\n\nexport default CsDetailComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/NoticeComponent.js",["876","877","878","879","880","881"],"import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n`;\n\nconst NoticeContainer = styled.div`\n    margin:30px 0;\n`;\nconst NoticeWrapper = styled.div`\n    padding-top:5px;\n    padding-bottom:5px;\n`;\nconst NoticeBox = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    padding:10px 8px;\n    font-size:18px;\n`;\n\nconst NoticeLink = styled(Link)`\n    \n    color:#333;\n    &:hover{\n        color:#333;\n    }\n`;\n\nconst NoticeTitle = styled.div`\n    \n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n`;\nconst NoticeComponent = (props) => {\n    let [csImportantList, setCsImportantList] = useState(props.csList.filter(r => r.csImportantChecked == true));\n    let [csCommonList, setCsCommonList] = useState(props.csList.filter(r => r.csImportantChecked == false));\n    return (\n        <>\n            <Container className='container-fluid'>\n                <NoticeContainer className='row'>\n                    <NoticeWrapper className='col-md-6'>\n                        <div style={{ borderBottom: '1px solid #ee5470', padding: '5px' }}>\n                            <div style={{ color: '#ee5470', fontSize:'21px' }}>Important Notice</div>\n                            <div className='clearfix' style={{ fontSize: '24px', fontWeight: '600' }}>\n                                중요 공지사항\n                                <Link className='btn btn-outline-info float-right' to='/cs/notice'>더보기</Link>\n                            </div>\n                            \n                        </div>\n                        {csImportantList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <NoticeBox key={r.csId}>\n                                        <NoticeLink to={`/cs/detail?csId=${r.csId}`}>\n                                            <NoticeTitle>\n                                                {r.csTitle}\n                                            </NoticeTitle>\n                                        </NoticeLink>\n                                    </NoticeBox>\n                                )\n                            }\n                        })}\n                    </NoticeWrapper>\n                    <NoticeWrapper className='col-md-6'>\n                        <div style={{ borderBottom: '1px solid #ee5470', padding: '5px' }}>\n                            <div style={{ color: '#ee5470', fontSize:'21px' }}>Notice</div>\n                            <div className='clearfix' style={{ fontSize: '24px', fontWeight: '600' }}>\n                                공지사항\n                                <Link className='btn btn-outline-info float-right' to='/cs/notice'>더보기</Link>\n                            </div>\n                        </div>\n                        {csCommonList.map((r, index) => {\n                            if (index < 6) {\n                                return (\n                                    <NoticeBox key={r.csId}>\n                                        <NoticeLink to={`/cs/detail?csId=${r.csId}`}>\n                                            <NoticeTitle>\n                                                {r.csTitle}\n                                            </NoticeTitle>\n                                        </NoticeLink>\n                                    </NoticeBox>\n                                )\n                            }\n                        })}\n                    </NoticeWrapper>\n                </NoticeContainer>\n            </Container>\n        </>\n    );\n}\n\nexport default NoticeComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/cs/counsel/CsCounselMain.js",["882","883","884"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CsTopLayout from '../layout/CsTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst CsCounselMain = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <CsTopLayout\n                title={'기타상담신청'}\n                linkPage={'counsel'}\n            ></CsTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            EXTRA INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>기타상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect value={counselingType} onChange={(e)=>setCounselingType(e.target.value)} required>\n                                        <option value='' hidden>--선택--</option>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='rental'>임대상담</option>\n                                        <option value='purchase'>상품구매상담</option>\n                                        <option value='closed'>폐업상담</option>\n                                        <option value='renewal'>매장리뉴얼상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>층수</label>\n                                    <ApplicationInput type='text' name='floor' placeholder='점포 층수를 입력해주세요.' value={floor} onChange={(e)=>setFloor(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망오픈일</label>\n                                    <ApplicationDatePicker \n                                        dateFormat=\"yyyy년 MM월 dd일\"\n                                        placeholderText=\"희망오픈일 선택\"\n                                        selected={openDate} onChange={date=>setOpenDate(date)} strictParsing></ApplicationDatePicker>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span> <a href='/policy/privacy' target='_blank'>보기</a></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default CsCounselMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/policy/privacy/PrivacyAgreement.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout2.js",["885","886","887","888","889"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faHome,\n    faCaretRight,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n`;\nconst TopAreaWrapper = styled.div`\n    position: relative;\n    text-align: center;\n    width:100%;\n    height:60vh;\n    @media only screen and (max-width:768px){\n        &{\n            height: 35vh;\n        }\n    }\n`;\n\nconst TopAreaBox = styled.div`\n    width:100%;\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    z-index:1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaTitle = styled.div`\n    color: white;\n    font-size:45px;\n    font-weight:900;\n    margin:30px 0;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:33px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst TopAreaNavgatorFiled = styled.div`\n    width:100%;\n    color: #ffffffb3;\n    font-size:20px;\n    font-weight:600;\n    /* padding:30px 0; */\n    z-index:1;\n    & a{\n        color: #ffffffb3;\n    }\n    & a:hover{\n        color: #ee5470;\n    }\n\n    & span{\n        margin: 0 20px;\n    }\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n        & span{\n            margin: 0 5px;\n        }\n    }\n`;\n\nconst TopAreaImageWrapper = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n    img{\n        width:100%;\n        height:100%;\n        object-fit:cover;\n        /* Safari 6.0 - 9.0 */\n        -webkit-filter: blur(10px); \n        filter: blur(10px);\n        transform: scale(1.1);\n    }\n`;\n\nconst TopAreaSubNavWrapper = styled.div`\n    width:100%;\n    display:grid;\n    grid-template-columns:repeat(3,1fr);\n    grid-auto-rows: minmax(auto, auto);\n    grid-gap:5px;\n`;\n\nconst TopAreaSubNavItem = styled(Link)`\n    background-color: ${(props) => props.link_active && props.link_active ? '#ee5470' : '#ffffff40'};\n    padding:10px 0;\n    border:1px solid #ffffff80;\n    border-radius:4px;\n    font-size:18px;\n    color:white;\n    font-weight:700;\n    cursor: pointer;\n    &:hover{\n        color:white;\n        text-decoration:none;\n        background-color:#ee5470;\n    }\n\n    @media only screen and (max-width:768px){\n        &{\n            font-size:15px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:13px;\n        }\n    }\n`;\n\nconst IntroduceTopLayout = (props) => {\n    return (\n        <Container>\n            <TopAreaWrapper>\n                <TopAreaBox>\n                    <TopAreaTitle>\n                        회사소개\n                    </TopAreaTitle>\n                    <TopAreaNavgatorFiled>\n\n                        <Link to='/'><FontAwesomeIcon icon={faHome}></FontAwesomeIcon></Link>\n                        <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                    회사소개\n                    <span><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></span>\n                        {props.title}\n\n                    </TopAreaNavgatorFiled>\n                    <TopAreaSubNavWrapper>\n                        <TopAreaSubNavItem\n                            link_active={props.linkPage == 'intro1' ? 1 : 0}\n                            to='/introduce/intro1'\n                        >\n                            인사말\n                    </TopAreaSubNavItem>\n                        <TopAreaSubNavItem\n                            link_active={props.linkPage == 'intro2' ? 1 : 0}\n                            to='/introduce/intro2'\n                        >연혁</TopAreaSubNavItem>\n                        <TopAreaSubNavItem\n                            link_active={props.linkPage == 'intro3' ? 1 : 0}\n                            to='/introduce/intro3'\n                        >오시는 길</TopAreaSubNavItem>\n                    </TopAreaSubNavWrapper>\n                </TopAreaBox>\n\n                <TopAreaImageWrapper>\n                    <img src='/images/funnyland/bg/funnyland-bg1.png'></img>\n                </TopAreaImageWrapper>\n            </TopAreaWrapper>\n        </Container>\n    );\n}\n\nexport default IntroduceTopLayout;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro3/FoundIntro3Main.js",["890","891","892"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport { counselingDataConnect } from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport FoundTopLayout from '../layout/FoundTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst FoundIntro3Main = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <FoundTopLayout\n                title={'임대 절차 안내'}\n                linkPage={'intro3'}\n            ></FoundTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            RENTAL PROCESS\n                        </MainTitle>\n                        <MainTitleSub>임대 절차 안내</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default FoundIntro3Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent2.js",["893","894","895","896","897","898","899","900","901","902","903","904","905"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { useEffect, useRef, useState } from 'react';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n    /* background:#f8bac9; */\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(13%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:1200px){\n        grid-template-columns:repeat(auto-fit,minmax(20%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:20px 0;\n    color:#333;\n    font-size:20px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:18px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n\n`;\n\nconst ListGroupWrapper = styled.div`\n    position:relative;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst ListGroupBox = styled.div`\n    width:100%;\n    white-space: nowrap;\n`;\n\nconst ListGroupEl = styled(Link)`\n    display:inline-block;\n    text-align:center;\n    background:white;\n    padding:25px;\n    color:#333;\n    font-size:20px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        padding:20px;\n        font-size:18px;\n    }\n    @media only screen and (max-width:768px){\n        padding:20px 10px;\n        font-size:15px;\n    }\n`;\nconst numbers = new Array(50).fill(1).map((_, index) => index + 1);\nconst CategoryNavComponent2 = (props) => {\n    const query = queryString.parse(window.location.search);\n    const [scrollVal, setScrollVal] = useState(0);\n    const [startScrollVal, setStartScrollVal] = useState(0);\n    const [endScrollVal, setEndScrollVal] = useState(0);\n    let scrollRef = useRef();\n    return (\n        <>\n            <Container>\n                {/* <Wrapper className='container-fluid'>\n                    {props.categoryList && props.selectedCategory ?\n                        <GridGroup>\n                            {props.selectedCategory.id == 0 && !query.newChecked && !query.hitChecked && !query.eventChecked ? <GridEl to='/product/list' style={{ color: '#ee5470' }}>전체상품</GridEl> : <GridEl to='/product/list'>전체상품</GridEl>}\n                            {query.newChecked && query.newChecked == 'true' ? <GridEl to='/product/list?newChecked=true' style={{ color: '#ee5470' }}>신상품</GridEl> : <GridEl to='/product/list?newChecked=true'>신상품</GridEl>}\n                            {query.hitChecked && query.hitChecked == 'true' ? <GridEl to='/product/list?hitChecked=true' style={{ color: '#ee5470' }}>히트상품</GridEl> : <GridEl to='/product/list?hitChecked=true'>히트상품</GridEl>}\n                            {query.eventChecked && query.eventChecked == 'true' ? <GridEl to='/product/list?eventChecked=true' style={{ color: '#ee5470' }}>이벤트 렌탈</GridEl> : <GridEl to='/product/list?eventChecked=true'>이벤트 렌탈</GridEl>}\n\n                            {props.categoryList.map(r => {\n                                if (r.id == props.selectedCategory.id) {\n                                    return (\n                                        <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`} style={{ color: '#ee5470' }}>{r.categoryName}</GridEl>\n                                    );\n                                }\n                                return (\n                                    <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`}>{r.categoryName}</GridEl>\n                                );\n                            })}\n                        </GridGroup>\n                        :\n                        <></>\n                    }\n\n\n                </Wrapper> */}\n                <div style={{padding: '0 20px', textAlign:'center' }}>\n                    <ListGroupWrapper className=\"container-fluid\">\n\n                        <ScrollContainer\n                            onStartScroll={(e) => setStartScrollVal(e)}\n                            onEndScroll={(e) => setEndScrollVal(e)}\n                            onScroll={(e) => setScrollVal(e)}\n                            innerRef={scrollRef}\n                        >\n                            <ListGroupBox>\n                                {props.selectedCategory.id == 0 && !query.newChecked && !query.hitChecked && !query.eventChecked ? <ListGroupEl to='/product/list' style={{ color: '#ee5470' }}>전체상품</ListGroupEl> : <ListGroupEl to='/product/list'>전체상품</ListGroupEl>}\n                                {query.newChecked && query.newChecked == 'true' ? <ListGroupEl to='/product/list?newChecked=true' style={{ color: '#ee5470' }}>신상품</ListGroupEl> : <ListGroupEl to='/product/list?newChecked=true'>신상품</ListGroupEl>}\n                                {query.hitChecked && query.hitChecked == 'true' ? <ListGroupEl to='/product/list?hitChecked=true' style={{ color: '#ee5470' }}>히트상품</ListGroupEl> : <ListGroupEl to='/product/list?hitChecked=true'>히트상품</ListGroupEl>}\n                                {query.eventChecked && query.eventChecked == 'true' ? <ListGroupEl to='/product/list?eventChecked=true' style={{ color: '#ee5470' }}>이벤트 렌탈</ListGroupEl> : <ListGroupEl to='/product/list?eventChecked=true'>이벤트 렌탈</ListGroupEl>}\n                                {props.categoryList.map(r => {\n                                    if (r.id == props.selectedCategory.id) {\n                                        return (\n                                            <ListGroupEl key={r.id} to={`/product/list?categoryId=${r.id}`} style={{ color: '#ee5470' }}>{r.categoryName}</ListGroupEl>\n                                        );\n                                    }\n                                    return (\n                                        <ListGroupEl key={r.id} to={`/product/list?categoryId=${r.id}`}>{r.categoryName}</ListGroupEl>\n                                    );\n                                })}\n                            </ListGroupBox>\n\n                        </ScrollContainer>\n                    </ListGroupWrapper>\n                </div>\n\n            </Container>\n        </>\n    )\n}\n\nexport default CategoryNavComponent2;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/PopupComponent.js",["906","907","908","909","910","911"],"import { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { setCookie, getCookie } from '../../../handler/CookieHandler';\n\nconst Container = styled.div`\n    position:relative;\n`;\n\nconst PopupBox = styled.div`\n    position:absolute;\n    width:45%;\n    z-index:3;\n    top:100px;\n    @media only screen and (max-width:768px){\n        width:100%;\n        padding:10px;\n    }\n`;\n\nconst ButtonBox = styled.div`\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-auto-rows: minmax(auto, auto);\n`;\n\nconst ButtonEl = styled.button`\n    background:#333;\n    border:1px solid #888;\n    color:white;\n    padding:5px;\n    text-align:center;\n`;\n\nconst PopupImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border:1px solid #f1f1f1;\n    \n`;\n\nconst PopupImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst PopupImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n    cursor:pointer;\n`;\nconst PopupComponent = (props) => {\n    const [popupList, setPopupList] = useState(props.popupList);\n\n    // useEffect(() => {\n    //     function fetchInit() {\n    //         popupList.forEach(r => {\n    //             let popupCookie = getCookie(`popup${r.popupId}`);\n    //             if (popupCookie) {\n    //                 let newPopupList = popupList.filter(r2 => r2.popupId != r.popupId);\n    //                 setPopupList(newPopupList);\n    //             }\n    //         })\n    //     }\n    //     fetchInit();\n    // }, [popupList])\n    const handlePopupEventControl = () => {\n        return {\n            close: function (popupId) {\n                let newPopupList = popupList.filter(r => r.popupId != popupId);\n                setPopupList(newPopupList);\n            },\n            oneDayClose: function (popupId) {\n                let newPopupList = popupList.filter(r => r.popupId != popupId);\n                setPopupList(newPopupList);\n                setCookie(`popup${popupId}`, 1, 60*60*24*1000);\n            }\n        }\n    }\n    return (\n        <Container>\n            {popupList.map(r => {\n                return (\n                    <PopupBox key={r.popupId}>\n                        <PopupImageBox>\n                            <PopupImageEl>\n                                <a href={r.popupUrl} target=\"_blank\">\n                                    <PopupImage src={r.popupImageUrl}></PopupImage>\n                                </a>\n                            </PopupImageEl>\n                        </PopupImageBox>\n                        <ButtonBox>\n                            <ButtonEl onClick={() => handlePopupEventControl().oneDayClose(r.popupId)}>오늘하루 보지않기</ButtonEl>\n                            <ButtonEl onClick={() => handlePopupEventControl().close(r.popupId)}>닫기</ButtonEl>\n                        </ButtonBox>\n                    </PopupBox>\n                );\n            })}\n\n        </Container>\n    );\n\n}\n\nexport default PopupComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminPopupManage.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AddPopupModal.js",["912"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst ImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst Image = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst AddVideoModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                // onClose={() => props.handlePopupEventControl().addPopupModalClose()}\n            >\n                <DialogTitle className='text-center'>{\"팝업 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handlePopupEventControl().addPopupDataSubmit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>팝업 이름</label>\n                            <input type=\"text\" className=\"form-control\" name='popupName' value={props.addPopupData.popupName} onChange={(e) => props.handlePopupEventControl().addPopupDataOnValueChange(e)} placeholder=\"구분하실 팝업 이름을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>팝업 URL</label>\n                            <input type=\"text\" className=\"form-control\" name='popupUrl' value={props.addPopupData.popupUrl} onChange={(e) => props.handlePopupEventControl().addPopupDataOnValueChange(e)} placeholder=\"팝업 클릭시 이동시킬 url을 등록해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n\n                        </div>\n                        <div className=\"form-group\">\n                            <label>팝업 이미지 (4:3 권장)</label>\n                            <input hidden id='i_popup_image_uploader' name='popupImageUrl' type=\"file\" className=\"form-control\" accept=\"image/*\" onChange={(e) => props.handlePopupEventControl().uploadImage(e)} placeholder=\"팝업에 보여주실 이미지를 등록해주세요.\" />\n                            {props.addPopupData.popupImageUrl ?\n                                <>\n                                    <ImageBox>\n                                        <ImageEl>\n                                            <Image src={props.addPopupData.popupImageUrl} style={{cursor:'pointer'}} onClick={()=>document.getElementById('i_popup_image_uploader').click()}></Image>\n                                        </ImageEl>\n                                    </ImageBox>\n                                </>\n                                :\n                                <div>\n                                    <button type='button' className='btn btn-lg' style={{border:'1px solid #a1a1a1'}} onClick={()=>document.getElementById('i_popup_image_uploader').click()}>팝업 이미지 등록</button>\n                                </div>\n                            }\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handlePopupEventControl().addPopupModalClose()}>\n                            취소\n                        </Button>\n                        <Button type='submit' color=\"primary\">\n                            팝업 등록\n                        </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddVideoModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/PopupDataConnect.js",["913","914","915","916","917","918","919","920","921","922","923"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\n\nconst popupDataConnect = () => {\n    return {\n        // ============upload to s3=================\n        uploadImageToLocal: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if(res && res.data){\n                        return res.data;\n                    }else{\n                        return null;\n                    }\n                })\n                .catch(err=>{\n                    if(err.response.status==500){\n                        alert('server 500 error.');\n                    }else{\n                        alert('undefined error.');\n                    }\n                })\n        },\n        // ============upload to local=================\n        // uploadImageToLocal: async function (fd) {\n        //     return await axios.post('/api/fileupload/external/image', fd, {\n        //         headers: {\n        //             'X-XSRF-TOKEN': getCookie('XSTO')\n        //         }\n        //     })\n        //         .then(res => {\n        //             if(res && res.data){\n        //                 return res.data;\n        //             }else{\n        //                 return null;\n        //             }\n        //         })\n        //         .catch(err=>{\n        //             if(err.response.status==500){\n        //                 alert('server 500 error.');\n        //             }else{\n        //                 alert('undefined error.');\n        //             }\n        //         })\n        // },\n        searchPopupAll: async function () {\n            return await axios.get('/api/search/popup/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertPopupOne: async function (data) {\n            return await axios.post('/api/insert/popup/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deletePopupOne: async function (data) {\n            // console.log(data);\n            return await axios.post('/api/delete/popup/one',data,{\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n    }\n}\n\nexport { popupDataConnect }",{"ruleId":"924","severity":1,"message":"925","line":8,"column":8,"nodeType":"926","messageId":"927","endLine":8,"endColumn":13},{"ruleId":"928","replacedBy":"929"},{"ruleId":"930","replacedBy":"931"},{"ruleId":"924","severity":1,"message":"932","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":9},{"ruleId":"933","severity":1,"message":"934","line":28,"column":7,"nodeType":"935","endLine":28,"endColumn":9,"suggestions":"936"},{"ruleId":"937","severity":1,"message":"938","line":33,"column":33,"nodeType":"939","messageId":"940","endLine":33,"endColumn":35},{"ruleId":"924","severity":1,"message":"941","line":1,"column":31,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"942","line":19,"column":10,"nodeType":"926","messageId":"927","endLine":19,"endColumn":19},{"ruleId":"924","severity":1,"message":"943","line":33,"column":7,"nodeType":"926","messageId":"927","endLine":33,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":102,"column":50,"nodeType":"939","messageId":"940","endLine":102,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":115,"column":58,"nodeType":"939","messageId":"940","endLine":115,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":123,"column":58,"nodeType":"939","messageId":"940","endLine":123,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":131,"column":58,"nodeType":"939","messageId":"940","endLine":131,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":141,"column":50,"nodeType":"939","messageId":"940","endLine":141,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":150,"column":50,"nodeType":"939","messageId":"940","endLine":150,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":158,"column":50,"nodeType":"939","messageId":"940","endLine":158,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":163,"column":64,"nodeType":"939","messageId":"940","endLine":163,"endColumn":66},{"ruleId":"924","severity":1,"message":"944","line":4,"column":8,"nodeType":"926","messageId":"927","endLine":4,"endColumn":14},{"ruleId":"945","severity":1,"message":"946","line":45,"column":33,"nodeType":"947","endLine":45,"endColumn":86},{"ruleId":"924","severity":1,"message":"948","line":36,"column":7,"nodeType":"926","messageId":"927","endLine":36,"endColumn":24},{"ruleId":"924","severity":1,"message":"949","line":69,"column":7,"nodeType":"926","messageId":"927","endLine":69,"endColumn":14},{"ruleId":"924","severity":1,"message":"950","line":75,"column":7,"nodeType":"926","messageId":"927","endLine":75,"endColumn":14},{"ruleId":"924","severity":1,"message":"951","line":125,"column":7,"nodeType":"926","messageId":"927","endLine":125,"endColumn":14},{"ruleId":"952","severity":1,"message":"953","line":273,"column":53,"nodeType":"954","messageId":"955","endLine":273,"endColumn":55},{"ruleId":"952","severity":1,"message":"953","line":302,"column":53,"nodeType":"954","messageId":"955","endLine":302,"endColumn":55},{"ruleId":"937","severity":1,"message":"956","line":69,"column":31,"nodeType":"939","messageId":"940","endLine":69,"endColumn":33},{"ruleId":"937","severity":1,"message":"938","line":82,"column":34,"nodeType":"939","messageId":"940","endLine":82,"endColumn":36},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"958","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":19},{"ruleId":"924","severity":1,"message":"959","line":159,"column":12,"nodeType":"926","messageId":"927","endLine":159,"endColumn":20},{"ruleId":"924","severity":1,"message":"960","line":159,"column":22,"nodeType":"926","messageId":"927","endLine":159,"endColumn":33},{"ruleId":"952","severity":1,"message":"953","line":261,"column":86,"nodeType":"954","messageId":"955","endLine":261,"endColumn":88},{"ruleId":"952","severity":1,"message":"953","line":289,"column":86,"nodeType":"954","messageId":"955","endLine":289,"endColumn":88},{"ruleId":"952","severity":1,"message":"953","line":317,"column":90,"nodeType":"954","messageId":"955","endLine":317,"endColumn":92},{"ruleId":"924","severity":1,"message":"961","line":68,"column":22,"nodeType":"926","messageId":"927","endLine":68,"endColumn":33},{"ruleId":"924","severity":1,"message":"962","line":41,"column":7,"nodeType":"926","messageId":"927","endLine":41,"endColumn":15},{"ruleId":"924","severity":1,"message":"963","line":24,"column":25,"nodeType":"926","messageId":"927","endLine":24,"endColumn":39},{"ruleId":"945","severity":1,"message":"946","line":37,"column":17,"nodeType":"947","endLine":37,"endColumn":85},{"ruleId":"928","replacedBy":"964"},{"ruleId":"930","replacedBy":"965"},{"ruleId":"924","severity":1,"message":"966","line":4,"column":9,"nodeType":"926","messageId":"927","endLine":4,"endColumn":13},{"ruleId":"924","severity":1,"message":"967","line":8,"column":8,"nodeType":"926","messageId":"927","endLine":8,"endColumn":27},{"ruleId":"924","severity":1,"message":"968","line":63,"column":7,"nodeType":"926","messageId":"927","endLine":63,"endColumn":25},{"ruleId":"924","severity":1,"message":"969","line":1,"column":31,"nodeType":"926","messageId":"927","endLine":1,"endColumn":35},{"ruleId":"924","severity":1,"message":"970","line":1,"column":37,"nodeType":"926","messageId":"927","endLine":1,"endColumn":48},{"ruleId":"924","severity":1,"message":"971","line":90,"column":7,"nodeType":"926","messageId":"927","endLine":90,"endColumn":16},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":156,"column":21,"nodeType":"947","endLine":156,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":160,"column":52,"nodeType":"939","messageId":"940","endLine":160,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":166,"column":52,"nodeType":"939","messageId":"940","endLine":166,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":170,"column":52,"nodeType":"939","messageId":"940","endLine":170,"endColumn":54},{"ruleId":"924","severity":1,"message":"971","line":72,"column":7,"nodeType":"926","messageId":"927","endLine":72,"endColumn":16},{"ruleId":"924","severity":1,"message":"966","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"933","severity":1,"message":"934","line":50,"column":8,"nodeType":"935","endLine":50,"endColumn":10,"suggestions":"973"},{"ruleId":"937","severity":1,"message":"938","line":55,"column":38,"nodeType":"939","messageId":"940","endLine":55,"endColumn":40},{"ruleId":"937","severity":1,"message":"938","line":70,"column":25,"nodeType":"939","messageId":"940","endLine":70,"endColumn":27},{"ruleId":"924","severity":1,"message":"974","line":81,"column":11,"nodeType":"926","messageId":"927","endLine":81,"endColumn":29},{"ruleId":"937","severity":1,"message":"938","line":91,"column":38,"nodeType":"939","messageId":"940","endLine":91,"endColumn":40},{"ruleId":"937","severity":1,"message":"938","line":100,"column":34,"nodeType":"939","messageId":"940","endLine":100,"endColumn":36},{"ruleId":"937","severity":1,"message":"938","line":123,"column":42,"nodeType":"939","messageId":"940","endLine":123,"endColumn":44},{"ruleId":"937","severity":1,"message":"956","line":137,"column":61,"nodeType":"939","messageId":"940","endLine":137,"endColumn":63},{"ruleId":"937","severity":1,"message":"938","line":140,"column":39,"nodeType":"939","messageId":"940","endLine":140,"endColumn":41},{"ruleId":"937","severity":1,"message":"938","line":169,"column":42,"nodeType":"939","messageId":"940","endLine":169,"endColumn":44},{"ruleId":"937","severity":1,"message":"938","line":195,"column":42,"nodeType":"939","messageId":"940","endLine":195,"endColumn":44},{"ruleId":"937","severity":1,"message":"938","line":206,"column":58,"nodeType":"939","messageId":"940","endLine":206,"endColumn":60},{"ruleId":"933","severity":1,"message":"975","line":230,"column":8,"nodeType":"935","endLine":230,"endColumn":10,"suggestions":"976"},{"ruleId":"937","severity":1,"message":"938","line":236,"column":50,"nodeType":"939","messageId":"940","endLine":236,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":251,"column":50,"nodeType":"939","messageId":"940","endLine":251,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":288,"column":77,"nodeType":"939","messageId":"940","endLine":288,"endColumn":79},{"ruleId":"937","severity":1,"message":"938","line":294,"column":77,"nodeType":"939","messageId":"940","endLine":294,"endColumn":79},{"ruleId":"937","severity":1,"message":"938","line":302,"column":69,"nodeType":"939","messageId":"940","endLine":302,"endColumn":71},{"ruleId":"924","severity":1,"message":"977","line":312,"column":12,"nodeType":"926","messageId":"927","endLine":312,"endColumn":28},{"ruleId":"924","severity":1,"message":"978","line":312,"column":30,"nodeType":"926","messageId":"927","endLine":312,"endColumn":49},{"ruleId":"933","severity":1,"message":"979","line":318,"column":8,"nodeType":"935","endLine":318,"endColumn":10,"suggestions":"980"},{"ruleId":"937","severity":1,"message":"938","line":325,"column":50,"nodeType":"939","messageId":"940","endLine":325,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":336,"column":50,"nodeType":"939","messageId":"940","endLine":336,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":344,"column":50,"nodeType":"939","messageId":"940","endLine":344,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":352,"column":46,"nodeType":"939","messageId":"940","endLine":352,"endColumn":48},{"ruleId":"981","severity":1,"message":"982","line":398,"column":13,"nodeType":"983","messageId":"940","endLine":398,"endColumn":38},{"ruleId":"937","severity":1,"message":"938","line":402,"column":69,"nodeType":"939","messageId":"940","endLine":402,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":146,"column":40,"nodeType":"939","messageId":"940","endLine":146,"endColumn":42},{"ruleId":"937","severity":1,"message":"956","line":146,"column":61,"nodeType":"939","messageId":"940","endLine":146,"endColumn":63},{"ruleId":"937","severity":1,"message":"938","line":152,"column":43,"nodeType":"939","messageId":"940","endLine":152,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":153,"column":43,"nodeType":"939","messageId":"940","endLine":153,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":3,"column":47,"nodeType":"939","messageId":"940","endLine":3,"endColumn":49},{"ruleId":"984","severity":1,"message":"985","line":3,"column":63,"nodeType":"939","messageId":"986","endLine":3,"endColumn":64},{"ruleId":"984","severity":1,"message":"985","line":3,"column":69,"nodeType":"939","messageId":"986","endLine":3,"endColumn":70},{"ruleId":"924","severity":1,"message":"987","line":23,"column":7,"nodeType":"926","messageId":"927","endLine":23,"endColumn":14},{"ruleId":"937","severity":1,"message":"938","line":30,"column":39,"nodeType":"939","messageId":"940","endLine":30,"endColumn":41},{"ruleId":"937","severity":1,"message":"938","line":95,"column":42,"nodeType":"939","messageId":"940","endLine":95,"endColumn":44},{"ruleId":"924","severity":1,"message":"988","line":154,"column":7,"nodeType":"926","messageId":"927","endLine":154,"endColumn":16},{"ruleId":"937","severity":1,"message":"938","line":239,"column":58,"nodeType":"939","messageId":"940","endLine":239,"endColumn":60},{"ruleId":"933","severity":1,"message":"989","line":244,"column":8,"nodeType":"935","endLine":244,"endColumn":10,"suggestions":"990"},{"ruleId":"937","severity":1,"message":"938","line":267,"column":48,"nodeType":"939","messageId":"940","endLine":267,"endColumn":50},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":155,"column":21,"nodeType":"947","endLine":155,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":159,"column":53,"nodeType":"939","messageId":"940","endLine":159,"endColumn":55},{"ruleId":"937","severity":1,"message":"938","line":165,"column":53,"nodeType":"939","messageId":"940","endLine":165,"endColumn":55},{"ruleId":"937","severity":1,"message":"938","line":171,"column":53,"nodeType":"939","messageId":"940","endLine":171,"endColumn":55},{"ruleId":"924","severity":1,"message":"971","line":59,"column":7,"nodeType":"926","messageId":"927","endLine":59,"endColumn":16},{"ruleId":"924","severity":1,"message":"991","line":177,"column":21,"nodeType":"926","messageId":"927","endLine":177,"endColumn":31},{"ruleId":"937","severity":1,"message":"938","line":198,"column":28,"nodeType":"939","messageId":"940","endLine":198,"endColumn":30},{"ruleId":"937","severity":1,"message":"938","line":63,"column":35,"nodeType":"939","messageId":"940","endLine":63,"endColumn":37},{"ruleId":"937","severity":1,"message":"938","line":66,"column":41,"nodeType":"939","messageId":"940","endLine":66,"endColumn":43},{"ruleId":"937","severity":1,"message":"938","line":68,"column":41,"nodeType":"939","messageId":"940","endLine":68,"endColumn":43},{"ruleId":"937","severity":1,"message":"938","line":70,"column":41,"nodeType":"939","messageId":"940","endLine":70,"endColumn":43},{"ruleId":"933","severity":1,"message":"934","line":59,"column":8,"nodeType":"935","endLine":59,"endColumn":10,"suggestions":"992"},{"ruleId":"937","severity":1,"message":"938","line":64,"column":38,"nodeType":"939","messageId":"940","endLine":64,"endColumn":40},{"ruleId":"933","severity":1,"message":"993","line":88,"column":7,"nodeType":"935","endLine":88,"endColumn":26,"suggestions":"994"},{"ruleId":"937","severity":1,"message":"938","line":96,"column":37,"nodeType":"939","messageId":"940","endLine":96,"endColumn":39},{"ruleId":"937","severity":1,"message":"938","line":99,"column":43,"nodeType":"939","messageId":"940","endLine":99,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":102,"column":43,"nodeType":"939","messageId":"940","endLine":102,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":113,"column":65,"nodeType":"939","messageId":"940","endLine":113,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":121,"column":65,"nodeType":"939","messageId":"940","endLine":121,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":131,"column":57,"nodeType":"939","messageId":"940","endLine":131,"endColumn":59},{"ruleId":"937","severity":1,"message":"938","line":133,"column":47,"nodeType":"939","messageId":"940","endLine":133,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":142,"column":25,"nodeType":"939","messageId":"940","endLine":142,"endColumn":27},{"ruleId":"937","severity":1,"message":"938","line":159,"column":49,"nodeType":"939","messageId":"940","endLine":159,"endColumn":51},{"ruleId":"937","severity":1,"message":"938","line":164,"column":54,"nodeType":"939","messageId":"940","endLine":164,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":167,"column":54,"nodeType":"939","messageId":"940","endLine":167,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":170,"column":54,"nodeType":"939","messageId":"940","endLine":170,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":173,"column":54,"nodeType":"939","messageId":"940","endLine":173,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":176,"column":54,"nodeType":"939","messageId":"940","endLine":176,"endColumn":56},{"ruleId":"924","severity":1,"message":"995","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"937","severity":1,"message":"938","line":16,"column":38,"nodeType":"939","messageId":"940","endLine":16,"endColumn":40},{"ruleId":"937","severity":1,"message":"938","line":22,"column":41,"nodeType":"939","messageId":"940","endLine":22,"endColumn":43},{"ruleId":"924","severity":1,"message":"996","line":10,"column":10,"nodeType":"926","messageId":"927","endLine":10,"endColumn":24},{"ruleId":"924","severity":1,"message":"997","line":10,"column":26,"nodeType":"926","messageId":"927","endLine":10,"endColumn":47},{"ruleId":"924","severity":1,"message":"998","line":11,"column":10,"nodeType":"926","messageId":"927","endLine":11,"endColumn":27},{"ruleId":"933","severity":1,"message":"934","line":34,"column":8,"nodeType":"935","endLine":34,"endColumn":10,"suggestions":"999"},{"ruleId":"937","severity":1,"message":"938","line":39,"column":38,"nodeType":"939","messageId":"940","endLine":39,"endColumn":40},{"ruleId":"924","severity":1,"message":"1000","line":54,"column":12,"nodeType":"926","messageId":"927","endLine":54,"endColumn":19},{"ruleId":"924","severity":1,"message":"1001","line":54,"column":21,"nodeType":"926","messageId":"927","endLine":54,"endColumn":31},{"ruleId":"924","severity":1,"message":"1002","line":61,"column":29,"nodeType":"926","messageId":"927","endLine":61,"endColumn":47},{"ruleId":"933","severity":1,"message":"993","line":95,"column":8,"nodeType":"935","endLine":95,"endColumn":27,"suggestions":"1003"},{"ruleId":"937","severity":1,"message":"938","line":102,"column":50,"nodeType":"939","messageId":"940","endLine":102,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":113,"column":50,"nodeType":"939","messageId":"940","endLine":113,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":122,"column":50,"nodeType":"939","messageId":"940","endLine":122,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":133,"column":46,"nodeType":"939","messageId":"940","endLine":133,"endColumn":48},{"ruleId":"937","severity":1,"message":"938","line":145,"column":46,"nodeType":"939","messageId":"940","endLine":145,"endColumn":48},{"ruleId":"937","severity":1,"message":"938","line":154,"column":50,"nodeType":"939","messageId":"940","endLine":154,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":163,"column":46,"nodeType":"939","messageId":"940","endLine":163,"endColumn":48},{"ruleId":"937","severity":1,"message":"938","line":189,"column":46,"nodeType":"939","messageId":"940","endLine":189,"endColumn":48},{"ruleId":"937","severity":1,"message":"938","line":213,"column":63,"nodeType":"939","messageId":"940","endLine":213,"endColumn":65},{"ruleId":"937","severity":1,"message":"938","line":241,"column":71,"nodeType":"939","messageId":"940","endLine":241,"endColumn":73},{"ruleId":"937","severity":1,"message":"938","line":254,"column":69,"nodeType":"939","messageId":"940","endLine":254,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":368,"column":42,"nodeType":"939","messageId":"940","endLine":368,"endColumn":44},{"ruleId":"1004","severity":1,"message":"1005","line":369,"column":76,"nodeType":"1006","messageId":"1007","endLine":369,"endColumn":103,"fix":"1008"},{"ruleId":"1004","severity":1,"message":"1009","line":381,"column":64,"nodeType":"1006","messageId":"1007","endLine":381,"endColumn":84,"fix":"1010"},{"ruleId":"937","severity":1,"message":"938","line":393,"column":65,"nodeType":"939","messageId":"940","endLine":393,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":426,"column":42,"nodeType":"939","messageId":"940","endLine":426,"endColumn":44},{"ruleId":"1004","severity":1,"message":"1005","line":427,"column":82,"nodeType":"1006","messageId":"1007","endLine":427,"endColumn":109,"fix":"1011"},{"ruleId":"1004","severity":1,"message":"1012","line":439,"column":70,"nodeType":"1006","messageId":"1007","endLine":439,"endColumn":84,"fix":"1013"},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"937","severity":1,"message":"938","line":18,"column":40,"nodeType":"939","messageId":"940","endLine":18,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":20,"column":47,"nodeType":"939","messageId":"940","endLine":20,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":44,"column":40,"nodeType":"939","messageId":"940","endLine":44,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":47,"column":47,"nodeType":"939","messageId":"940","endLine":47,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":49,"column":47,"nodeType":"939","messageId":"940","endLine":49,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":51,"column":47,"nodeType":"939","messageId":"940","endLine":51,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":75,"column":40,"nodeType":"939","messageId":"940","endLine":75,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":78,"column":47,"nodeType":"939","messageId":"940","endLine":78,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":80,"column":47,"nodeType":"939","messageId":"940","endLine":80,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":82,"column":47,"nodeType":"939","messageId":"940","endLine":82,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":127,"column":68,"nodeType":"939","messageId":"940","endLine":127,"endColumn":70},{"ruleId":"937","severity":1,"message":"938","line":128,"column":68,"nodeType":"939","messageId":"940","endLine":128,"endColumn":70},{"ruleId":"937","severity":1,"message":"938","line":129,"column":74,"nodeType":"939","messageId":"940","endLine":129,"endColumn":76},{"ruleId":"937","severity":1,"message":"938","line":143,"column":40,"nodeType":"939","messageId":"940","endLine":143,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":145,"column":47,"nodeType":"939","messageId":"940","endLine":145,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":179,"column":40,"nodeType":"939","messageId":"940","endLine":179,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":181,"column":47,"nodeType":"939","messageId":"940","endLine":181,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":205,"column":40,"nodeType":"939","messageId":"940","endLine":205,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":208,"column":47,"nodeType":"939","messageId":"940","endLine":208,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":210,"column":47,"nodeType":"939","messageId":"940","endLine":210,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":212,"column":47,"nodeType":"939","messageId":"940","endLine":212,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":236,"column":40,"nodeType":"939","messageId":"940","endLine":236,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":239,"column":47,"nodeType":"939","messageId":"940","endLine":239,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":241,"column":47,"nodeType":"939","messageId":"940","endLine":241,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":243,"column":47,"nodeType":"939","messageId":"940","endLine":243,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":267,"column":40,"nodeType":"939","messageId":"940","endLine":267,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":270,"column":47,"nodeType":"939","messageId":"940","endLine":270,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":272,"column":47,"nodeType":"939","messageId":"940","endLine":272,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":274,"column":47,"nodeType":"939","messageId":"940","endLine":274,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":298,"column":40,"nodeType":"939","messageId":"940","endLine":298,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":301,"column":47,"nodeType":"939","messageId":"940","endLine":301,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":303,"column":47,"nodeType":"939","messageId":"940","endLine":303,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":305,"column":47,"nodeType":"939","messageId":"940","endLine":305,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":329,"column":40,"nodeType":"939","messageId":"940","endLine":329,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":331,"column":47,"nodeType":"939","messageId":"940","endLine":331,"endColumn":49},{"ruleId":"924","severity":1,"message":"966","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"937","severity":1,"message":"938","line":120,"column":156,"nodeType":"939","messageId":"940","endLine":120,"endColumn":158},{"ruleId":"937","severity":1,"message":"938","line":124,"column":156,"nodeType":"939","messageId":"940","endLine":124,"endColumn":158},{"ruleId":"937","severity":1,"message":"938","line":128,"column":162,"nodeType":"939","messageId":"940","endLine":128,"endColumn":164},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":18},{"ruleId":"924","severity":1,"message":"941","line":1,"column":20,"nodeType":"926","messageId":"927","endLine":1,"endColumn":26},{"ruleId":"924","severity":1,"message":"925","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":13},{"ruleId":"933","severity":1,"message":"1015","line":89,"column":8,"nodeType":"935","endLine":89,"endColumn":25,"suggestions":"1016"},{"ruleId":"1017","severity":1,"message":"1018","line":265,"column":59,"nodeType":"939","messageId":"1019","endLine":265,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":272,"column":65,"nodeType":"939","messageId":"940","endLine":272,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":273,"column":79,"nodeType":"939","messageId":"940","endLine":273,"endColumn":81},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":18},{"ruleId":"924","severity":1,"message":"941","line":1,"column":20,"nodeType":"926","messageId":"927","endLine":1,"endColumn":26},{"ruleId":"924","severity":1,"message":"925","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":13},{"ruleId":"933","severity":1,"message":"1015","line":149,"column":8,"nodeType":"935","endLine":149,"endColumn":25,"suggestions":"1020"},{"ruleId":"1017","severity":1,"message":"1018","line":326,"column":59,"nodeType":"939","messageId":"1019","endLine":326,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":332,"column":65,"nodeType":"939","messageId":"940","endLine":332,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":333,"column":79,"nodeType":"939","messageId":"940","endLine":333,"endColumn":81},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"995","line":1,"column":8,"nodeType":"926","messageId":"927","endLine":1,"endColumn":14},{"ruleId":"924","severity":1,"message":"1021","line":16,"column":8,"nodeType":"926","messageId":"927","endLine":16,"endColumn":28},{"ruleId":"933","severity":1,"message":"1022","line":32,"column":8,"nodeType":"935","endLine":32,"endColumn":18,"suggestions":"1023"},{"ruleId":"933","severity":1,"message":"1024","line":68,"column":7,"nodeType":"935","endLine":68,"endColumn":21,"suggestions":"1025"},{"ruleId":"937","severity":1,"message":"938","line":79,"column":50,"nodeType":"939","messageId":"940","endLine":79,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":87,"column":50,"nodeType":"939","messageId":"940","endLine":87,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":105,"column":58,"nodeType":"939","messageId":"940","endLine":105,"endColumn":60},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":158,"column":21,"nodeType":"947","endLine":158,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":162,"column":52,"nodeType":"939","messageId":"940","endLine":162,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":168,"column":52,"nodeType":"939","messageId":"940","endLine":168,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":55,"column":55,"nodeType":"939","messageId":"940","endLine":55,"endColumn":57},{"ruleId":"937","severity":1,"message":"938","line":56,"column":66,"nodeType":"939","messageId":"940","endLine":56,"endColumn":68},{"ruleId":"937","severity":1,"message":"938","line":57,"column":66,"nodeType":"939","messageId":"940","endLine":57,"endColumn":68},{"ruleId":"937","severity":1,"message":"938","line":58,"column":70,"nodeType":"939","messageId":"940","endLine":58,"endColumn":72},{"ruleId":"937","severity":1,"message":"938","line":61,"column":41,"nodeType":"939","messageId":"940","endLine":61,"endColumn":43},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":21,"nodeType":"926","messageId":"927","endLine":1,"endColumn":29},{"ruleId":"924","severity":1,"message":"971","line":45,"column":7,"nodeType":"926","messageId":"927","endLine":45,"endColumn":16},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"995","line":1,"column":8,"nodeType":"926","messageId":"927","endLine":1,"endColumn":14},{"ruleId":"924","severity":1,"message":"941","line":2,"column":31,"nodeType":"926","messageId":"927","endLine":2,"endColumn":37},{"ruleId":"933","severity":1,"message":"993","line":46,"column":7,"nodeType":"935","endLine":46,"endColumn":17,"suggestions":"1026"},{"ruleId":"937","severity":1,"message":"938","line":55,"column":54,"nodeType":"939","messageId":"940","endLine":55,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":58,"column":58,"nodeType":"939","messageId":"940","endLine":58,"endColumn":60},{"ruleId":"924","severity":1,"message":"1027","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":53,"column":69,"nodeType":"939","messageId":"940","endLine":53,"endColumn":71},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"937","severity":1,"message":"938","line":18,"column":40,"nodeType":"939","messageId":"940","endLine":18,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":20,"column":47,"nodeType":"939","messageId":"940","endLine":20,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":44,"column":40,"nodeType":"939","messageId":"940","endLine":44,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":47,"column":47,"nodeType":"939","messageId":"940","endLine":47,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":49,"column":47,"nodeType":"939","messageId":"940","endLine":49,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":51,"column":47,"nodeType":"939","messageId":"940","endLine":51,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":75,"column":40,"nodeType":"939","messageId":"940","endLine":75,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":78,"column":47,"nodeType":"939","messageId":"940","endLine":78,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":80,"column":47,"nodeType":"939","messageId":"940","endLine":80,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":82,"column":47,"nodeType":"939","messageId":"940","endLine":82,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":107,"column":40,"nodeType":"939","messageId":"940","endLine":107,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":110,"column":47,"nodeType":"939","messageId":"940","endLine":110,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":112,"column":47,"nodeType":"939","messageId":"940","endLine":112,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":114,"column":47,"nodeType":"939","messageId":"940","endLine":114,"endColumn":49},{"ruleId":"924","severity":1,"message":"971","line":59,"column":7,"nodeType":"926","messageId":"927","endLine":59,"endColumn":16},{"ruleId":"924","severity":1,"message":"1028","line":142,"column":7,"nodeType":"926","messageId":"927","endLine":142,"endColumn":28},{"ruleId":"924","severity":1,"message":"991","line":177,"column":21,"nodeType":"926","messageId":"927","endLine":177,"endColumn":31},{"ruleId":"924","severity":1,"message":"1029","line":178,"column":19,"nodeType":"926","messageId":"927","endLine":178,"endColumn":27},{"ruleId":"924","severity":1,"message":"1030","line":179,"column":22,"nodeType":"926","messageId":"927","endLine":179,"endColumn":33},{"ruleId":"937","severity":1,"message":"938","line":198,"column":28,"nodeType":"939","messageId":"940","endLine":198,"endColumn":30},{"ruleId":"924","severity":1,"message":"1031","line":10,"column":8,"nodeType":"926","messageId":"927","endLine":10,"endColumn":21},{"ruleId":"924","severity":1,"message":"1032","line":11,"column":8,"nodeType":"926","messageId":"927","endLine":11,"endColumn":20},{"ruleId":"924","severity":1,"message":"1033","line":12,"column":8,"nodeType":"926","messageId":"927","endLine":12,"endColumn":20},{"ruleId":"933","severity":1,"message":"934","line":30,"column":8,"nodeType":"935","endLine":30,"endColumn":10,"suggestions":"1034"},{"ruleId":"937","severity":1,"message":"938","line":35,"column":38,"nodeType":"939","messageId":"940","endLine":35,"endColumn":40},{"ruleId":"924","severity":1,"message":"1035","line":46,"column":12,"nodeType":"926","messageId":"927","endLine":46,"endColumn":28},{"ruleId":"924","severity":1,"message":"1036","line":48,"column":12,"nodeType":"926","messageId":"927","endLine":48,"endColumn":28},{"ruleId":"933","severity":1,"message":"1037","line":64,"column":8,"nodeType":"935","endLine":64,"endColumn":18,"suggestions":"1038"},{"ruleId":"937","severity":1,"message":"938","line":71,"column":50,"nodeType":"939","messageId":"940","endLine":71,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":97,"column":50,"nodeType":"939","messageId":"940","endLine":97,"endColumn":52},{"ruleId":"937","severity":1,"message":"938","line":123,"column":42,"nodeType":"939","messageId":"940","endLine":123,"endColumn":44},{"ruleId":"937","severity":1,"message":"938","line":124,"column":38,"nodeType":"939","messageId":"940","endLine":124,"endColumn":40},{"ruleId":"1004","severity":1,"message":"1039","line":126,"column":68,"nodeType":"1006","messageId":"1007","endLine":126,"endColumn":100,"fix":"1040"},{"ruleId":"937","severity":1,"message":"938","line":127,"column":45,"nodeType":"939","messageId":"940","endLine":127,"endColumn":47},{"ruleId":"1004","severity":1,"message":"1039","line":129,"column":68,"nodeType":"1006","messageId":"1007","endLine":129,"endColumn":100,"fix":"1041"},{"ruleId":"937","severity":1,"message":"938","line":165,"column":58,"nodeType":"939","messageId":"940","endLine":165,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":170,"column":58,"nodeType":"939","messageId":"940","endLine":170,"endColumn":60},{"ruleId":"924","severity":1,"message":"1042","line":182,"column":23,"nodeType":"926","messageId":"927","endLine":182,"endColumn":45},{"ruleId":"1004","severity":1,"message":"1043","line":228,"column":52,"nodeType":"1006","messageId":"1007","endLine":228,"endColumn":71,"fix":"1044"},{"ruleId":"937","severity":1,"message":"938","line":231,"column":60,"nodeType":"939","messageId":"940","endLine":231,"endColumn":62},{"ruleId":"937","severity":1,"message":"938","line":241,"column":60,"nodeType":"939","messageId":"940","endLine":241,"endColumn":62},{"ruleId":"1004","severity":1,"message":"1043","line":266,"column":52,"nodeType":"1006","messageId":"1007","endLine":266,"endColumn":71,"fix":"1045"},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"924","severity":1,"message":"1046","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":19,"column":40,"nodeType":"939","messageId":"940","endLine":19,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":21,"column":47,"nodeType":"939","messageId":"940","endLine":21,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":45,"column":40,"nodeType":"939","messageId":"940","endLine":45,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":48,"column":47,"nodeType":"939","messageId":"940","endLine":48,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":50,"column":47,"nodeType":"939","messageId":"940","endLine":50,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":52,"column":47,"nodeType":"939","messageId":"940","endLine":52,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":76,"column":40,"nodeType":"939","messageId":"940","endLine":76,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":79,"column":47,"nodeType":"939","messageId":"940","endLine":79,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":81,"column":47,"nodeType":"939","messageId":"940","endLine":81,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":83,"column":47,"nodeType":"939","messageId":"940","endLine":83,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":107,"column":40,"nodeType":"939","messageId":"940","endLine":107,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":110,"column":47,"nodeType":"939","messageId":"940","endLine":110,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":112,"column":47,"nodeType":"939","messageId":"940","endLine":112,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":114,"column":47,"nodeType":"939","messageId":"940","endLine":114,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":139,"column":40,"nodeType":"939","messageId":"940","endLine":139,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":141,"column":47,"nodeType":"939","messageId":"940","endLine":141,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":165,"column":40,"nodeType":"939","messageId":"940","endLine":165,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":168,"column":47,"nodeType":"939","messageId":"940","endLine":168,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":170,"column":47,"nodeType":"939","messageId":"940","endLine":170,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":172,"column":47,"nodeType":"939","messageId":"940","endLine":172,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":197,"column":40,"nodeType":"939","messageId":"940","endLine":197,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":200,"column":47,"nodeType":"939","messageId":"940","endLine":200,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":202,"column":47,"nodeType":"939","messageId":"940","endLine":202,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":204,"column":47,"nodeType":"939","messageId":"940","endLine":204,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":228,"column":40,"nodeType":"939","messageId":"940","endLine":228,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":231,"column":47,"nodeType":"939","messageId":"940","endLine":231,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":233,"column":47,"nodeType":"939","messageId":"940","endLine":233,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":235,"column":47,"nodeType":"939","messageId":"940","endLine":235,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":289,"column":40,"nodeType":"939","messageId":"940","endLine":289,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":291,"column":47,"nodeType":"939","messageId":"940","endLine":291,"endColumn":49},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"924","severity":1,"message":"957","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":19},{"ruleId":"924","severity":1,"message":"1047","line":70,"column":7,"nodeType":"926","messageId":"927","endLine":70,"endColumn":20},{"ruleId":"1017","severity":1,"message":"1018","line":257,"column":59,"nodeType":"939","messageId":"1019","endLine":257,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":264,"column":65,"nodeType":"939","messageId":"940","endLine":264,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":265,"column":79,"nodeType":"939","messageId":"940","endLine":265,"endColumn":81},{"ruleId":"924","severity":1,"message":"957","line":13,"column":10,"nodeType":"926","messageId":"927","endLine":13,"endColumn":19},{"ruleId":"924","severity":1,"message":"1047","line":71,"column":7,"nodeType":"926","messageId":"927","endLine":71,"endColumn":20},{"ruleId":"1017","severity":1,"message":"1018","line":258,"column":59,"nodeType":"939","messageId":"1019","endLine":258,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":265,"column":65,"nodeType":"939","messageId":"940","endLine":265,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":266,"column":79,"nodeType":"939","messageId":"940","endLine":266,"endColumn":81},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"941","line":1,"column":31,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"995","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"924","severity":1,"message":"1048","line":17,"column":8,"nodeType":"926","messageId":"927","endLine":17,"endColumn":24},{"ruleId":"933","severity":1,"message":"1037","line":47,"column":8,"nodeType":"935","endLine":47,"endColumn":18,"suggestions":"1049"},{"ruleId":"937","severity":1,"message":"938","line":56,"column":50,"nodeType":"939","messageId":"940","endLine":56,"endColumn":52},{"ruleId":"924","severity":1,"message":"1050","line":66,"column":11,"nodeType":"926","messageId":"927","endLine":66,"endColumn":34},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":158,"column":21,"nodeType":"947","endLine":158,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":162,"column":52,"nodeType":"939","messageId":"940","endLine":162,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":130,"column":64,"nodeType":"939","messageId":"940","endLine":130,"endColumn":66},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":21,"nodeType":"926","messageId":"927","endLine":1,"endColumn":29},{"ruleId":"924","severity":1,"message":"971","line":49,"column":7,"nodeType":"926","messageId":"927","endLine":49,"endColumn":16},{"ruleId":"924","severity":1,"message":"1051","line":85,"column":7,"nodeType":"926","messageId":"927","endLine":85,"endColumn":22},{"ruleId":"924","severity":1,"message":"1052","line":93,"column":7,"nodeType":"926","messageId":"927","endLine":93,"endColumn":21},{"ruleId":"924","severity":1,"message":"1053","line":104,"column":7,"nodeType":"926","messageId":"927","endLine":104,"endColumn":19},{"ruleId":"924","severity":1,"message":"1054","line":226,"column":9,"nodeType":"926","messageId":"927","endLine":226,"endColumn":14},{"ruleId":"924","severity":1,"message":"995","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"933","severity":1,"message":"1037","line":50,"column":8,"nodeType":"935","endLine":50,"endColumn":18,"suggestions":"1055"},{"ruleId":"937","severity":1,"message":"938","line":100,"column":54,"nodeType":"939","messageId":"940","endLine":100,"endColumn":56},{"ruleId":"937","severity":1,"message":"938","line":103,"column":61,"nodeType":"939","messageId":"940","endLine":103,"endColumn":63},{"ruleId":"924","severity":1,"message":"1027","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":23},{"ruleId":"924","severity":1,"message":"1056","line":59,"column":7,"nodeType":"926","messageId":"927","endLine":59,"endColumn":17},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"1057","line":27,"column":7,"nodeType":"926","messageId":"927","endLine":27,"endColumn":22},{"ruleId":"1058","severity":1,"message":"1059","line":30,"column":1,"nodeType":"1060","endLine":57,"endColumn":3},{"ruleId":"924","severity":1,"message":"966","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"924","severity":1,"message":"995","line":4,"column":8,"nodeType":"926","messageId":"927","endLine":4,"endColumn":14},{"ruleId":"924","severity":1,"message":"1061","line":5,"column":10,"nodeType":"926","messageId":"927","endLine":5,"endColumn":19},{"ruleId":"924","severity":1,"message":"1062","line":6,"column":10,"nodeType":"926","messageId":"927","endLine":6,"endColumn":16},{"ruleId":"933","severity":1,"message":"934","line":26,"column":8,"nodeType":"935","endLine":26,"endColumn":18,"suggestions":"1063"},{"ruleId":"937","severity":1,"message":"938","line":31,"column":38,"nodeType":"939","messageId":"940","endLine":31,"endColumn":40},{"ruleId":"937","severity":1,"message":"938","line":62,"column":50,"nodeType":"939","messageId":"940","endLine":62,"endColumn":52},{"ruleId":"1004","severity":1,"message":"1064","line":112,"column":46,"nodeType":"1006","messageId":"1007","endLine":112,"endColumn":62,"fix":"1065"},{"ruleId":"937","severity":1,"message":"938","line":115,"column":56,"nodeType":"939","messageId":"940","endLine":115,"endColumn":58},{"ruleId":"937","severity":1,"message":"938","line":122,"column":54,"nodeType":"939","messageId":"940","endLine":122,"endColumn":56},{"ruleId":"1004","severity":1,"message":"1064","line":151,"column":46,"nodeType":"1006","messageId":"1007","endLine":151,"endColumn":62,"fix":"1066"},{"ruleId":"924","severity":1,"message":"1054","line":82,"column":9,"nodeType":"926","messageId":"927","endLine":82,"endColumn":14},{"ruleId":"937","severity":1,"message":"938","line":112,"column":72,"nodeType":"939","messageId":"940","endLine":112,"endColumn":74},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":18},{"ruleId":"924","severity":1,"message":"941","line":1,"column":20,"nodeType":"926","messageId":"927","endLine":1,"endColumn":26},{"ruleId":"924","severity":1,"message":"957","line":1,"column":28,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"925","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":13},{"ruleId":"937","severity":1,"message":"938","line":83,"column":154,"nodeType":"939","messageId":"940","endLine":83,"endColumn":156},{"ruleId":"1017","severity":1,"message":"1018","line":184,"column":59,"nodeType":"939","messageId":"1019","endLine":184,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":191,"column":65,"nodeType":"939","messageId":"940","endLine":191,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":192,"column":79,"nodeType":"939","messageId":"940","endLine":192,"endColumn":81},{"ruleId":"937","severity":1,"message":"938","line":26,"column":40,"nodeType":"939","messageId":"940","endLine":26,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":28,"column":47,"nodeType":"939","messageId":"940","endLine":28,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":52,"column":40,"nodeType":"939","messageId":"940","endLine":52,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":54,"column":47,"nodeType":"939","messageId":"940","endLine":54,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":79,"column":40,"nodeType":"939","messageId":"940","endLine":79,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":82,"column":47,"nodeType":"939","messageId":"940","endLine":82,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":84,"column":47,"nodeType":"939","messageId":"940","endLine":84,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":86,"column":47,"nodeType":"939","messageId":"940","endLine":86,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":110,"column":40,"nodeType":"939","messageId":"940","endLine":110,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":113,"column":47,"nodeType":"939","messageId":"940","endLine":113,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":115,"column":47,"nodeType":"939","messageId":"940","endLine":115,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":117,"column":47,"nodeType":"939","messageId":"940","endLine":117,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":142,"column":40,"nodeType":"939","messageId":"940","endLine":142,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":145,"column":47,"nodeType":"939","messageId":"940","endLine":145,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":147,"column":47,"nodeType":"939","messageId":"940","endLine":147,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":149,"column":47,"nodeType":"939","messageId":"940","endLine":149,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":18},{"ruleId":"924","severity":1,"message":"941","line":1,"column":20,"nodeType":"926","messageId":"927","endLine":1,"endColumn":26},{"ruleId":"924","severity":1,"message":"957","line":1,"column":28,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"925","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":13},{"ruleId":"937","severity":1,"message":"938","line":83,"column":154,"nodeType":"939","messageId":"940","endLine":83,"endColumn":156},{"ruleId":"1017","severity":1,"message":"1018","line":184,"column":59,"nodeType":"939","messageId":"1019","endLine":184,"endColumn":60},{"ruleId":"937","severity":1,"message":"938","line":191,"column":65,"nodeType":"939","messageId":"940","endLine":191,"endColumn":67},{"ruleId":"937","severity":1,"message":"938","line":192,"column":79,"nodeType":"939","messageId":"940","endLine":192,"endColumn":81},{"ruleId":"924","severity":1,"message":"941","line":1,"column":31,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"995","line":2,"column":8,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"924","severity":1,"message":"1054","line":20,"column":9,"nodeType":"926","messageId":"927","endLine":20,"endColumn":14},{"ruleId":"937","severity":1,"message":"938","line":53,"column":50,"nodeType":"939","messageId":"940","endLine":53,"endColumn":52},{"ruleId":"924","severity":1,"message":"1067","line":62,"column":11,"nodeType":"926","messageId":"927","endLine":62,"endColumn":31},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"945","severity":1,"message":"946","line":158,"column":21,"nodeType":"947","endLine":158,"endColumn":71},{"ruleId":"937","severity":1,"message":"938","line":162,"column":52,"nodeType":"939","messageId":"940","endLine":162,"endColumn":54},{"ruleId":"937","severity":1,"message":"938","line":168,"column":52,"nodeType":"939","messageId":"940","endLine":168,"endColumn":54},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":21,"nodeType":"926","messageId":"927","endLine":1,"endColumn":29},{"ruleId":"924","severity":1,"message":"1051","line":77,"column":7,"nodeType":"926","messageId":"927","endLine":77,"endColumn":22},{"ruleId":"924","severity":1,"message":"1052","line":85,"column":7,"nodeType":"926","messageId":"927","endLine":85,"endColumn":21},{"ruleId":"924","severity":1,"message":"1053","line":96,"column":7,"nodeType":"926","messageId":"927","endLine":96,"endColumn":19},{"ruleId":"924","severity":1,"message":"1068","line":104,"column":7,"nodeType":"926","messageId":"927","endLine":104,"endColumn":19},{"ruleId":"924","severity":1,"message":"1069","line":110,"column":7,"nodeType":"926","messageId":"927","endLine":110,"endColumn":15},{"ruleId":"924","severity":1,"message":"1070","line":122,"column":7,"nodeType":"926","messageId":"927","endLine":122,"endColumn":17},{"ruleId":"924","severity":1,"message":"1071","line":135,"column":7,"nodeType":"926","messageId":"927","endLine":135,"endColumn":21},{"ruleId":"924","severity":1,"message":"1072","line":169,"column":7,"nodeType":"926","messageId":"927","endLine":169,"endColumn":21},{"ruleId":"924","severity":1,"message":"1073","line":218,"column":7,"nodeType":"926","messageId":"927","endLine":218,"endColumn":15},{"ruleId":"924","severity":1,"message":"1074","line":225,"column":7,"nodeType":"926","messageId":"927","endLine":225,"endColumn":14},{"ruleId":"924","severity":1,"message":"1075","line":228,"column":7,"nodeType":"926","messageId":"927","endLine":228,"endColumn":14},{"ruleId":"924","severity":1,"message":"1054","line":262,"column":9,"nodeType":"926","messageId":"927","endLine":262,"endColumn":14},{"ruleId":"924","severity":1,"message":"1076","line":263,"column":9,"nodeType":"926","messageId":"927","endLine":263,"endColumn":21},{"ruleId":"937","severity":1,"message":"938","line":48,"column":41,"nodeType":"939","messageId":"940","endLine":48,"endColumn":43},{"ruleId":"924","severity":1,"message":"941","line":1,"column":31,"nodeType":"926","messageId":"927","endLine":1,"endColumn":37},{"ruleId":"924","severity":1,"message":"995","line":3,"column":8,"nodeType":"926","messageId":"927","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"1077","line":46,"column":8,"nodeType":"935","endLine":46,"endColumn":18,"suggestions":"1078"},{"ruleId":"937","severity":1,"message":"938","line":54,"column":50,"nodeType":"939","messageId":"940","endLine":54,"endColumn":52},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"1014","line":1,"column":21,"nodeType":"926","messageId":"927","endLine":1,"endColumn":29},{"ruleId":"924","severity":1,"message":"966","line":2,"column":10,"nodeType":"926","messageId":"927","endLine":2,"endColumn":14},{"ruleId":"924","severity":1,"message":"1046","line":4,"column":8,"nodeType":"926","messageId":"927","endLine":4,"endColumn":19},{"ruleId":"924","severity":1,"message":"1079","line":5,"column":10,"nodeType":"926","messageId":"927","endLine":5,"endColumn":25},{"ruleId":"924","severity":1,"message":"1080","line":6,"column":10,"nodeType":"926","messageId":"927","endLine":6,"endColumn":23},{"ruleId":"924","severity":1,"message":"1027","line":7,"column":8,"nodeType":"926","messageId":"927","endLine":7,"endColumn":23},{"ruleId":"924","severity":1,"message":"1081","line":36,"column":27,"nodeType":"926","messageId":"927","endLine":36,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":36,"column":104,"nodeType":"939","messageId":"940","endLine":36,"endColumn":106},{"ruleId":"924","severity":1,"message":"1082","line":37,"column":24,"nodeType":"926","messageId":"927","endLine":37,"endColumn":39},{"ruleId":"937","severity":1,"message":"938","line":37,"column":98,"nodeType":"939","messageId":"940","endLine":37,"endColumn":100},{"ruleId":"952","severity":1,"message":"953","line":51,"column":57,"nodeType":"954","messageId":"955","endLine":51,"endColumn":59},{"ruleId":"952","severity":1,"message":"953","line":73,"column":54,"nodeType":"954","messageId":"955","endLine":73,"endColumn":56},{"ruleId":"924","severity":1,"message":"971","line":59,"column":7,"nodeType":"926","messageId":"927","endLine":59,"endColumn":16},{"ruleId":"924","severity":1,"message":"991","line":177,"column":21,"nodeType":"926","messageId":"927","endLine":177,"endColumn":31},{"ruleId":"937","severity":1,"message":"938","line":198,"column":28,"nodeType":"939","messageId":"940","endLine":198,"endColumn":30},{"ruleId":"924","severity":1,"message":"972","line":6,"column":5,"nodeType":"926","messageId":"927","endLine":6,"endColumn":17},{"ruleId":"937","severity":1,"message":"938","line":167,"column":57,"nodeType":"939","messageId":"940","endLine":167,"endColumn":59},{"ruleId":"937","severity":1,"message":"938","line":173,"column":57,"nodeType":"939","messageId":"940","endLine":173,"endColumn":59},{"ruleId":"937","severity":1,"message":"938","line":177,"column":57,"nodeType":"939","messageId":"940","endLine":177,"endColumn":59},{"ruleId":"945","severity":1,"message":"946","line":184,"column":21,"nodeType":"947","endLine":184,"endColumn":71},{"ruleId":"924","severity":1,"message":"1083","line":5,"column":8,"nodeType":"926","messageId":"927","endLine":5,"endColumn":18},{"ruleId":"924","severity":1,"message":"1084","line":9,"column":10,"nodeType":"926","messageId":"927","endLine":9,"endColumn":31},{"ruleId":"924","severity":1,"message":"971","line":59,"column":7,"nodeType":"926","messageId":"927","endLine":59,"endColumn":16},{"ruleId":"924","severity":1,"message":"957","line":4,"column":10,"nodeType":"926","messageId":"927","endLine":4,"endColumn":19},{"ruleId":"924","severity":1,"message":"1085","line":10,"column":7,"nodeType":"926","messageId":"927","endLine":10,"endColumn":14},{"ruleId":"924","severity":1,"message":"1086","line":15,"column":7,"nodeType":"926","messageId":"927","endLine":15,"endColumn":16},{"ruleId":"924","severity":1,"message":"1087","line":27,"column":7,"nodeType":"926","messageId":"927","endLine":27,"endColumn":13},{"ruleId":"924","severity":1,"message":"1088","line":80,"column":7,"nodeType":"926","messageId":"927","endLine":80,"endColumn":14},{"ruleId":"924","severity":1,"message":"1089","line":83,"column":12,"nodeType":"926","messageId":"927","endLine":83,"endColumn":21},{"ruleId":"924","severity":1,"message":"1090","line":84,"column":12,"nodeType":"926","messageId":"927","endLine":84,"endColumn":26},{"ruleId":"924","severity":1,"message":"1091","line":85,"column":12,"nodeType":"926","messageId":"927","endLine":85,"endColumn":24},{"ruleId":"937","severity":1,"message":"938","line":125,"column":60,"nodeType":"939","messageId":"940","endLine":125,"endColumn":62},{"ruleId":"937","severity":1,"message":"938","line":126,"column":71,"nodeType":"939","messageId":"940","endLine":126,"endColumn":73},{"ruleId":"937","severity":1,"message":"938","line":127,"column":71,"nodeType":"939","messageId":"940","endLine":127,"endColumn":73},{"ruleId":"937","severity":1,"message":"938","line":128,"column":75,"nodeType":"939","messageId":"940","endLine":128,"endColumn":77},{"ruleId":"937","severity":1,"message":"938","line":130,"column":46,"nodeType":"939","messageId":"940","endLine":130,"endColumn":48},{"ruleId":"924","severity":1,"message":"957","line":1,"column":10,"nodeType":"926","messageId":"927","endLine":1,"endColumn":19},{"ruleId":"924","severity":1,"message":"966","line":2,"column":9,"nodeType":"926","messageId":"927","endLine":2,"endColumn":13},{"ruleId":"924","severity":1,"message":"1061","line":4,"column":21,"nodeType":"926","messageId":"927","endLine":4,"endColumn":30},{"ruleId":"937","severity":1,"message":"956","line":80,"column":68,"nodeType":"939","messageId":"940","endLine":80,"endColumn":70},{"ruleId":"937","severity":1,"message":"956","line":84,"column":68,"nodeType":"939","messageId":"940","endLine":84,"endColumn":70},{"ruleId":"1092","severity":1,"message":"1093","line":97,"column":33,"nodeType":"947","endLine":97,"endColumn":70},{"ruleId":"924","severity":1,"message":"1014","line":7,"column":10,"nodeType":"926","messageId":"927","endLine":7,"endColumn":18},{"ruleId":"937","severity":1,"message":"938","line":21,"column":43,"nodeType":"939","messageId":"940","endLine":21,"endColumn":45},{"ruleId":"937","severity":1,"message":"938","line":62,"column":40,"nodeType":"939","messageId":"940","endLine":62,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":64,"column":47,"nodeType":"939","messageId":"940","endLine":64,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":88,"column":40,"nodeType":"939","messageId":"940","endLine":88,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":91,"column":47,"nodeType":"939","messageId":"940","endLine":91,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":93,"column":47,"nodeType":"939","messageId":"940","endLine":93,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":95,"column":47,"nodeType":"939","messageId":"940","endLine":95,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":120,"column":40,"nodeType":"939","messageId":"940","endLine":120,"endColumn":42},{"ruleId":"937","severity":1,"message":"938","line":123,"column":47,"nodeType":"939","messageId":"940","endLine":123,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":125,"column":47,"nodeType":"939","messageId":"940","endLine":125,"endColumn":49},{"ruleId":"937","severity":1,"message":"938","line":127,"column":47,"nodeType":"939","messageId":"940","endLine":127,"endColumn":49},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1094"],"no-negated-in-lhs",["1095"],"'$' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCheckLoged'. Either include it or remove the dependency array.","ArrayExpression",["1096"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'setCookie' is defined but never used.","'LineBreaker1' is assigned a value but never used.","'Slider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ContainerSubTitle' is assigned a value but never used.","'CardBox' is assigned a value but never used.","'CardImg' is assigned a value but never used.","'DescBox' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'propTypes' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setLinkList' is assigned a value but never used.","'ButtonEl' is assigned a value but never used.","'setCompanyInfo' is assigned a value but never used.",["1094"],["1095"],"'Link' is defined but never used.","'IntroduceTopLayout2' is defined but never used.","'IntroduceBodyTitle' is assigned a value but never used.","'memo' is defined but never used.","'useCallback' is defined but never used.","'ExplainEl' is assigned a value but never used.","'faCaretRight' is defined but never used.",["1097"],"'handleLogoutSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handleVideoDataConnect'. Either include it or remove the dependency array.",["1098"],"'popupImageUpload' is assigned a value but never used.","'setPopupImageUpload' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handlePopupDataConnect'. Either include it or remove the dependency array.",["1099"],"no-dupe-keys","Duplicate key 'addPopupDataOnValueChange'.","ObjectExpression","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","'ItemBox' is assigned a value but never used.","'ItemTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'floatVideoCloseCookie'. Either include it or remove the dependency array.",["1100"],"'setAddress' is assigned a value but never used.",["1101"],"React Hook useEffect has a missing dependency: '__handleDataConnect'. Either include it or remove the dependency array.",["1102"],"'styled' is defined but never used.","'dateToYYYYMMDD' is defined but never used.","'dateToYYYYMMDD_hhmmss' is defined but never used.","'handleScrollToTop' is defined but never used.",["1103"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setAddCategoryName' is assigned a value but never used.",["1104"],"no-useless-computed-key","Unnecessarily computed property ['imageUrl'] found.","Property","unnecessarilyComputedProperty",{"range":"1105","text":"1106"},"Unnecessarily computed property ['editorData'] found.",{"range":"1107","text":"1108"},{"range":"1109","text":"1106"},"Unnecessarily computed property ['desc'] found.",{"range":"1110","text":"1111"},"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleScrollToMe'. Either include it or remove the dependency array.",["1112"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["1113"],"'CategoryNavComponent' is defined but never used.","React Hook useEffect has a missing dependency: 'query.pageIndex'. Either include it or remove the dependency array.",["1114"],"React Hook useEffect has a missing dependency: 'handleSetSelectedCategory'. Either include it or remove the dependency array.",["1115"],["1116"],"'CkeditorModules' is defined but never used.","'ApplicationDatePicker' is assigned a value but never used.","'setFloor' is assigned a value but never used.","'setOpenDate' is assigned a value but never used.","'AreaComponent' is defined but never used.","'AddAreaModal' is defined but never used.","'FixAreaModal' is defined but never used.",["1117"],"'addAreaModalOpen' is assigned a value but never used.","'fixAreaModalOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handleStoreDataConnect'. Either include it or remove the dependency array.",["1118"],"Unnecessarily computed property ['storeImageUrl'] found.",{"range":"1119","text":"1120"},{"range":"1121","text":"1120"},"'handleAreaEventControl' is assigned a value but never used.","Unnecessarily computed property ['storeDesc'] found.",{"range":"1122","text":"1123"},{"range":"1124","text":"1123"},"'queryString' is defined but never used.","'custom_config' is assigned a value but never used.","'AreaNavComponent' is defined but never used.",["1125"],"'handleStoreEventControl' is assigned a value but never used.","'ProductImageBox' is assigned a value but never used.","'ProductImageEl' is assigned a value but never used.","'ProductImage' is assigned a value but never used.","'query' is assigned a value but never used.",["1126"],"'ExplainEl2' is assigned a value but never used.","'CkeditorModules' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'getCookie' is defined but never used.","'uuidv4' is defined but never used.",["1127"],"Unnecessarily computed property ['csDesc'] found.",{"range":"1128","text":"1129"},{"range":"1130","text":"1129"},"'handleCsEventControl' is assigned a value but never used.","'ImageWrapper' is assigned a value but never used.","'ImageBox' is assigned a value but never used.","'ContentBox' is assigned a value but never used.","'ContentAddress' is assigned a value but never used.","'ContentWrapper' is assigned a value but never used.","'TableBox' is assigned a value but never used.","'TableTh' is assigned a value but never used.","'TableTd' is assigned a value but never used.","'browserWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: '__handleCsDataConnect'. Either include it or remove the dependency array.",["1131"],"'FontAwesomeIcon' is defined but never used.","'faExclamation' is defined but never used.","'setCsImportantList' is assigned a value but never used.","'setCsCommonList' is assigned a value but never used.","'DatePicker' is defined but never used.","'counselingDataConnect' is defined but never used.","'Wrapper' is assigned a value but never used.","'GridGroup' is assigned a value but never used.","'GridEl' is assigned a value but never used.","'numbers' is assigned a value but never used.","'scrollVal' is assigned a value but never used.","'startScrollVal' is assigned a value but never used.","'endScrollVal' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"1132","fix":"1133"},{"desc":"1132","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1132","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1132","fix":"1144"},{"desc":"1142","fix":"1145"},[14106,14118],"'imageUrl'",[14456,14470],"'editorData'",[16505,16517],[16864,16872],"'desc'",{"desc":"1146","fix":"1147"},{"desc":"1146","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1132","fix":"1155"},{"desc":"1156","fix":"1157"},[4952,4969],"'storeImageUrl'",[5182,5199],[9012,9025],"'storeDesc'",[10715,10728],{"desc":"1156","fix":"1158"},{"desc":"1156","fix":"1159"},{"desc":"1160","fix":"1161"},[3873,3883],"'csDesc'",[5567,5577],{"desc":"1162","fix":"1163"},"Update the dependencies array to be: [handleCheckLoged]",{"range":"1164","text":"1165"},{"range":"1166","text":"1165"},"Update the dependencies array to be: [__handleVideoDataConnect]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [__handlePopupDataConnect]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [floatVideoCloseCookie]",{"range":"1171","text":"1172"},{"range":"1173","text":"1165"},"Update the dependencies array to be: [__handleDataConnect, isLoged, location]",{"range":"1174","text":"1175"},{"range":"1176","text":"1165"},{"range":"1177","text":"1175"},"Update the dependencies array to be: [handleScrollToMe, props.modalOpen]",{"range":"1178","text":"1179"},{"range":"1180","text":"1179"},"Update the dependencies array to be: [location, query.pageIndex]",{"range":"1181","text":"1182"},"Update the dependencies array to be: [categoryList, handleSetSelectedCategory]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [__handleDataConnect, location]",{"range":"1185","text":"1186"},{"range":"1187","text":"1165"},"Update the dependencies array to be: [__handleStoreDataConnect, location]",{"range":"1188","text":"1189"},{"range":"1190","text":"1189"},{"range":"1191","text":"1189"},"Update the dependencies array to be: [handleCheckLoged, location]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [__handleCsDataConnect, location]",{"range":"1194","text":"1195"},[712,714],"[handleCheckLoged]",[1409,1411],[7704,7706],"[__handleVideoDataConnect]",[11361,11363],"[__handlePopupDataConnect]",[6579,6581],"[floatVideoCloseCookie]",[1467,1469],[2260,2279],"[__handleDataConnect, isLoged, location]",[1190,1192],[3228,3247],[2139,2156],"[handleScrollToMe, props.modalOpen]",[4867,4884],[1117,1127],"[location, query.pageIndex]",[2122,2136],"[categoryList, handleSetSelectedCategory]",[1427,1437],"[__handleDataConnect, location]",[983,985],[2266,2276],"[__handleStoreDataConnect, location]",[1483,1493],[1432,1442],[847,857],"[handleCheckLoged, location]",[1395,1405],"[__handleCsDataConnect, location]"]