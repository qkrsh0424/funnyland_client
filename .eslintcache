[{"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js":"1","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js":"2","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js":"3","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js":"4","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js":"5","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js":"6","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js":"7","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js":"8","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js":"9","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js":"10","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js":"11","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js":"12","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js":"13","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js":"14","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js":"15","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js":"16","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js":"17","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js":"18","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js":"19","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js":"20","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js":"21","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js":"22","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js":"23","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js":"24","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js":"25","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js":"26","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js":"27","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js":"28","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js":"29","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js":"30","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js":"31","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js":"32","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js":"33","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js":"34","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js":"35","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js":"36","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js":"37","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js":"38","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js":"39","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js":"40","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js":"41","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js":"42","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js":"43","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js":"44","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js":"45","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js":"46","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js":"47","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js":"48","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js":"49"},{"size":670,"mtime":1612407882854,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":4390,"mtime":1614156652093,"results":"53","hashOfConfig":"51"},{"size":723,"mtime":1612407882726,"results":"54","hashOfConfig":"51"},{"size":2854,"mtime":1612772389276,"results":"55","hashOfConfig":"51"},{"size":3427,"mtime":1614228500519,"results":"56","hashOfConfig":"51"},{"size":1612,"mtime":1614058291805,"results":"57","hashOfConfig":"51"},{"size":5462,"mtime":1614240565053,"results":"58","hashOfConfig":"51"},{"size":5975,"mtime":1614060286111,"results":"59","hashOfConfig":"51"},{"size":7708,"mtime":1614228882755,"results":"60","hashOfConfig":"51"},{"size":95,"mtime":1613540029246,"results":"61","hashOfConfig":"51"},{"size":6392,"mtime":1614240923137,"results":"62","hashOfConfig":"51"},{"size":6400,"mtime":1614243809977,"results":"63","hashOfConfig":"51"},{"size":1362,"mtime":1614238934550,"results":"64","hashOfConfig":"51"},{"size":586,"mtime":1612417471208,"results":"65","hashOfConfig":"51"},{"size":6407,"mtime":1614234966570,"results":"66","hashOfConfig":"51"},{"size":7743,"mtime":1614238804140,"results":"67","hashOfConfig":"51"},{"size":4545,"mtime":1614232510582,"results":"68","hashOfConfig":"51"},{"size":15213,"mtime":1614236264870,"results":"69","hashOfConfig":"51"},{"size":1556,"mtime":1612511260961,"results":"70","hashOfConfig":"51"},{"size":4589,"mtime":1613445554670,"results":"71","hashOfConfig":"51"},{"size":8081,"mtime":1613455097215,"results":"72","hashOfConfig":"51"},{"size":4984,"mtime":1612866471017,"results":"73","hashOfConfig":"51"},{"size":1227,"mtime":1613465917115,"results":"74","hashOfConfig":"51"},{"size":1803,"mtime":1612865302982,"results":"75","hashOfConfig":"51"},{"size":7950,"mtime":1614240590249,"results":"76","hashOfConfig":"51"},{"size":10618,"mtime":1614239686272,"results":"77","hashOfConfig":"51"},{"size":4395,"mtime":1614232532158,"results":"78","hashOfConfig":"51"},{"size":11984,"mtime":1614057157593,"results":"79","hashOfConfig":"51"},{"size":2774,"mtime":1613540770196,"results":"80","hashOfConfig":"51"},{"size":9532,"mtime":1614060492508,"results":"81","hashOfConfig":"51"},{"size":2165,"mtime":1613545528358,"results":"82","hashOfConfig":"51"},{"size":2099,"mtime":1614130025986,"results":"83","hashOfConfig":"51"},{"size":19019,"mtime":1614132476668,"results":"84","hashOfConfig":"51"},{"size":2567,"mtime":1614062326420,"results":"85","hashOfConfig":"51"},{"size":11935,"mtime":1614158249868,"results":"86","hashOfConfig":"51"},{"size":2784,"mtime":1614063576570,"results":"87","hashOfConfig":"51"},{"size":10005,"mtime":1614132084956,"results":"88","hashOfConfig":"51"},{"size":10297,"mtime":1614227967671,"results":"89","hashOfConfig":"51"},{"size":11290,"mtime":1614227940596,"results":"90","hashOfConfig":"51"},{"size":2703,"mtime":1614062970655,"results":"91","hashOfConfig":"51"},{"size":2955,"mtime":1614131366156,"results":"92","hashOfConfig":"51"},{"size":5022,"mtime":1614148149321,"results":"93","hashOfConfig":"51"},{"size":4415,"mtime":1614232520433,"results":"94","hashOfConfig":"51"},{"size":2310,"mtime":1614145904140,"results":"95","hashOfConfig":"51"},{"size":5243,"mtime":1614156629192,"results":"96","hashOfConfig":"51"},{"size":2941,"mtime":1614148395406,"results":"97","hashOfConfig":"51"},{"size":3574,"mtime":1614159147828,"results":"98","hashOfConfig":"51"},{"size":2619,"mtime":1614238561112,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"1a97x7k",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"103"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"103"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"103"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"103"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"103"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":4,"source":"182","usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"103"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"103"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"103"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"103"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"103"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"103"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"103"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"103"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"103"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"103"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/index.js",["223"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport axios from 'axios';\n// axios.defaults.xsrfCookieName='XSRF-TOKEN';\n// axios.defaults.xsrfHeaderName='X-XSRF-TOKEN';\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["224","225"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/reportWebVitals.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/App.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/CookieHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/login/LoginMain.js",["226","227","228"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport $ from 'jquery';\nimport {getCookie} from '../../../handler/CookieHandler';\nimport { useEffect, useState } from 'react';\nconst Container = styled.div`\n    height:100vh;\n    padding:100px 8px;\n`;\n\nconst PageTitle = styled.div`\n    text-align:center;\n    font-size:24px;\n    font-weight:700;\n\n`;\n\nconst LoginMain = ({history}) =>{\n    const [username,setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [notLoged, setNotLoged] = useState(true);\n    useEffect(()=>{\n        console.log('em')\n        async function effectInit(){\n            await handleCheckLoged();\n        }\n        effectInit();\n    },[]);\n\n    const handleCheckLoged = async () =>{\n        await axios.get('/api/auth/check/loged')\n        .then(res=>{\n            if(res.data.message == 'success' ){\n                history.push('/admin')\n                return;\n            }else{\n                setNotLoged(false);\n            }\n        })\n    }\n\n    const handleRequestLogin = (e) =>{\n        e.preventDefault();\n        axios.post('/api/auth/login',{\n                username:username,\n                password:password\n            },\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n        .then(res=>{\n            history.push('/admin')\n        })\n    }\n\n    const loginValueChange = () =>{\n        return{\n            username: function(e){\n                setUsername(e.target.value)\n            },\n            password: function(e){\n                setPassword(e.target.value)\n            }\n        }\n    }\n    return(\n        <Container className='container'>\n            {notLoged ? <></>:\n                <>\n                    <PageTitle>관리자 페이지 로그인</PageTitle>\n                    <form onSubmit={(e)=>handleRequestLogin(e)}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_username\">관리자 아이디</label>\n                            <input type=\"text\" className=\"form-control\" id=\"i_admin_username\" aria-describedby=\"emailHelp\" onChange={(e)=>loginValueChange().username(e)} value={username}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"i_admin_password\">관리자 패스워드</label>\n                            <input type=\"password\" className=\"form-control\" id=\"i_admin_password\" onChange={(e)=>loginValueChange().password(e)} value={password}/>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">로그인</button>\n                    </form>\n                </>\n            }\n            \n        </Container>\n    );\n}\n\nexport default LoginMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/HomeMain.js",["229","230"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/BannerCarouselFullSize.js",["231","232"],"import styled from 'styled-components';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst Container = styled.div`\n    .thumbs { \n        text-align: center;\n    }\n    .slide .pcy-banner-image{\n        max-height:900px;\n        object-fit: cover;\n    }\n    // 이미지 크기 최적화 사이즈 1920x850\n    @media only screen and (max-width: 768px){\n        .slide .pcy-banner-image{\n            height:45vh;\n            object-fit: cover;\n        }\n    }\n`;\n\nconst BannerCarouselFullSize = (props) => {\n    const {\n        banners\n    } = props;\n    return (\n        <Container>\n            <Carousel\n                autoPlay={true}\n                interval={4000}\n                infiniteLoop={true}\n                dynamicHeight={true}\n                showIndicators={true}\n                showThumbs={false}\n                showStatus={true}\n                stopOnHover={false}\n                transitionTime={1000}\n            >\n                {\n                    banners.length>0 && banners.map((r)=>{\n                        return(\n                            <div key={r.id}>\n                                <img className=\"pcy-banner-image\" src={r.imageUrl} />\n                            </div>        \n                        )\n                    })\n                }\n                \n            </Carousel>\n        </Container>\n    )\n}\n\nexport default BannerCarouselFullSize;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/OpenStore.js",["233","234"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ApplyFormModal.js",["235","236"],"import { useState } from 'react';\nimport styled from 'styled-components';\n\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\n\n// data connect\nimport { counselingDataConnect } from '../../data_connect/CounselingDataConnect';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\nconst ApplyFormModal = (props) => {\n    const {\n        dialogOpen\n    } = props;\n\n    const {\n        mainHandleDialogControl\n    } = props;\n\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [privacyAgreeChecked, setPrivacyAgreeChecked] = useState(false);\n\n    const thisHandleValueOnChange = () => {\n        return {\n            changeCounselingType: function(e){\n                setCounselingType(e.target.value);\n            },\n            changeApplierName: function (e) {\n                setApplierName(e.target.value);\n            },\n            changeApplierPhone: function (e) {\n                setApplierPhone(e.target.value);\n            },\n            changeApplierArea: function (e) {\n                setApplierArea(e.target.value);\n            },\n            changePrivacyAreeChecked: function(e){\n                setPrivacyAgreeChecked(e.target.checked);\n            },\n            allClear: function () {\n                setApplierName('');\n                setApplierPhone('');\n                setApplierArea('');\n                setPrivacyAgreeChecked(false);\n            }\n        }\n    }\n\n    const thisHandleClose = () => {\n        mainHandleDialogControl().close();\n        thisHandleValueOnChange().allClear();\n    }\n\n    const thisHandleFormSubmit = async (e) => {\n        e.preventDefault();\n        if(privacyAgreeChecked!=true){\n            alert('개인정보 수집 동의에 체크해주세요');\n            return;\n        }\n        let jsonData = {\n            counselingType:counselingType,\n            applierName: applierName,\n            applierPhone: applierPhone,\n            applierArea: applierArea,\n            privacyAgreement:privacyAgreeChecked?'동의':'비동의'\n        };\n        await counselingDataConnect().insertCounselingOne(jsonData)\n            .then(data => {\n                if (data.message == 'success') {\n                    alert('상담이 신청되었습니다.');\n                    thisHandleClose();\n                }\n            });\n    }\n\n    return (\n        <Dialog\n            fullWidth={true}\n            open={dialogOpen}\n            onClose={thisHandleClose}\n        >\n            <DialogTitle className='text-center'>{\"신속한 상담신청\"}</DialogTitle>\n            <form onSubmit={(e) => thisHandleFormSubmit(e)}>\n                <DialogContent>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"i_counseling_type\">상담구분</label>\n                        <select className=\"form-control\" defaultValue={counselingType} onChange={(e)=>thisHandleValueOnChange().changeCounselingType(e)}>\n                            <option value='counseling'>창업상담</option>\n                            <option value='purchase'>상품구매상담</option>\n                            <option value='closed'>폐업상담</option>\n                            <option value='renewal'>매장리뉴얼상담</option>\n                        </select>\n                        {/* <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeCounselingType(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" /> */}\n                    </div>\n                    <div className=\"form-group\">\n                        <label>이름</label>\n                        <input type=\"text\" value={applierName} onChange={(e) => thisHandleValueOnChange().changeApplierName(e)} className=\"form-control\" placeholder=\"이름을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>연락처</label>\n                        <input type=\"text\" value={applierPhone} onChange={(e) => thisHandleValueOnChange().changeApplierPhone(e)} className=\"form-control\" placeholder=\"'-' 를 제외한 연락처를 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>희망지역 or 상품설치지역</label>\n                        <input type=\"text\" value={applierArea} onChange={(e) => thisHandleValueOnChange().changeApplierArea(e)} className=\"form-control\" placeholder=\"지역을 입력해주세요.\" required=\"required\" />\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" checked={privacyAgreeChecked} onChange={(e)=>thisHandleValueOnChange().changePrivacyAreeChecked(e)} required/>\n                        <label className=\"form-check-label\">\n                            개인정보 수집 동의\n                        </label>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button type='button' onClick={thisHandleClose} color=\"secondary\">\n                        취소\n                    </Button>\n                    <Button type='submit' color=\"primary\">\n                        문의등록\n                    </Button>\n                </DialogActions>\n            </form>\n\n        </Dialog>\n    )\n}\nApplyFormModal.defaultProps = {\n}\nexport default ApplyFormModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/ProductList.js",["237","238","239"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/ScrollHandler.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarDynamic.js",["240"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/navbar/NavbarBottomFixed.js",["241"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/footer_offer/FooterDefault.js",["242"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/data_connect/CounselingDataConnect.js",[],["243","244"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro1/IntroduceIntro1Main.js",["245","246"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro3/IntroduceIntro3Main.js",["247","248","249"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/layout/IntroduceTopLayout.js",["250","251","252","253","254"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/IntroduceIntro2Main.js",["255"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/introduce/intro2/CompanyHistoryPresent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/loading/FullPageLoading.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminHomeMain.js",["256","257","258","259","260","261","262","263","264","265","266","267","268"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { uuidv4 } from '../../../../handler/MyHandlers';\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport AdminBannerManage from './AdminBannerManage';\n// data connector\nimport { bannerDataConnect } from '../../../data_connect/BannerDataConnect';\n\nconst Container = styled.div`\noverflow:hidden;\n`;\n\nconst FullPageLoading = styled.div`\n    position:fixed;\n    height:100%;\n    width:100%;\n    z-index:1999;\n    background-color:#80808050;\n`;\n\nconst FullPageLoadingSpinner = styled.div`\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n`;\n\nconst AdminHomeMain = ({history}) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [bannerListLoading, setBannerListLoading] = useState(true);\n    const [bannerList, setBannerList] = useState([]);\n    useEffect(()=>{\n        \n        async function effectInit() {\n            if(isLoged==false){\n                return;\n            }\n            await handleGetBanners();\n        }\n        effectInit();\n    },[isLoged])\n\n    const [uploadFile, setUploadFile] = useState([]);\n    const [fullPageLoading, setFullPageLoading] = useState(false);\n\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    // history.push('/');\n                }\n            })\n    }\n\n    const handleGetBanners = async () =>{\n        await bannerDataConnect().searchBanners()\n        .then(data=>{\n            if(data.message=='success'){\n                setBannerList(data.data);\n            }\n        })\n        setBannerListLoading(false);\n    }\n\n    const handleBannerImage = () => {\n        return {\n            uploaderOpen: function(){\n                document.getElementById('i_banner_uploadfile').click();\n            },\n            upToServer: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await bannerDataConnect().imageUploadToS3(fd).then(data => {\n                        document.getElementById('i_banner_uploadfile').value = '';\n                        if (data.message == 'success') {\n                            setUploadFile([\n                                ...uploadFile,\n                                {\n                                    uuid: uuidv4(),\n                                    imageUrl: data.imageUrl\n                                }\n                            ])\n                        }\n                    });\n                    setFullPageLoading(false);\n                }\n            },\n            deleteImage: function (uuid) {\n                setUploadFile(uploadFile.filter(r => r.uuid != uuid));\n            },\n            submitBanner: async function () {\n                if(uploadFile.length==0){\n                    return;\n                }\n                setFullPageLoading(true);\n                await bannerDataConnect().insertBanners(uploadFile)\n                .then(data=>{\n                    setUploadFile([]);\n                });\n                await handleGetBanners();\n                setFullPageLoading(false);\n            },\n            moveLeft: async function(index){\n                if(index <= 0){\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let prev = bannerList[index-1];\n                \n                newList[index] = prev;\n                newList[index-1] = curr;\n                newList.forEach((r,index)=>{\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                .then(data=>{\n                    console.log(data);\n                    if(data.message=='success'){\n                        handleGetBanners();\n                        setBannerListLoading(false);\n                    }else{\n                        alert('undefined error');\n                    }\n                });\n                setFullPageLoading(false);\n            },\n            moveRight: async function(index){\n                if(index >= bannerList.length-1){\n                    return;\n                }\n                setFullPageLoading(true);\n                let newList = bannerList;\n                let curr = bannerList[index];\n                let next = bannerList[index+1];\n                \n                newList[index] = next;\n                newList[index+1] = curr;\n                newList.forEach((r,index)=>{\n                    r.order = index;\n                })\n                setBannerList(newList);\n                await bannerDataConnect().updateBanners(bannerList)\n                .then(data=>{\n                    if(data.message=='success'){\n                        handleGetBanners();\n                        setBannerListLoading(false);\n                    }else{\n                        alert('undefined error');\n                    }\n                });\n                setFullPageLoading(false);\n            },\n            deleteBanner: async function(id){\n                setFullPageLoading(true);\n                let banner = bannerList.filter(r=>r.id==id)[0];\n                await bannerDataConnect().deleteBanner(banner)\n                .then(data=>{\n                    // console.log(data);\n                })\n                await handleGetBanners();\n                setFullPageLoading(false);\n            }\n        }\n    }\n\n    const testConsole = () =>{\n        console.log(bannerList);\n    }\n    return (\n        isLoged ?\n            (\n                <Container>\n                    {fullPageLoading ? \n                        <FullPageLoading>\n                            <FullPageLoadingSpinner>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </FullPageLoadingSpinner>\n                        </FullPageLoading>\n                        :\n                        \"\"\n                    }\n                    <AdminNav></AdminNav>\n                    <button onClick={testConsole}>con</button>\n                    <AdminBannerManage\n                        uploadFile={uploadFile}\n                        bannerListLoading={bannerListLoading}\n                        bannerList = {bannerList}\n\n                        handleBannerImage={handleBannerImage}\n                    >\n\n                    </AdminBannerManage>\n                </Container>\n            ) :\n            (\n                <></>\n            )\n    );\n}\n\nexport default AdminHomeMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_home/AdminBannerManage.js",["269","270","271","272"],"import styled from 'styled-components';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faTimes,\n    faChevronLeft,\n    faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n\n    width:80%;\n    margin: 0 10%;\n    padding:40px 0;\n`;\n\nconst ImageButton = styled.button`\n    background:white;\n    padding:20px;\n    border:1px solid #333;\n    border-radius:15px;\n    white-space:normal;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageListWrapper = styled.div`\n    margin:15px 0;\n    height:220px;\n    padding:10px;\n    border:1px solid #f1f1f1;\n    overflow-x:scroll;\n    white-space: nowrap;\n`;\n\n\nconst ImageEl = styled.img`\n    width:384px;\n    height:170px;\n    margin:0 5px;\n    object-fit:cover;\n`;\n\nconst ImageDeleteBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:50%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:60px;\n    height:60px;\n`;\n\nconst ImageLeftBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:10%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageRightBtn = styled.button`\n    display:none;\n    position:absolute;\n    top:50%;\n    left:90%;\n    transform:translate(-50%,-50%);\n    background:none;\n    border-radius:50%;\n    border:1px solid black;\n    width:50px;\n    height:50px;\n    &:hover{\n        background:#80808030;\n    }\n`;\n\nconst ImageBox = styled.div`\n    position:relative;\n    display:inline;\n    &:hover{\n        ${ImageEl}{\n            opacity:0.3;\n        }\n        ${ImageDeleteBtn}{\n            display:block;\n            color:black;\n        }\n        ${ImageDeleteBtn}:hover{\n            background-color:#ff0000a1;\n        }\n        ${ImageRightBtn}, ${ImageLeftBtn}{\n            display:block;\n            color:black;\n        }\n    }\n`;\n\nconst CurrentBannerListLoaderWrapper = styled.div`\n    text-align:center;\n    \n`;\nconst AdminBannerManage = (props) =>{\n    const {\n        uploadFile,\n        bannerListLoading,\n        bannerList\n    } = props;\n\n    const {\n        handleBannerImage\n    } = props;\n    return(\n        <Container>\n            <div>\n                <h4>배너 등록</h4>\n                <input type='file' id='i_banner_uploadfile' accept=\"image/*\" onChange={(e)=>handleBannerImage().upToServer(e)} hidden/>\n                <ImageButton type=\"button\" onClick={()=>handleBannerImage().uploaderOpen()}>이미지 업로드<br/>1920x850 권장</ImageButton>\n                <ImageListWrapper>\n                    {uploadFile.map(data=>{\n                        return(\n                            <ImageBox key={data.uuid}>\n                                <ImageEl src={data.imageUrl}></ImageEl>\n                                <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteImage(data.uuid)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                            </ImageBox>\n                        )\n                    })}\n                    \n                </ImageListWrapper>\n                <button className='btn btn-primary' onClick={()=>handleBannerImage().submitBanner()}>배너로 등록하기</button>\n            </div>\n            <hr/>\n            <div>\n                <h4>현재 배너 리스트</h4>\n                <ImageListWrapper>\n                    {bannerListLoading ==false && bannerList!=[]? \n                        bannerList.map((data,index)=>{\n                            return(\n                                <ImageBox key={data.id}>\n                                    <ImageEl src={data.imageUrl}></ImageEl>\n                                    <ImageDeleteBtn type=\"button\" onClick={()=>handleBannerImage().deleteBanner(data.id)}><FontAwesomeIcon icon={faTimes}></FontAwesomeIcon></ImageDeleteBtn>\n                                    {index==0?'':<ImageLeftBtn onClick={()=>handleBannerImage().moveLeft(index)}><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon></ImageLeftBtn>}\n                                    {index==bannerList.length-1?'':<ImageRightBtn onClick={()=>handleBannerImage().moveRight(index)}><FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon></ImageRightBtn>}\n                                </ImageBox>\n                            );\n                        })\n                        :\n                        <CurrentBannerListLoaderWrapper>\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </CurrentBannerListLoaderWrapper>\n                    }\n                </ImageListWrapper>\n            </div>\n        </Container>\n    );\n}\n\nexport default AdminBannerManage;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/handler/MyHandlers.js",["273","274","275"],"function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nfunction dateToYYYYMMDD(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2)\n        month = '0' + month;\n    if (day.length < 2)\n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nfunction dateToYYYYMMDD_hhmmss(date) {\n    function leadingZeros(n, digits) {\n        var zero = '';\n        n = n.toString();\n\n        if (n.length < digits) {\n            for (let i = 0; i < digits - n.length; i++)\n                zero += '0';\n        }\n        return zero + n;\n    }\n    var d = new Date(date);\n    var s =\n        leadingZeros(d.getFullYear(), 4) + '-' +\n        leadingZeros(d.getMonth() + 1, 2) + '-' +\n        leadingZeros(d.getDate(), 2) + ' ' +\n\n        leadingZeros(d.getHours(), 2) + ':' +\n        leadingZeros(d.getMinutes(), 2) + ':' +\n        leadingZeros(d.getSeconds(), 2);\n\n    return s;\n}\nexport {\n    uuidv4,\n    dateToYYYYMMDD,\n    dateToYYYYMMDD_hhmmss\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/BannerDataConnect.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/home/YoutubePlayPart.js",["276","277","278","279"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro1/FoundIntro1Main.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/layout/FoundTopLayout.js",["280","281","282","283"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/found/intro2/FoundIntro2Main.js",["284","285"],"import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// DatePicker\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n// data connector\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport FoundTopLayout from '../layout/FoundTopLayout';\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\nconst Container = styled.div`\n\n`;\n\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ApplicationContainer = styled.div`\n    margin-bottom:150px;\n    .react-datepicker-wrapper{\n        width:100%;\n    }\n`;\n\nconst ApplicationInput = styled.input`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst ApplicationSelect = styled.select`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationTextarea = styled.textarea`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    min-height:150px;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\n\nconst ApplicationSubmitBtn = styled.button`\n    font-weight:600;\n    color:white;\n    background-color:#f7734a;\n    border:1px solid white;\n    box-shadow: 0 0 11px rgba(33,33,33,.4);\n    padding:15px 70px;\n    border-radius:5px;\n    &:hover{\n        border:1px solid white;\n        background-color:#ee5470;\n        color:white;\n        box-shadow: 0 0 31px rgba(33,33,33,.4);\n    }\n`;\n\nconst ApplicationDatePicker = styled(DatePicker)`\n    -webkit-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -moz-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -ms-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    -o-transition: box-shadow 0.30s, border-color 0.30s ease-in-out;\n    width:100%;\n    padding: 8px 12px;\n    border:1px solid #d1d1d1;\n    border-radius:2px;\n    &:focus{\n        outline: none;\n        box-shadow: 0 0 5px #f8bac9;\n        border: 1px solid #f8bac9;\n    }\n`;\nconst FoundIntro2Main = () => {\n    useEffect(() => {\n        handleScrollToTop();\n    }, []);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n    const [counselingType, setCounselingType] = useState('counseling');\n    const [applierName, setApplierName] = useState('');\n    const [applierPhone, setApplierPhone] = useState('');\n    const [applierArea, setApplierArea] = useState('');\n    const [address, setAddress] = useState('');\n    const [floor, setFloor] = useState('');\n    const [openDate, setOpenDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [privacyAgreement, setPrivacyAgreement] = useState(false);\n\n    const handleApplicationSubmit = async (event) =>{\n        event.preventDefault();\n        let json = {\n            'counselingType':counselingType,\n            'applierName':applierName,\n            'applierPhone':applierPhone,\n            'applierArea':applierArea,\n            'address':address,\n            'floor':floor,\n            'openDate':openDate,\n            'desc':desc,\n            'privacyAgreement':privacyAgreement ? '동의' : '비동의'\n        }\n        await counselingDataConnect().insertCounselingOne(json)\n        .then(data=>{\n            if(data.message=='success'){\n                alert('상담이 신청되었습니다.');\n                window.location.reload();\n            }\n        })\n        console.log(json);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <FoundTopLayout\n                title={'창업상담신청'}\n                linkPage={'intro2'}\n            ></FoundTopLayout>\n            {/* BODY START */}\n            <>\n                <Container>\n                    <MainTitleBox>\n                        <MainTitle>\n                            FRANCHISE INQUIRY\n                        </MainTitle>\n                        <MainTitleSub>창업상담신청</MainTitleSub>\n                        <LineBreaker1></LineBreaker1>\n                    </MainTitleBox>\n                    <ApplicationContainer className='container'>\n                        <form onSubmit={(e)=>handleApplicationSubmit(e)}>\n                            <div className='clearfix'>\n                                <p className='float-right'><span className='text-danger'>*</span> 는 필수 선택입니다.</p>\n                            </div>\n                            <div className='row'>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>상담구분 <span className='text-danger'>*</span></label>\n                                    <ApplicationSelect defaultValue={counselingType} onChange={(e)=>setCounselingType(e.target.value)} disabled>\n                                        <option value='counseling'>창업상담</option>\n                                        <option value='purchase'>상품구매상담</option>\n                                    </ApplicationSelect>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>이름 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierName' placeholder='이름을 입력해주세요.' value={applierName} onChange={(e)=>setApplierName(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-6 mt-2 mb-2'>\n                                    <label className='pl-1'>연락처 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierPhone' placeholder=\"'-'를 제외한 연락처를 입력해주세요.\" value={applierPhone} onChange={(e)=>setApplierPhone(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-12 mt-2 mb-2'>\n                                    <label className='pl-1'>주소</label>\n                                    <ApplicationInput type='text' name='address' placeholder='주소를 입력해주세요.' value={address} onChange={(e)=>setAddress(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망지역 <span className='text-danger'>*</span></label>\n                                    <ApplicationInput type='text' name='applierArea' placeholder='희망지역을 입력해주세요.' value={applierArea} onChange={(e)=>setApplierArea(e.target.value)} required></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>층수</label>\n                                    <ApplicationInput type='text' name='floor' placeholder='점포 층수를 입력해주세요.' value={floor} onChange={(e)=>setFloor(e.target.value)}></ApplicationInput>\n                                </div>\n                                <div className='col-sm-4 mt-2 mb-2'>\n                                    <label className='pl-1'>희망오픈일</label>\n                                    <ApplicationDatePicker \n                                        dateFormat=\"yyyy년 MM월 dd일\"\n                                        placeholderText=\"희망오픈일 선택\"\n                                        selected={openDate} onChange={date=>setOpenDate(date)} strictParsing></ApplicationDatePicker>\n                                </div>\n                                <div className='col-sm-12 mt-2 mb-2'>\n                                    <label className='pl-1'>내용</label>\n                                    <ApplicationTextarea placeholder='기타 전하실 말씀을 입력해주시면 원할한 상담에 도움이 됩니다.' name='desc' value={desc} onChange={(e)=>setDesc(e.target.value)}></ApplicationTextarea>\n                                </div>\n                            </div>\n                            <div className='mt-2 mb-2 form-check'>\n                                <p>개인정보 수집 동의 <span className='text-danger'>*</span></p>\n                                <input type=\"checkbox\" checked={privacyAgreement} name='privacyAgreement' onChange={(e)=>setPrivacyAgreement(!privacyAgreement)} required></input>\n                                <label className='pl-3'>동의합니다.</label>\n                            </div>\n                            <div className='text-center mt-3'>\n                                <ApplicationSubmitBtn type='submit'>신청하기</ApplicationSubmitBtn>\n                            </div>\n                            \n                        </form>\n                    </ApplicationContainer>\n                </Container>\n            </>\n            {/* BODY END */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default FoundIntro2Main;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/CounselingDataConnect.js",["286","287","288","289"],"import axios from 'axios';\nimport {getCookie} from '../../handler/CookieHandler';\nimport queryString from 'query-string';\n\nconst counselingDataConnect = () =>{\n    return{\n        searchCounselingAll: async function(){\n            let query = queryString.parse(window.location.search);\n            return await axios.get('/api/search/counseling/all',{\n                params:{\n                    pageIndex:query.pageIndex ? query.pageIndex-1 : 0\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Error code : 405')\n                }\n            });\n        },\n        insertCounselingOne: async function(data){\n            return await axios.post('/api/insert/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 405');\n                }\n            })\n        },\n        updateCounselingOne: async function(data){\n            return await axios.post('/api/update/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>res.data)\n            .catch(err=>{\n                if(err){\n                    alert('Errer code : 500');\n                }\n            })\n        },\n        deleteCounselingOne: async function(data){\n            return await axios.post('/api/delete/counseling/one',data,{\n                headers:{\n                    'X-XSRF-TOKEN':getCookie('XSTO')\n                }\n            })\n            .then(res=>{\n                if(res && res.data){\n                    return res.data\n                }else{\n                    return null;\n                }\n            })\n            .catch(err=>{\n                if(err){\n                    let res = err.response;\n                    if(res.status == 401){\n                        alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                        window.location.href='/login';\n                    }else if(res.status == 403){\n                        alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                    }else if(res.status == 405){\n                        alert('Errer code : 405, not allowed');\n                    }else if(res.status == 500){\n                        alert('Errer code : 500, Internal Server Error');\n                    }else{\n                        alert('undefined error');\n                    }\n                }\n            })\n        }\n    }\n}\n\nexport {\n    counselingDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/AdminCounselingMain.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"import { useEffect ,useState } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// data connect\nimport {counselingDataConnect} from '../../../data_connect/CounselingDataConnect';\n\n// handler\nimport {dateToYYYYMMDD,dateToYYYYMMDD_hhmmss} from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport PageableComponent from './PageableComponent';\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    /* padding:2%; */\n`;\n\nconst ListWrapper = styled.div`\n    position:relative;\n    border:1px solid #a1a1a1;\n    border-radius:5px;\n    padding:8px;\n    margin: 15px 0;\n`;\n\nconst ListWrapperBlind = styled.div`\n    position:absolute;\n    left:0;\n    top:50px;\n    width:100%;\n    height:calc(100% - 50px);\n    background-color:#91919180;\n    background: repeating-linear-gradient(45deg, #44444430, #44444430 10px, #88888830 0, #88888830 20px);\n    z-index:2;\n`;\n\nconst ListTextField = styled.div`\n    font-size:12px;\n    font-weight:600;\n    padding:5px;\n    border-bottom:1px dotted #818181;\n    /* border-radius:3px; */\n`;\n\nconst AdminCounselingMain = ({match,location,history}) =>{\n    \n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n    \n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n\n    const [counselingData, setCounselingData] = useState(null);\n    const [counselingPage, setCounselingPage] = useState(null);\n\n    useEffect(()=>{\n        async function fetchInit() {\n            if(isLoged){\n                await __handleDataConnect().getCounselingList();\n                handleScrollToTop();\n                // console.log('heoo')\n            }\n        }\n\n        fetchInit();\n        \n    },[isLoged, location])\n\n    const __handleDataConnect = () =>{\n        return {\n            getCounselingList : async function(){\n                let data = await counselingDataConnect().searchCounselingAll();\n                // console.log(data);\n                if(data){\n                    if(data.message == 'success'){\n                        setCounselingData(data.data);\n                        setCounselingPage(data.page);\n                    }else if(data.message == 'not_auth'){\n                        alert('관리자 권한이 없습니다.');\n                        history.push('/');\n                    }else if(data.message == 'user_invalid'){\n                        alert('로그인 세션이 만료되었습니다.');\n                        history.push('/admin');\n                    }\n                }else{\n                    alert('undefined error');\n                }\n            },\n            setCounselingAdminCheck: function(){\n                return {\n                    setCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 1;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    },\n                    setUnCheck: async function(id){\n                        let data = counselingData.filter(r=>r.id==id)[0];\n                        data.adminChecked = 0;\n                        let resData = await counselingDataConnect().updateCounselingOne(data);\n                        if(resData){\n                            await __handleDataConnect().getCounselingList();\n                        }\n                    }\n                }\n            },\n            deleteCounselingOne: async function(id){\n                let data = counselingData.filter(r=>r.id==id)[0];\n                let resData = await counselingDataConnect().deleteCounselingOne(data);\n                if(resData && resData.message == 'success'){\n                    alert('삭제되었습니다.');\n                    await __handleDataConnect().getCounselingList();\n                }\n            }\n        }\n    }\n\n    const AdminCheckBtnProp = (props) =>{\n        if(props.checked==0){\n            return <button className='btn btn-sm btn-outline-danger' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setCheck(props.id)}>미확인</button>\n        }else{\n            return <button className='btn btn-sm btn-outline-primary' onClick={()=>__handleDataConnect().setCounselingAdminCheck().setUnCheck(props.id)}>확인됨</button>\n        }\n    }\n\n    return(\n        isLoged? \n        <>\n            <Container>\n                <AdminNav></AdminNav>\n                <ListContainer className='container-fluid'>\n                    {counselingPage && counselingData ? counselingData.map((r,index)=>{\n                        let itemIndex = counselingPage.displaySize*(counselingPage.curr-1)+index+1;\n                        return(\n                            <ListWrapper key={`${r.id}-${itemIndex}`}>\n                                {r.adminChecked == 1 ? <ListWrapperBlind></ListWrapperBlind> : ''}\n                                <ListTextField>\n                                    <span style={{padding:'0 5px'}}>\n                                        {itemIndex}-{r.id}\n                                    </span>\n                                    {r.counselingType=='counseling'?\n                                        <span style={{padding:'0 5px', color:'#6060d4'}}>가맹상담</span>\n                                    :''}\n                                    {r.counselingType=='purchase'?\n                                        <span style={{padding:'0 5px', color:'#29b529'}}>상품상담</span>\n                                    :''}\n                                    {r.counselingType=='closed'?\n                                        <span style={{padding:'0 5px', color:'#e25555'}}>폐업상담</span>\n                                    :''}\n                                    {r.counselingType=='renewal'?\n                                        <span style={{padding:'0 5px', color:'#c31ec3'}}>리뉴얼상담</span>\n                                    :''}\n                                    <span style={{padding:'0 5px'}}>\n                                        <AdminCheckBtnProp \n                                            id={r.id}\n                                            checked={r.adminChecked}\n                                        >\n                                        </AdminCheckBtnProp>\n                                    </span>\n                                    {r.adminChecked ? <span style={{padding:'0 5px'}}><button className='btn btn-sm btn-danger' onClick={()=>__handleDataConnect().deleteCounselingOne(r.id)}>삭제</button></span> :''}\n                                </ListTextField>\n                                <div className='row'>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>상담 등록일 : {dateToYYYYMMDD_hhmmss(r.createdAt)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>신청자 : {r.applierName}</ListTextField>\n                                        <ListTextField>전화번호 : {r.applierPhone}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>희망지역 : {r.applierArea}</ListTextField>\n                                        <ListTextField>주소 : {r.address}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-4'>\n                                        <ListTextField>점포층수 : {r.floor}</ListTextField>\n                                        <ListTextField>오픈예정일 : {r.openDate == null? '' : dateToYYYYMMDD(r.openDate)}</ListTextField>\n                                    </div>\n                                    <div className='col-sm-12'>\n                                        <ListTextField>\n                                            <div>기타문의내용</div>\n                                            <div>{r.desc}</div>\n                                        </ListTextField>\n                                    </div>\n                                </div>\n                                \n                            </ListWrapper>\n                        )\n                    })\n                    :\n                    <></>\n                    }\n                </ListContainer>\n                {counselingPage ? <PageableComponent\n                    defaultUrl={'/admin/counseling'}\n                    pageData={counselingPage}\n                ></PageableComponent>\n                :<></>}\n                \n            </Container>\n        </>\n        :\n        <></>\n    );\n}\n\nexport default AdminCounselingMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_nav/AdminNav.js",["306","307"],"import axios from 'axios';\nimport styled from 'styled-components';\nimport { getCookie } from '../../../../handler/CookieHandler';\nimport { Link } from 'react-router-dom';\nconst AdminNav = () =>{\n    const handleLogoutSubmit = (e) => {\n        e.preventDefault();\n        axios.post('/api/auth/logout', {},\n            {\n                headers: {\n                    \"X-XSRF-TOKEN\": getCookie('XSTO')\n                }\n            }\n        )\n            .then(res => {\n                if (res.data.message == 'success') {\n                    window.location.href='/'\n                }\n            })\n    }\n\n    return(\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/admin\">관리자 페이지</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>홈</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/counseling'>상담신청 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/'>매장 안내 관리</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/admin/product'>상품 안내 관리</Link>\n                    </li>\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e) => handleLogoutSubmit(e)}>\n                    <button type='submit' className='btn btn-outline-danger'>로그아웃</button>\n                </form>\n            </div>\n        </nav>\n    );\n}\n\nexport default AdminNav;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_counseling/PageableComponent.js",["308"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nconst Container = styled.div`\n`;\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:props.defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.prev}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${r.defaultUrl}?pageIndex=${r.pageNum}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${props.defaultUrl}?pageIndex=${props.pageData.next}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AdminProductMain.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336"],"import { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// handler\nimport { dateToYYYYMMDD, dateToYYYYMMDD_hhmmss } from '../../../../handler/MyHandlers';\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// components\nimport AdminNav from '../admin_nav/AdminNav';\nimport CategoryComponent from './CategoryComponent';\nimport AddCategoryModal from './AddCategoryModal';\nimport FixCategoryModal from './FixCategoryModal';\nimport ProductComponent from './ProductComponent';\nimport AddProductModal from './AddProductModal';\nimport UpdateProductModal from './UpdateProductModal';\n\nconst Container = styled.div`\n    margin-bottom:150px;\n`;\nconst AdminProductMain = ({ history, match, location }) => {\n    // Login Check Start\n    const [isLoged, setIsLoged] = useState(false);\n    useEffect(() => {\n        async function effectInit() {\n            await handleCheckLoged();\n        }\n        effectInit();\n    }, []);\n\n    const handleCheckLoged = async () => {\n        await axios.get('/api/auth/check/loged')\n            .then(res => {\n                if (res.data.message == 'success') {\n                    setIsLoged(true);\n                    return;\n                } else {\n                    history.push('/login')\n                }\n            });\n    }\n    // Login Check End\n    const addProductImageUploaderRef = useRef();\n    const addProductFieldRef = useRef();\n\n    const updateProductImageUploaderRef = useRef();\n    const updateProductFieldRef = useRef();\n\n    const [loading, setLoading] = useState(false);\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [addCategoryModalOpen, setAddCategoryModalOpen] = useState(false);\n    const [addCategoryName, setAddCategoryName] = useState(null);\n    const [addCategoryData, setAddCategoryData] = useState({\n        categoryName: '',\n        priority: 9999\n    })\n\n    const [fixCategoryModalOpen, setFixCategoryModalOpen] = useState(false);\n    const [fixCategoryData, setFixCategoryData] = useState(null)\n\n    const [addProductModalOpen, setAddProductModalOpen] = useState(false);\n    const [addProductItemData, setAddProductItemData] = useState({\n        categoryId: '',\n        priority: 9999,\n        name: '',\n        introduce: '',\n        summary: '',\n        editorData: '',\n        imageUrl: '/images/sample/imageNo.png'\n    });\n\n    const [updateProductModalOpen, setUpdateProductModalOpen] = useState(false);\n    const [updateProductItemData, setUpdateProductItemData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            if (isLoged) {\n                await __handleDataConnect().getProductCategoryList();\n                await __handleDataConnect().getProductList();\n            }\n        }\n        fetchData();\n    }, [isLoged, location]);\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList({\n                                size: data.data.length,\n                                data: data.data\n                            })\n                        }\n                    })\n            },\n            deleteProductCategoryOne: async function (jsonData) {\n                await productDataConnect().deleteProductCategoryOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n                await __handleDataConnect().getProductCategoryList();\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            },\n            insertProductOne: async function (jsonData) {\n                await productDataConnect().insertProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 등록되었습니다.');\n                            }\n                        }\n                    });\n            },\n            updateProductOne: async function (jsonData) {\n                await productDataConnect().updateProductOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품이 수정되었습니다.');\n                            }\n                        }\n                    });\n            },\n            deleteProductOne: async function (jsonData) {\n                await productDataConnect().deleteProductOne(jsonData)\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            alert('삭제 되었습니다.')\n                        }\n                    })\n            },\n            updateCategoryOne: async function (jsonData) {\n                await productDataConnect().updateCategoryOne(jsonData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('카테고리가 수정되었습니다.');\n                            }\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleAddCategoryModalControl = () => {\n        return {\n            open: function () {\n                setAddCategoryModalOpen(true);\n            },\n            close: function () {\n                setAddCategoryModalOpen(false);\n                handleAddCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                // let jsonData = {\n                //     categoryName: addCategoryName\n                // }\n                await productDataConnect().insertProductCategoryOne(addCategoryData)\n                    .then(data => {\n                        if (data) {\n                            if (data.message == 'success') {\n                                alert('상품 카테고리가 생성되었습니다.');\n                            }\n                        }\n                    });\n                await __handleDataConnect().getProductCategoryList();\n                handleAddCategoryModalControl().close();\n\n            },\n            addCategoryDataOnChange: function (e) {\n                setAddCategoryData({ ...addCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setAddCategoryData({\n                    categoryName: '',\n                    priority: 9999\n                })\n            }\n        }\n    }\n\n    const handleFixCategoryModalControl = () => {\n        return {\n            open: function (id) {\n                let data = categoryList.data.filter(r => r.id == id)[0];\n                setFixCategoryData(data);\n                setFixCategoryModalOpen(true);\n            },\n            close: function () {\n                setFixCategoryModalOpen(false);\n                handleFixCategoryModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateCategoryOne(fixCategoryData);\n                await __handleDataConnect().getProductCategoryList();\n                handleFixCategoryModalControl().close();\n\n            },\n            categoryDataOnChange: function (e) {\n                setFixCategoryData({ ...fixCategoryData, [e.target.name]: e.target.value })\n            },\n            modalInputClear: function () {\n                setFixCategoryData(null);\n            }\n        }\n    }\n\n    const handleCategoryControl = () => {\n        return {\n            deleteOne: async function (id) {\n                if (window.confirm('정말로 삭제하시겠습니까?')) {\n                    let jsonData = categoryList.data.filter(r => r.id == id)[0];\n                    await __handleDataConnect().deleteProductCategoryOne(jsonData);\n                } else {\n                    return;\n                }\n\n            }\n        }\n    }\n\n    const handleProductControl = () => {\n        return {\n            deleteOne: async function (id) {\n                let jsonData = productList.filter(r => r.product.id == id)[0].product;\n                await __handleDataConnect().deleteProductOne(jsonData);\n                await __handleDataConnect().getProductList();\n            },\n            categoryOnChange: async function (e) {\n                let query = queryString.parse(window.location.search);\n\n                let pageIndex = query.pageIndex;\n                let categoryId = e.target.value;\n                let queryData = queryString.stringify({ categoryId: categoryId });\n                let newUrl = `/admin/product?${queryData}`;\n                history.push(newUrl);\n            },\n            searchAll: async function () {\n                history.push('/admin/product');\n            }\n        }\n    }\n\n    const handleAddProductModalControl = () => {\n        return {\n            open: function () {\n                handleUpdateProductModalControl().close();\n                setAddProductModalOpen(true);\n            },\n            close: function () {\n                setAddProductModalOpen(false);\n                handleAddProductModalControl().modalInputClear();\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                let jsonData = {\n                    categoryId: addProductItemData.categoryId,\n                    priority: addProductItemData.priority,\n                    name: addProductItemData.name,\n                    introduce: addProductItemData.introduce,\n                    summary: addProductItemData.summary,\n                    desc: addProductItemData.editorData,\n                    imageUrl: addProductItemData.imageUrl\n                }\n                await __handleDataConnect().insertProductOne(jsonData);\n                handleAddProductModalControl().close();\n\n            },\n            modalInputClear: function () {\n                setAddProductItemData({\n                    categoryId: '',\n                    priority: 9999,\n                    name: '',\n                    introduce: '',\n                    summary: '',\n                    editorData: '',\n                    imageUrl: '/images/sample/imageNo.png'\n                });\n            },\n            onValueChange: function (e) {\n                setAddProductItemData({ ...addProductItemData, [e.target.name]: e.target.value })\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        addProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setAddProductItemData({ ...addProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleAddProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setAddProductItemData({ ...addProductItemData, ['editorData']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    const handleUpdateProductModalControl = () => {\n        return {\n            open: function (targetId) {\n                handleAddProductModalControl().close();\n\n                let data = productList.filter(r => r.product.id == targetId)[0].product;\n                // console.log(data);\n                setUpdateProductItemData(data);\n                setUpdateProductModalOpen(true);\n            },\n            close: function () {\n                setUpdateProductModalOpen(false);\n                setUpdateProductItemData(null);\n            },\n            submit: async function (e) {\n                e.preventDefault();\n                await __handleDataConnect().updateProductOne(updateProductItemData);\n                await __handleDataConnect().getProductList();\n                handleUpdateProductModalControl().close();\n            },\n            onValueChange: function (e) {\n                setUpdateProductItemData({ ...updateProductItemData, [e.target.name]: e.target.value })\n            },\n            imageUploadToS3: async function (event) {\n                //빈파일이 아닌 경우 함수 진행\n                if (event.target.files !== null) {\n                    // setFullPageLoading(true);\n                    //FormData 생성\n                    const fd = new FormData();\n                    //FormData에 key, value 추가하기\n                    fd.append('file', event.target.files[0]);\n                    // axios 사용해서 백엔드에게 파일 보내기\n                    await productDataConnect().imageUploadToS3(fd).then(data => {\n                        updateProductImageUploaderRef.current.value = ''\n                        if (data.message == 'success') {\n                            setUpdateProductItemData({ ...updateProductItemData, ['imageUrl']: data.imageUrl })\n                        }\n                    });\n                    // setFullPageLoading(false);\n                }\n            }\n        }\n    }\n\n    const handleUpdateProductEditorControl = () => {\n        return {\n            onChange: function (data) {\n                setUpdateProductItemData({ ...updateProductItemData, ['desc']: data })\n            },\n            onBlur: function () {\n            }\n        }\n    }\n\n    return (\n        isLoged ?\n            <>\n                <Container>\n                    <AdminNav></AdminNav>\n                    {categoryList ?\n                        <CategoryComponent\n                            categoryList={categoryList}\n\n                            handleModalControl={handleAddCategoryModalControl}\n                            handleCategoryControl={handleCategoryControl}\n                            handleFixModalControl={handleFixCategoryModalControl}\n                        ></CategoryComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>카테고리 리스트 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n                    {categoryList && productList && productPage ?\n                        <ProductComponent\n                            categoryList={categoryList}\n                            productList={productList}\n                            productPage={productPage}\n                            updateProductModalOpen={updateProductModalOpen}\n\n                            handleProductControl={handleProductControl}\n                            handleAddProductModalControl={handleAddProductModalControl}\n                            handleUpdateProductModalControl={handleUpdateProductModalControl}\n                        >\n                        </ProductComponent>\n                        :\n                        <>\n                            <div className='text-center'>\n                                <div>상품 목록 로딩중...</div>\n                                <div className=\"spinner-border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n\n                        </>\n                    }\n\n\n\n                    <AddCategoryModal\n                        modalOpen={addCategoryModalOpen}\n                        addCategoryData={addCategoryData}\n                        addCategoryName={addCategoryName}\n\n\n                        handleModalControl={handleAddCategoryModalControl}\n                    ></AddCategoryModal>\n                    <FixCategoryModal\n                        modalOpen={fixCategoryModalOpen}\n                        fixCategoryData={fixCategoryData}\n\n                        handleModalControl={handleFixCategoryModalControl}\n                    ></FixCategoryModal>\n                    <AddProductModal\n                        addProductFieldRef={addProductFieldRef}\n                        imageUploaderRef={addProductImageUploaderRef}\n\n                        categoryList={categoryList}\n                        addProductItemData={addProductItemData}\n\n                        modalOpen={addProductModalOpen}\n                        handleModalControl={handleAddProductModalControl}\n                        handleEditorControl={handleAddProductEditorControl}\n                    >\n\n                    </AddProductModal>\n                    <UpdateProductModal\n                        updateProductFieldRef={updateProductFieldRef}\n                        imageUploaderRef={updateProductImageUploaderRef}\n\n                        modalOpen={updateProductModalOpen}\n                        categoryList={categoryList}\n                        updateProductItemData={updateProductItemData}\n\n                        handleModalControl={handleUpdateProductModalControl}\n                        handleEditorControl={handleUpdateProductEditorControl}\n                    >\n\n                    </UpdateProductModal>\n                </Container>\n            </>\n            :\n            <></>\n    );\n}\n\nexport default AdminProductMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddCategoryModal.js",["337"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst AddCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                <DialogTitle className='text-center'>{\"카테고리 추가\"}</DialogTitle>\n                <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                    <DialogContent>\n                        <div className=\"form-group\">\n                            <label>카테고리</label>\n                            <input type=\"text\" className=\"form-control\" name='categoryName' value={props.addCategoryData.categoryName} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>카테고리 우선도</label>\n                            <input type=\"number\" className=\"form-control\" name='priority' value={props.addCategoryData.priority} onChange={(e) => props.handleModalControl().addCategoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                            <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                            취소\n                    </Button>\n                        <Button type='submit' color=\"primary\">\n                            카테고리 등록\n                    </Button>\n                    </DialogActions>\n                </form>\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default AddCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/data_connect/ProductDataConnect.js",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"import axios from 'axios';\nimport queryString from 'query-string';\nimport { getCookie } from '../../handler/CookieHandler';\nconst productDataConnect = () => {\n    return {\n        searchProductCategoryAll: async function () {\n            return await axios.get('/api/search/product_category/all', {})\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductCategoryOne: async function (data) {\n            return await axios.post('/api/insert/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductCategoryOne: async function (data) {\n            return await axios.post('/api/delete/product_category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        imageUploadToS3: async function (fd) {\n            return await axios.post('/api/fileupload/image', fd, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => res.data)\n                //에러가 날 경우 처리\n                .catch(error => {\n                    console.log(error.response);\n                });\n        },\n        searchProductAll: async function () {\n            let query = queryString.parse(window.location.search);\n\n            return await axios.get('/api/search/product/all', {\n                params: {\n                    categoryId: query.categoryId,\n                    pageIndex: query.pageIndex ? query.pageIndex - 1 : 0\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        // console.log(res.data);\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        insertProductOne: async function (data) {\n            return await axios.post('/api/insert/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        updateProductOne: async function (data) {\n            return await axios.post('/api/update/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        deleteProductOne: async function (data) {\n            return await axios.post('/api/delete/product/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                });\n        },\n        updateCategoryOne: async function (data) {\n            return await axios.post('/api/update/category/one', data, {\n                headers: {\n                    'X-XSRF-TOKEN': getCookie('XSTO')\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 401) {\n                            alert('로그인 세션이 만료되었습니다. \\nError code : 401, session expired');\n                            window.location.href = '/login';\n                        } else if (res.status == 403) {\n                            alert('접근 권한이 없습니다. \\nError code : 403, access denied');\n                        } else if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        },\n        searchProductOne: async function (productId) {\n            return await axios.get('/api/search/product/one', {\n                params: {\n                    productId:productId\n                }\n            })\n                .then(res => {\n                    if (res && res.data) {\n                        return res.data\n                    } else {\n                        return null;\n                    }\n                })\n                .catch(err => {\n                    if (err) {\n                        let res = err.response;\n                        if (res.status == 405) {\n                            alert('Errer code : 405, not allowed');\n                        } else if (res.status == 500) {\n                            alert('Errer code : 500, Internal Server Error');\n                        } else {\n                            alert('undefined error');\n                        }\n                    }\n                })\n        }\n    }\n}\n\nexport {\n    productDataConnect\n}","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/CategoryComponent.js",[],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductComponent.js",["368"],"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// components\nimport ProductPageableComponent from './ProductPageableComponent';\n\nconst Container = styled.div`\n\n`;\n\nconst ListContainer = styled.div`\n    \n`;\n\nconst ListWrapper = styled.div`\n    margin:8px 0;\n    padding:8px;\n    border: 1px #f1f1f1 solid;\n    border-radius: 8px;\n    box-shadow: rgb(0 0 0 / 8%) 0px 0.125rem 0.25rem;\n\n`;\n\nconst TopPart = styled.div`\n    padding:8px;\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst TopPartTitle = styled.div`\n    font-size:21px;\n    font-weight:600;\n`;\n\nconst TopPartAddProduct = styled.button`\n    \n`;\n\nconst BodyPart = styled.div`\n    padding:8px;\n`;\n\nconst TableBox = styled.div`\n\n`;\n\nconst TableTh = styled.th`\n    vertical-align: middle!important;\n`;\nconst TableTd = styled.td`\n    vertical-align: middle!important;\n`;\nconst ImageEl = styled.img`\n    width:80px;\n    height:80px;\n    object-fit:cover;\n`;\n\nconst ControlBtn = styled.button`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\n\nconst ControlLink = styled.a`\n    margin:0 5px;\n    padding:8px;\n    border:1px solid #b1b1b1;\n    background:none;\n    color:${(props) => props.color_prop ? props.color_prop : 'black'};\n    font-weight:600;\n    &:hover{\n        background:${(props) => props.color_prop ? props.color_prop : 'black'};\n        color:white;\n    }\n`;\nconst ProductComponent = (props) => {\n    // console.log(queryString.parse(window.location.search).categoryId?queryString.parse(window.location.search).categoryId:'')\n    const query = queryString.parse(window.location.search);\n    return (\n        <>\n            <Container>\n                <ListContainer className='container-fluid'>\n                    <ListWrapper>\n                        <TopPart className='clearfix'>\n                            <TopPartTitle className='float-left'>상품 목록</TopPartTitle>\n                            <TopPartAddProduct type='button' className='float-right btn btn-outline-primary' onClick={() => props.handleAddProductModalControl().open()}>상품 추가</TopPartAddProduct>\n                        </TopPart>\n\n                        <BodyPart>\n                            <div className='pt-3 pb-3'>\n                                <p>카테고리별 조회</p>\n                                <div className='form-row'>\n                                    <div className=\"col\">\n                                        <select className=\"form-control\" name='categoryId' value={query.categoryId ? query.categoryId : ''} onChange={(e)=>props.handleProductControl().categoryOnChange(e)} required>\n                                            <option value='' hidden>--카테고리 선택--</option>\n                                            {props.categoryList ? props.categoryList.data.map(r => {\n                                                return (\n                                                    <option value={r.id} key={r.id}>{r.categoryName}</option>\n                                                );\n                                            })\n                                                :\n                                                <></>\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"col\">\n                                        <button type='button' className='btn btn-outline-success' onClick={()=>props.handleProductControl().searchAll()}>전체조회</button>\n                                    </div>\n                                </div>\n\n                            </div>\n                            {props.productList ?\n                                <TableBox className='table-responsive'>\n                                    <table className=\"table table-sm text-center\" style={{ tableLayout: 'fixed' }}>\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\" width='50'>#</th>\n                                                <th scope=\"col\" width='200'>상품명</th>\n                                                <th scope=\"col\" width='150'>이미지</th>\n                                                <th scope=\"col\" width='150'>카테고리</th>\n                                                <th scope=\"col\" width='100'>우선순위</th>\n                                                <th scope=\"col\" width='200'>컨트롤</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.productList.map((r, index) => {\n                                                let itemIndex = props.productPage.displaySize*(props.productPage.curr-1)+index+1;\n                                                return (\n                                                    <tr key={r.product.id}>\n                                                        <TableTh scope=\"row\">{itemIndex}</TableTh>\n                                                        <TableTd>{r.product.name}</TableTd>\n                                                        <TableTd><ImageEl src={r.product.imageUrl}></ImageEl></TableTd>\n                                                        <TableTd>{r.category.categoryName}</TableTd>\n                                                        <TableTd>{r.product.priority}</TableTd>\n                                                        <TableTd>\n                                                            <ControlLink\n                                                                href={'/'}\n                                                                color_prop={'#80dd80'}\n                                                                className='btn btn-sm'\n                                                                target='_blank'\n                                                            >바로가기</ControlLink>\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#8080dd'}\n                                                                    onClick={() => props.handleUpdateProductModalControl().open(r.product.id)}\n                                                                >수정</ControlBtn>\n                                                            }\n\n                                                            {props.updateProductModalOpen ?\n                                                                // <ControlBtn\n                                                                //     type='button'\n                                                                //     className='btn btn-sm'\n                                                                //     color_prop={'#8080dd'}\n                                                                //     disabled\n                                                                // >수정</ControlBtn>\n                                                                ''\n                                                                :\n                                                                <ControlBtn\n                                                                    type='button'\n                                                                    className='btn btn-sm'\n                                                                    color_prop={'#dd8080'}\n                                                                    onClick={() => props.handleProductControl().deleteOne(r.product.id)}\n                                                                >삭제</ControlBtn>\n                                                            }\n\n                                                        </TableTd>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                </TableBox>\n                                :\n                                <></>\n                            }\n\n                        </BodyPart>\n                    </ListWrapper>\n                </ListContainer>\n                {props.productPage && \n                    <ProductPageableComponent\n                        pageData={props.productPage}\n                    ></ProductPageableComponent>\n                }\n                \n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/AddProductModal.js",["369","370","371","372","373","374","375"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/UpdateProductModal.js",["376","377","378","379","380","381","382"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/FixCategoryModal.js",["383"],"import styled from 'styled-components';\n// material\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\n\nconst DialogTitle = styled.div`\n    font-size:22px;\n    font-weight:600;\n    text-align:center;\n    padding:12px;\n    border-bottom:1px solid #f1f1f1;\n    margin-bottom:8px;\n`;\n\nconst FixCategoryModal = (props) => {\n    return (\n        <>\n            <Dialog\n                fullWidth={true}\n                open={props.modalOpen}\n                onClose={() => props.handleModalControl().close()}\n            >\n                {props.fixCategoryData ? <>\n                    <DialogTitle className='text-center'>{\"카테고리 수정\"}</DialogTitle>\n                    <form onSubmit={(e) => props.handleModalControl().submit(e)}>\n                        <DialogContent>\n                            <div className=\"form-group\">\n                                <label>카테고리명</label>\n                                <input type=\"text\" className=\"form-control\" name='categoryName' value={props.fixCategoryData.categoryName} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"등록하실 카테고리명을 지정해주세요.\" required=\"required\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>카테고리 우선도</label>\n                                <input type=\"number\" className=\"form-control\" name='priority' value={props.fixCategoryData.priority} onChange={(e) => props.handleModalControl().categoryDataOnChange(e)} placeholder=\"카테고리 우선도를 지정해주세요. 허용치(1~9999)\" min={1} max={9999} required=\"required\" />\n                                <small className=\"form-text text-muted\">카테고리의 우선도를 지정합니다. 1~9999까지의 숫자만 허용합니다. 숫자가 낮을수록 우선도 높음.</small>\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button type='button' color=\"secondary\" onClick={() => props.handleModalControl().close()}>\n                                취소\n                    </Button>\n                            <Button type='submit' color=\"primary\">\n                                수정\n                    </Button>\n                        </DialogActions>\n                    </form>\n                </>:<></>}\n\n\n            </Dialog>\n        </>\n    );\n}\n\nexport default FixCategoryModal;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/admin/admin_product/ProductPageableComponent.js",["384"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst ProductPageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default ProductPageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductListMain.js",["385","386","387","388","389","390"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport CategoryNavComponent from './CategoryNavComponent';\nimport ProductComponent from './ProductComponent';\n\n\nconst ProductListMain = ({history,match,location}) => {\n    let query = queryString.parse(window.location.search);\n    const categoryNavRef = useRef();\n\n    useEffect(() => {\n        if(query.pageIndex){\n            _handleScrollToRef();\n        }else{\n            handleScrollToTop();\n        }\n        \n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [categoryList, setCategoryList] = useState(null);\n    const [productList, setProductList] = useState(null);\n    const [productPage, setProductPage] = useState(null);\n\n    const [selectedCategory, setSelectedCategory] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductCategoryList();\n            await __handleDataConnect().getProductList();\n        }\n        fetchInit();\n    }, [location]);\n\n    useEffect(()=>{\n        function init(){\n            if(categoryList){\n                // console.log(categoryList);\n                handleSetSelectedCategory();\n            }\n        }\n        init();\n    },[categoryList])\n\n    const _handleScrollToRef = () =>{\n        categoryNavRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    const __handleDataConnect = () => {\n        return {\n            getProductCategoryList: async function () {\n                await productDataConnect().searchProductCategoryAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            setCategoryList(data.data)\n                        }\n                    })\n            },\n            getProductList: async function () {\n                await productDataConnect().searchProductAll()\n                    .then(data => {\n                        if (data && data.message == 'success') {\n                            // console.log(data);\n                            setProductList(data.data);\n                            setProductPage(data.page);\n                        }\n                    })\n            }\n        }\n    }\n\n    const handleSetSelectedCategory = () =>{\n        // console.log(query);\n        let category = {\n            id:0,\n            categoryName:'전체상품',\n            priority:0\n        }\n        if(query.categoryId){\n            let getCategory = categoryList.filter(r=>r.id==query.categoryId)[0];\n            if(getCategory){\n                category.id=getCategory.id;\n                category.categoryName=getCategory.categoryName;\n                category.priority=getCategory.priority;\n            }\n        }\n        setSelectedCategory(category);\n    }\n\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품목록'}\n                linkPage={'list'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            <div ref={categoryNavRef}></div>\n            {categoryList && selectedCategory ?\n                <CategoryNavComponent\n                    categoryList={categoryList}\n                    selectedCategory={selectedCategory}\n                ></CategoryNavComponent>\n                :\n                <></>\n            }\n            {categoryList && selectedCategory && productList && productPage ? \n                <ProductComponent\n                    categoryList = {categoryList}\n                    selectedCategory={selectedCategory}\n                    productList = {productList}\n                    productPage = {productPage}\n                ></ProductComponent>\n                :\n                <></>\n            }\n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductListMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/layout/ProductTopLayout.js",["391","392","393","394"],"/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/CategoryNavComponent.js",["395","396"],"import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n\n`;\n\nconst Wrapper = styled.div`\n    border-bottom:1px solid #f1f1f1;\n`;\n\nconst GridGroup = styled.div`\n    display:grid;\n    grid-template-columns:repeat(auto-fit,minmax(10%, auto));\n    grid-auto-rows: minmax(auto, auto);\n    @media only screen and (max-width:992px){\n        grid-template-columns:repeat(auto-fit,minmax(20%, auto));\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns:repeat(auto-fit,minmax(30%, auto));\n    }\n`;\n\nconst GridEl = styled(Link)`\n    text-align:center;\n    background:white;\n    padding:20px 0;\n    color:#333;\n    font-size:24px;\n    font-weight:600;\n    border:1px solid #00000000;\n    &:hover{\n        color:#33333380;\n        text-decoration:none;\n    }\n    @media only screen and (max-width:992px){\n        font-size:18px;\n    }\n    @media only screen and (max-width:768px){\n        font-size:15px;\n    }\n\n`;\nconst CategoryNavComponent = (props) => {\n    return (\n        <>\n            <Container>\n                <Wrapper className='container-fluid'>\n                    {props.categoryList && props.selectedCategory ?\n                        <GridGroup>\n                            {props.selectedCategory.id==0 ? <GridEl to='/product/list' style={{color:'#ee5470'}}>전체상품</GridEl> : <GridEl to='/product/list'>전체상품</GridEl>}\n                            \n                            {props.categoryList.map(r => {\n                                if(r.id == props.selectedCategory.id){\n                                    return(\n                                        <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`} style={{color:'#ee5470'}}>{r.categoryName}</GridEl>\n                                    );    \n                                }\n                                return (\n                                    <GridEl key={r.id} to={`/product/list?categoryId=${r.id}`}>{r.categoryName}</GridEl>\n                                );\n                            })}\n                        </GridGroup>\n                        :\n                        <></>\n                    }\n\n\n                </Wrapper>\n            </Container>\n        </>\n    )\n}\n\nexport default CategoryNavComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/ProductComponent.js",["397","398","399"],"import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n// components\nimport PageableComponent from './PageableComponent';\n\nconst Container = styled.div`\n\n`;\nconst MainTitleBox = styled.div`\n    margin-top:70px;\n`;\nconst MainTitle = styled.div`\n    text-align:center;\n    font-size:42px;\n    font-weight:800;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:35px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:28px;\n        }\n    }\n`;\n\nconst MainTitleSub = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\n\nconst ExplainEl = styled.div`\n    text-align:center;\n    font-size:22px;\n    font-weight:600;\n    @media only screen and (max-width:768px){\n        &{\n            font-size:20px;\n        }\n    }\n    @media only screen and (max-width:320px){\n        &{\n            font-size:18px;\n        }\n    }\n`;\nconst LineBreaker1 = styled.div`\n    width: 55px;\n    height: 5px;\n    margin: 30px auto 45px;\n    background-color: #ee5470;\n`;\n\nconst ProductListWrapper = styled.div`\n    padding:50px 15px;\n    display:grid;\n    grid-template-columns: repeat(4,1fr);\n    grid-template-rows: auto auto;\n    grid-gap:15px;\n    @media only screen and (max-width:992px){\n        grid-template-columns: repeat(3,1fr);\n    }\n    @media only screen and (max-width:768px){\n        grid-template-columns: repeat(2,1fr);\n    }\n`;\n\nconst ProductImageBox = styled.div`\n    position: relative;\n    width: 100%;\n    padding-top: 100%;\n    border-bottom:1px solid #f1f1f1;\n    \n`;\n\nconst ProductImageEl = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    /* background: linear-gradient(to bottom right, #ee5470, #f8bac9); */\n    \n    border-radius:15px;\n`;\n\nconst ProductImage = styled.img`\n    width:100%;\n    height:100%;\n    /* border: 1px solid black; */\n    /* border-radius:15px; */\n    object-fit: cover;\n`;\n\nconst ProductContentBox = styled.div`\n\n`;\n\nconst ProductContentTitle = styled.div`\n    font-size:18px;\n    font-weight:700;\n    @media only screen and (max-width:768px){\n        font-size:13px;\n    }\n`;\n\nconst ProductWrapper = styled(Link)`\n    text-align:center;\n    border: 2px solid #00000000;\n    border-radius:10px;\n    box-shadow: rgb(0 0 0 / 25%) 0px 5px 15px;\n    overflow:hidden;\n    color:#333;\n    transition: .5s;\n    &:hover{\n        /* background:#ee5470; */\n        /* border: 2px solid white; */\n        text-decoration:none;\n        color:white;\n        transform:scale(1.03);\n        background: linear-gradient(\n            60deg,\n            hsl(224, 85%, 66%),\n            hsl(269, 85%, 66%),\n            hsl(314, 85%, 66%),\n            hsl(359, 85%, 66%),\n            hsl(44, 85%, 66%),\n            hsl(89, 85%, 66%),\n            hsl(134, 85%, 66%),\n            hsl(179, 85%, 66%)\n        );\n        background-size: 300% 300%;\n        background-position: 0 50%;\n        animation: moveGradient 4s alternate infinite;\n        \n        & ${ProductImage}{\n            opacity:0.7;\n        }\n        & ${ProductContentTitle}{\n            font-weight:800;\n        }\n    }\n\n    @keyframes moveGradient {\n        50% {\n            background-position: 100% 50%;\n        }\n    }\n`;\nconst ProductComponent = (props) => {\n    const [product, setProduct] = useState({\n        id: 1,\n        image: '/images/funnyland/product/cart_product.png',\n        title: '마리오카트2 DX'\n    });\n    return (\n        <>\n            <Container>\n                <MainTitleBox>\n                    <MainTitle>\n                        PRODUCT\n                        </MainTitle>\n                    <MainTitleSub>제품 안내</MainTitleSub>\n                    <LineBreaker1></LineBreaker1>\n                    <ExplainEl>{props.selectedCategory.categoryName}</ExplainEl>\n                </MainTitleBox>\n                <ProductListWrapper className='container'>\n                    {props.productList && props.productList.map(r => {\n                        return (\n                            <ProductWrapper key={r.product.id} to={`/product/detail?productId=${r.product.id}`}>\n                                <ProductImageBox>\n                                    <ProductImageEl>\n                                        <ProductImage src={r.product.imageUrl}></ProductImage>\n                                    </ProductImageEl>\n                                </ProductImageBox>\n                                <ProductContentBox>\n                                    <ProductContentTitle>{r.product.name}</ProductContentTitle>\n                                </ProductContentBox>\n                            </ProductWrapper>\n                        );\n                    })}\n                </ProductListWrapper>\n                <PageableComponent\n                    pageData = {props.productPage}\n                ></PageableComponent>\n            </Container>\n        </>\n    );\n}\n\nexport default ProductComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/list/PageableComponent.js",["400"],"import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst Container = styled.div`\n`;\n\n/**\n * \n * @param url * url은 default url 로 window.location.pathname으로 얻는다\n * @param params * params는 {pageIndex, categoryId, searchName으로 구성된다}\n * @example getQueryStringUrl('/foo', {pageIndex:1, categoryId:1, searchName:'bar'})\n * => '/foo?pageIndex=1&categoryId=1&searchName=bar'\n */\nconst getQueryStringUrl = (url, params) =>{\n    let query = queryString.parse(window.location.search);\n    if(params.pageIndex){\n        query.pageIndex = params.pageIndex;\n    }\n    if(params.categoryId){\n        query.categoryId=params.categoryId;\n    }\n    if(params.searchName){\n        query.searchName=params.searchName;\n    }\n    return queryString.stringifyUrl({url:url,query});\n}\n\nconst defaultUrl = window.location.pathname;\n\nconst PageableComponent = (props) =>{\n    const items = [];\n    for(let i = 0 ; i < props.pageData.pageSize; i++){\n        items.push({\n            defaultUrl:defaultUrl,\n            pageNum:i+1\n        })\n    }\n    return(\n        <>\n            <Container>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.prev})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></Link>\n                        </li>\n                        {items.map(r=>{\n                            if(r.pageNum==props.pageData.curr){\n                                return(\n                                    <li className=\"page-item active\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }else{\n                                return(\n                                    <li className=\"page-item\" key={`pagination-${r.pageNum}`}>\n                                        <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:r.pageNum})}`}>{r.pageNum}</Link>\n                                    </li>           \n                                )\n                            }\n                        })}\n                        <li className=\"page-item\">\n                            <Link className=\"page-link\" to={`${getQueryStringUrl(defaultUrl,{pageIndex:props.pageData.next})}`} aria-label=\"Previous\"><span aria-hidden=\"true\">&raquo;</span></Link>\n                        </li>\n                    </ul>\n                </nav>\n                \n            </Container>\n        </>\n    );\n}\n\nexport default PageableComponent;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/ProductDetailMain.js",["401","402","403","404","405"],"import styled from 'styled-components';\nimport { useEffect, useState, useRef } from 'react';\nimport {Link} from 'react-router-dom';\nimport queryString from 'query-string';\n\n// handler\nimport { handleScrollToTop } from '../../../../handler/ScrollHandler';\n\n// data connect\nimport { productDataConnect } from '../../../data_connect/ProductDataConnect';\n\n// components\nimport NavbarDynamic from '../../../navbar/NavbarDynamic';\nimport FooterDefault from '../../../footer_offer/FooterDefault';\nimport ProductTopLayout from '../layout/ProductTopLayout';\nimport NavbarBottomFixed from '../../../navbar/NavbarBottomFixed';\nimport ApplyFormModal from '../../home/ApplyFormModal';\nimport DetailComponent from './DetailComponent';\n\nconst ProductDetailMain = ({ history, match, location }) => {\n    let query = queryString.parse(window.location.search);\n\n    useEffect(() => {\n        handleScrollToTop();\n    }, [location]);\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const mainHandleDialogControl = () => {\n        return {\n            open: () => {\n                setDialogOpen(true);\n            },\n            close: function () {\n                setDialogOpen(false);\n            }\n        }\n    }\n\n    const [productData, setProductData] = useState(null);\n\n    useEffect(() => {\n        async function fetchInit() {\n            await __handleDataConnect().getProductData();\n        }\n        fetchInit();\n    },[location])\n\n    const __handleDataConnect = () => {\n        return {\n            getProductData: async function () {\n                let productId = query.productId;\n                if (productId) {\n                    await productDataConnect().searchProductOne(productId)\n                        .then(data => {\n                            if (data && data.message == 'success') {\n                                setProductData(data.data);\n                                console.log(data);\n                            }else if(data && data.message=='no_data'){\n                                alert('존재하지 않는 데이터입니다.');\n                                history.push('/product/list');\n                            }\n                        })\n                }\n\n            }\n        }\n    }\n    return (\n        <>\n            <NavbarDynamic></NavbarDynamic>\n            <ProductTopLayout\n                title={'제품상세'}\n            ></ProductTopLayout>\n            {/* Body start */}\n            {productData ? \n                <DetailComponent\n                    productData={productData}\n                ></DetailComponent>\n                :\n                <>\n                    <div className='text-center'>\n                        <h2 className='m-3 p-3'>NOT FOUND</h2>\n                        <div className='m-1 p-1'>\n                            <Link to={'/product/list'}>Go To Product List</Link>\n                        </div>\n                        <div className='m-1 p-1'>\n                            <Link to={'/'}>Go To Home</Link>\n                        </div>\n                    </div>\n                    \n                </>\n            }\n            \n            {/* Body end */}\n            <FooterDefault></FooterDefault>\n            <NavbarBottomFixed\n                mainHandleDialogControl={mainHandleDialogControl}\n            ></NavbarBottomFixed>\n            <ApplyFormModal\n                dialogOpen={dialogOpen}\n\n                mainHandleDialogControl={mainHandleDialogControl}\n            >\n            </ApplyFormModal>\n        </>\n    );\n}\n\nexport default ProductDetailMain;","/Users/sehoon/work/PCY/funnyland/funnyland_server/frontend/src/components/main_component/product/detail/DetailComponent.js",["406"],{"ruleId":"407","severity":1,"message":"408","line":8,"column":8,"nodeType":"409","messageId":"410","endLine":8,"endColumn":13},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","replacedBy":"414"},{"ruleId":"407","severity":1,"message":"415","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":9},{"ruleId":"416","severity":1,"message":"417","line":28,"column":7,"nodeType":"418","endLine":28,"endColumn":9,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":33,"column":33,"nodeType":"422","messageId":"423","endLine":33,"endColumn":35},{"ruleId":"407","severity":1,"message":"424","line":1,"column":31,"nodeType":"409","messageId":"410","endLine":1,"endColumn":37},{"ruleId":"407","severity":1,"message":"425","line":23,"column":7,"nodeType":"409","messageId":"410","endLine":23,"endColumn":19},{"ruleId":"407","severity":1,"message":"426","line":4,"column":8,"nodeType":"409","messageId":"410","endLine":4,"endColumn":14},{"ruleId":"427","severity":1,"message":"428","line":45,"column":33,"nodeType":"429","endLine":45,"endColumn":86},{"ruleId":"407","severity":1,"message":"430","line":28,"column":7,"nodeType":"409","messageId":"410","endLine":28,"endColumn":24},{"ruleId":"407","severity":1,"message":"431","line":61,"column":7,"nodeType":"409","messageId":"410","endLine":61,"endColumn":14},{"ruleId":"420","severity":1,"message":"432","line":69,"column":31,"nodeType":"422","messageId":"423","endLine":69,"endColumn":33},{"ruleId":"420","severity":1,"message":"421","line":82,"column":34,"nodeType":"422","messageId":"423","endLine":82,"endColumn":36},{"ruleId":"407","severity":1,"message":"433","line":1,"column":10,"nodeType":"409","messageId":"410","endLine":1,"endColumn":19},{"ruleId":"407","severity":1,"message":"434","line":155,"column":22,"nodeType":"409","messageId":"410","endLine":155,"endColumn":33},{"ruleId":"435","severity":1,"message":"436","line":230,"column":63,"nodeType":"437","messageId":"438","endLine":230,"endColumn":65},{"ruleId":"407","severity":1,"message":"439","line":66,"column":22,"nodeType":"409","messageId":"410","endLine":66,"endColumn":33},{"ruleId":"407","severity":1,"message":"440","line":41,"column":7,"nodeType":"409","messageId":"410","endLine":41,"endColumn":15},{"ruleId":"407","severity":1,"message":"441","line":24,"column":25,"nodeType":"409","messageId":"410","endLine":24,"endColumn":39},{"ruleId":"411","replacedBy":"442"},{"ruleId":"413","replacedBy":"443"},{"ruleId":"407","severity":1,"message":"444","line":4,"column":9,"nodeType":"409","messageId":"410","endLine":4,"endColumn":13},{"ruleId":"407","severity":1,"message":"445","line":62,"column":7,"nodeType":"409","messageId":"410","endLine":62,"endColumn":25},{"ruleId":"407","severity":1,"message":"446","line":1,"column":31,"nodeType":"409","messageId":"410","endLine":1,"endColumn":35},{"ruleId":"407","severity":1,"message":"447","line":1,"column":37,"nodeType":"409","messageId":"410","endLine":1,"endColumn":48},{"ruleId":"407","severity":1,"message":"448","line":90,"column":7,"nodeType":"409","messageId":"410","endLine":90,"endColumn":16},{"ruleId":"407","severity":1,"message":"449","line":6,"column":5,"nodeType":"409","messageId":"410","endLine":6,"endColumn":17},{"ruleId":"427","severity":1,"message":"428","line":156,"column":21,"nodeType":"429","endLine":156,"endColumn":71},{"ruleId":"420","severity":1,"message":"421","line":160,"column":52,"nodeType":"422","messageId":"423","endLine":160,"endColumn":54},{"ruleId":"420","severity":1,"message":"421","line":166,"column":52,"nodeType":"422","messageId":"423","endLine":166,"endColumn":54},{"ruleId":"420","severity":1,"message":"421","line":170,"column":52,"nodeType":"422","messageId":"423","endLine":170,"endColumn":54},{"ruleId":"407","severity":1,"message":"448","line":72,"column":7,"nodeType":"409","messageId":"410","endLine":72,"endColumn":16},{"ruleId":"407","severity":1,"message":"444","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"416","severity":1,"message":"417","line":40,"column":8,"nodeType":"418","endLine":40,"endColumn":10,"suggestions":"450"},{"ruleId":"420","severity":1,"message":"421","line":45,"column":38,"nodeType":"422","messageId":"423","endLine":45,"endColumn":40},{"ruleId":"420","severity":1,"message":"421","line":60,"column":23,"nodeType":"422","messageId":"423","endLine":60,"endColumn":25},{"ruleId":"407","severity":1,"message":"451","line":71,"column":11,"nodeType":"409","messageId":"410","endLine":71,"endColumn":29},{"ruleId":"420","severity":1,"message":"421","line":81,"column":38,"nodeType":"422","messageId":"423","endLine":81,"endColumn":40},{"ruleId":"420","severity":1,"message":"421","line":90,"column":28,"nodeType":"422","messageId":"423","endLine":90,"endColumn":30},{"ruleId":"420","severity":1,"message":"421","line":113,"column":42,"nodeType":"422","messageId":"423","endLine":113,"endColumn":44},{"ruleId":"420","severity":1,"message":"432","line":127,"column":61,"nodeType":"422","messageId":"423","endLine":127,"endColumn":63},{"ruleId":"420","severity":1,"message":"421","line":130,"column":37,"nodeType":"422","messageId":"423","endLine":130,"endColumn":39},{"ruleId":"420","severity":1,"message":"421","line":159,"column":36,"nodeType":"422","messageId":"423","endLine":159,"endColumn":38},{"ruleId":"420","severity":1,"message":"421","line":185,"column":36,"nodeType":"422","messageId":"423","endLine":185,"endColumn":38},{"ruleId":"420","severity":1,"message":"421","line":196,"column":55,"nodeType":"422","messageId":"423","endLine":196,"endColumn":57},{"ruleId":"420","severity":1,"message":"421","line":146,"column":40,"nodeType":"422","messageId":"423","endLine":146,"endColumn":42},{"ruleId":"420","severity":1,"message":"432","line":146,"column":61,"nodeType":"422","messageId":"423","endLine":146,"endColumn":63},{"ruleId":"420","severity":1,"message":"421","line":152,"column":43,"nodeType":"422","messageId":"423","endLine":152,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":153,"column":43,"nodeType":"422","messageId":"423","endLine":153,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":3,"column":47,"nodeType":"422","messageId":"423","endLine":3,"endColumn":49},{"ruleId":"452","severity":1,"message":"453","line":3,"column":63,"nodeType":"422","messageId":"454","endLine":3,"endColumn":64},{"ruleId":"452","severity":1,"message":"453","line":3,"column":69,"nodeType":"422","messageId":"454","endLine":3,"endColumn":70},{"ruleId":"407","severity":1,"message":"455","line":21,"column":7,"nodeType":"409","messageId":"410","endLine":21,"endColumn":14},{"ruleId":"420","severity":1,"message":"421","line":28,"column":39,"nodeType":"422","messageId":"423","endLine":28,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":88,"column":42,"nodeType":"422","messageId":"423","endLine":88,"endColumn":44},{"ruleId":"407","severity":1,"message":"456","line":147,"column":7,"nodeType":"409","messageId":"410","endLine":147,"endColumn":16},{"ruleId":"407","severity":1,"message":"449","line":6,"column":5,"nodeType":"409","messageId":"410","endLine":6,"endColumn":17},{"ruleId":"427","severity":1,"message":"428","line":157,"column":21,"nodeType":"429","endLine":157,"endColumn":71},{"ruleId":"420","severity":1,"message":"421","line":161,"column":52,"nodeType":"422","messageId":"423","endLine":161,"endColumn":54},{"ruleId":"420","severity":1,"message":"421","line":167,"column":52,"nodeType":"422","messageId":"423","endLine":167,"endColumn":54},{"ruleId":"407","severity":1,"message":"448","line":59,"column":7,"nodeType":"409","messageId":"410","endLine":59,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":198,"column":28,"nodeType":"422","messageId":"423","endLine":198,"endColumn":30},{"ruleId":"420","severity":1,"message":"421","line":63,"column":35,"nodeType":"422","messageId":"423","endLine":63,"endColumn":37},{"ruleId":"420","severity":1,"message":"421","line":66,"column":41,"nodeType":"422","messageId":"423","endLine":66,"endColumn":43},{"ruleId":"420","severity":1,"message":"421","line":68,"column":41,"nodeType":"422","messageId":"423","endLine":68,"endColumn":43},{"ruleId":"420","severity":1,"message":"421","line":70,"column":41,"nodeType":"422","messageId":"423","endLine":70,"endColumn":43},{"ruleId":"416","severity":1,"message":"417","line":59,"column":8,"nodeType":"418","endLine":59,"endColumn":10,"suggestions":"457"},{"ruleId":"420","severity":1,"message":"421","line":64,"column":38,"nodeType":"422","messageId":"423","endLine":64,"endColumn":40},{"ruleId":"416","severity":1,"message":"458","line":88,"column":7,"nodeType":"418","endLine":88,"endColumn":26,"suggestions":"459"},{"ruleId":"420","severity":1,"message":"421","line":96,"column":37,"nodeType":"422","messageId":"423","endLine":96,"endColumn":39},{"ruleId":"420","severity":1,"message":"421","line":99,"column":43,"nodeType":"422","messageId":"423","endLine":99,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":102,"column":43,"nodeType":"422","messageId":"423","endLine":102,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":113,"column":65,"nodeType":"422","messageId":"423","endLine":113,"endColumn":67},{"ruleId":"420","severity":1,"message":"421","line":121,"column":65,"nodeType":"422","messageId":"423","endLine":121,"endColumn":67},{"ruleId":"420","severity":1,"message":"421","line":131,"column":57,"nodeType":"422","messageId":"423","endLine":131,"endColumn":59},{"ruleId":"420","severity":1,"message":"421","line":133,"column":47,"nodeType":"422","messageId":"423","endLine":133,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":142,"column":25,"nodeType":"422","messageId":"423","endLine":142,"endColumn":27},{"ruleId":"420","severity":1,"message":"421","line":159,"column":49,"nodeType":"422","messageId":"423","endLine":159,"endColumn":51},{"ruleId":"420","severity":1,"message":"421","line":164,"column":54,"nodeType":"422","messageId":"423","endLine":164,"endColumn":56},{"ruleId":"420","severity":1,"message":"421","line":167,"column":54,"nodeType":"422","messageId":"423","endLine":167,"endColumn":56},{"ruleId":"420","severity":1,"message":"421","line":170,"column":54,"nodeType":"422","messageId":"423","endLine":170,"endColumn":56},{"ruleId":"420","severity":1,"message":"421","line":173,"column":54,"nodeType":"422","messageId":"423","endLine":173,"endColumn":56},{"ruleId":"407","severity":1,"message":"460","line":2,"column":8,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"420","severity":1,"message":"421","line":16,"column":38,"nodeType":"422","messageId":"423","endLine":16,"endColumn":40},{"ruleId":"420","severity":1,"message":"421","line":22,"column":41,"nodeType":"422","messageId":"423","endLine":22,"endColumn":43},{"ruleId":"407","severity":1,"message":"461","line":10,"column":10,"nodeType":"409","messageId":"410","endLine":10,"endColumn":24},{"ruleId":"407","severity":1,"message":"462","line":10,"column":26,"nodeType":"409","messageId":"410","endLine":10,"endColumn":47},{"ruleId":"407","severity":1,"message":"463","line":11,"column":10,"nodeType":"409","messageId":"410","endLine":11,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":33,"column":8,"nodeType":"418","endLine":33,"endColumn":10,"suggestions":"464"},{"ruleId":"420","severity":1,"message":"421","line":38,"column":38,"nodeType":"422","messageId":"423","endLine":38,"endColumn":40},{"ruleId":"407","severity":1,"message":"465","line":53,"column":12,"nodeType":"409","messageId":"410","endLine":53,"endColumn":19},{"ruleId":"407","severity":1,"message":"466","line":53,"column":21,"nodeType":"409","messageId":"410","endLine":53,"endColumn":31},{"ruleId":"407","severity":1,"message":"467","line":60,"column":29,"nodeType":"409","messageId":"410","endLine":60,"endColumn":47},{"ruleId":"416","severity":1,"message":"458","line":91,"column":8,"nodeType":"418","endLine":91,"endColumn":27,"suggestions":"468"},{"ruleId":"420","severity":1,"message":"421","line":98,"column":50,"nodeType":"422","messageId":"423","endLine":98,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":109,"column":50,"nodeType":"422","messageId":"423","endLine":109,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":118,"column":50,"nodeType":"422","messageId":"423","endLine":118,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":129,"column":46,"nodeType":"422","messageId":"423","endLine":129,"endColumn":48},{"ruleId":"420","severity":1,"message":"421","line":139,"column":46,"nodeType":"422","messageId":"423","endLine":139,"endColumn":48},{"ruleId":"420","severity":1,"message":"421","line":148,"column":50,"nodeType":"422","messageId":"423","endLine":148,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":157,"column":46,"nodeType":"422","messageId":"423","endLine":157,"endColumn":48},{"ruleId":"420","severity":1,"message":"421","line":183,"column":46,"nodeType":"422","messageId":"423","endLine":183,"endColumn":48},{"ruleId":"420","severity":1,"message":"421","line":207,"column":63,"nodeType":"422","messageId":"423","endLine":207,"endColumn":65},{"ruleId":"420","severity":1,"message":"421","line":235,"column":71,"nodeType":"422","messageId":"423","endLine":235,"endColumn":73},{"ruleId":"420","severity":1,"message":"421","line":248,"column":69,"nodeType":"422","messageId":"423","endLine":248,"endColumn":71},{"ruleId":"407","severity":1,"message":"469","line":255,"column":21,"nodeType":"409","messageId":"410","endLine":255,"endColumn":30},{"ruleId":"420","severity":1,"message":"421","line":317,"column":42,"nodeType":"422","messageId":"423","endLine":317,"endColumn":44},{"ruleId":"470","severity":1,"message":"471","line":318,"column":76,"nodeType":"472","messageId":"473","endLine":318,"endColumn":103,"fix":"474"},{"ruleId":"470","severity":1,"message":"475","line":330,"column":64,"nodeType":"472","messageId":"473","endLine":330,"endColumn":84,"fix":"476"},{"ruleId":"420","severity":1,"message":"421","line":342,"column":65,"nodeType":"422","messageId":"423","endLine":342,"endColumn":67},{"ruleId":"420","severity":1,"message":"421","line":371,"column":42,"nodeType":"422","messageId":"423","endLine":371,"endColumn":44},{"ruleId":"470","severity":1,"message":"471","line":372,"column":82,"nodeType":"472","messageId":"473","endLine":372,"endColumn":109,"fix":"477"},{"ruleId":"470","severity":1,"message":"478","line":384,"column":70,"nodeType":"472","messageId":"473","endLine":384,"endColumn":84,"fix":"479"},{"ruleId":"407","severity":1,"message":"480","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":18},{"ruleId":"420","severity":1,"message":"421","line":18,"column":40,"nodeType":"422","messageId":"423","endLine":18,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":20,"column":47,"nodeType":"422","messageId":"423","endLine":20,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":44,"column":40,"nodeType":"422","messageId":"423","endLine":44,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":47,"column":47,"nodeType":"422","messageId":"423","endLine":47,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":49,"column":47,"nodeType":"422","messageId":"423","endLine":49,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":51,"column":47,"nodeType":"422","messageId":"423","endLine":51,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":75,"column":40,"nodeType":"422","messageId":"423","endLine":75,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":78,"column":47,"nodeType":"422","messageId":"423","endLine":78,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":80,"column":47,"nodeType":"422","messageId":"423","endLine":80,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":82,"column":47,"nodeType":"422","messageId":"423","endLine":82,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":122,"column":40,"nodeType":"422","messageId":"423","endLine":122,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":124,"column":47,"nodeType":"422","messageId":"423","endLine":124,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":148,"column":40,"nodeType":"422","messageId":"423","endLine":148,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":151,"column":47,"nodeType":"422","messageId":"423","endLine":151,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":153,"column":47,"nodeType":"422","messageId":"423","endLine":153,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":155,"column":47,"nodeType":"422","messageId":"423","endLine":155,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":179,"column":40,"nodeType":"422","messageId":"423","endLine":179,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":182,"column":47,"nodeType":"422","messageId":"423","endLine":182,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":184,"column":47,"nodeType":"422","messageId":"423","endLine":184,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":186,"column":47,"nodeType":"422","messageId":"423","endLine":186,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":210,"column":40,"nodeType":"422","messageId":"423","endLine":210,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":213,"column":47,"nodeType":"422","messageId":"423","endLine":213,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":215,"column":47,"nodeType":"422","messageId":"423","endLine":215,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":217,"column":47,"nodeType":"422","messageId":"423","endLine":217,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":241,"column":40,"nodeType":"422","messageId":"423","endLine":241,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":244,"column":47,"nodeType":"422","messageId":"423","endLine":244,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":246,"column":47,"nodeType":"422","messageId":"423","endLine":246,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":248,"column":47,"nodeType":"422","messageId":"423","endLine":248,"endColumn":49},{"ruleId":"420","severity":1,"message":"421","line":272,"column":40,"nodeType":"422","messageId":"423","endLine":272,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":274,"column":47,"nodeType":"422","messageId":"423","endLine":274,"endColumn":49},{"ruleId":"407","severity":1,"message":"444","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":14},{"ruleId":"407","severity":1,"message":"480","line":1,"column":10,"nodeType":"409","messageId":"410","endLine":1,"endColumn":18},{"ruleId":"407","severity":1,"message":"424","line":1,"column":20,"nodeType":"409","messageId":"410","endLine":1,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":13},{"ruleId":"416","severity":1,"message":"481","line":65,"column":8,"nodeType":"418","endLine":65,"endColumn":25,"suggestions":"482"},{"ruleId":"483","severity":1,"message":"484","line":204,"column":59,"nodeType":"422","messageId":"485","endLine":204,"endColumn":60},{"ruleId":"420","severity":1,"message":"421","line":211,"column":65,"nodeType":"422","messageId":"423","endLine":211,"endColumn":67},{"ruleId":"420","severity":1,"message":"421","line":212,"column":79,"nodeType":"422","messageId":"423","endLine":212,"endColumn":81},{"ruleId":"407","severity":1,"message":"480","line":1,"column":10,"nodeType":"409","messageId":"410","endLine":1,"endColumn":18},{"ruleId":"407","severity":1,"message":"424","line":1,"column":20,"nodeType":"409","messageId":"410","endLine":1,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":13},{"ruleId":"416","severity":1,"message":"481","line":89,"column":8,"nodeType":"418","endLine":89,"endColumn":25,"suggestions":"486"},{"ruleId":"483","severity":1,"message":"484","line":230,"column":59,"nodeType":"422","messageId":"485","endLine":230,"endColumn":60},{"ruleId":"420","severity":1,"message":"421","line":237,"column":65,"nodeType":"422","messageId":"423","endLine":237,"endColumn":67},{"ruleId":"420","severity":1,"message":"421","line":238,"column":79,"nodeType":"422","messageId":"423","endLine":238,"endColumn":81},{"ruleId":"407","severity":1,"message":"480","line":7,"column":10,"nodeType":"409","messageId":"410","endLine":7,"endColumn":18},{"ruleId":"420","severity":1,"message":"421","line":48,"column":41,"nodeType":"422","messageId":"423","endLine":48,"endColumn":43},{"ruleId":"407","severity":1,"message":"460","line":1,"column":8,"nodeType":"409","messageId":"410","endLine":1,"endColumn":14},{"ruleId":"416","severity":1,"message":"487","line":31,"column":8,"nodeType":"418","endLine":31,"endColumn":18,"suggestions":"488"},{"ruleId":"416","severity":1,"message":"489","line":67,"column":7,"nodeType":"418","endLine":67,"endColumn":21,"suggestions":"490"},{"ruleId":"420","severity":1,"message":"421","line":78,"column":50,"nodeType":"422","messageId":"423","endLine":78,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":86,"column":50,"nodeType":"422","messageId":"423","endLine":86,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":104,"column":58,"nodeType":"422","messageId":"423","endLine":104,"endColumn":60},{"ruleId":"407","severity":1,"message":"449","line":6,"column":5,"nodeType":"409","messageId":"410","endLine":6,"endColumn":17},{"ruleId":"427","severity":1,"message":"428","line":158,"column":21,"nodeType":"429","endLine":158,"endColumn":71},{"ruleId":"420","severity":1,"message":"421","line":162,"column":52,"nodeType":"422","messageId":"423","endLine":162,"endColumn":54},{"ruleId":"420","severity":1,"message":"421","line":168,"column":52,"nodeType":"422","messageId":"423","endLine":168,"endColumn":54},{"ruleId":"420","severity":1,"message":"421","line":51,"column":55,"nodeType":"422","messageId":"423","endLine":51,"endColumn":57},{"ruleId":"420","severity":1,"message":"421","line":54,"column":41,"nodeType":"422","messageId":"423","endLine":54,"endColumn":43},{"ruleId":"407","severity":1,"message":"433","line":1,"column":10,"nodeType":"409","messageId":"410","endLine":1,"endColumn":19},{"ruleId":"407","severity":1,"message":"491","line":164,"column":12,"nodeType":"409","messageId":"410","endLine":164,"endColumn":19},{"ruleId":"407","severity":1,"message":"492","line":164,"column":21,"nodeType":"409","messageId":"410","endLine":164,"endColumn":31},{"ruleId":"420","severity":1,"message":"421","line":48,"column":41,"nodeType":"422","messageId":"423","endLine":48,"endColumn":43},{"ruleId":"407","severity":1,"message":"460","line":1,"column":8,"nodeType":"409","messageId":"410","endLine":1,"endColumn":14},{"ruleId":"407","severity":1,"message":"424","line":2,"column":31,"nodeType":"409","messageId":"410","endLine":2,"endColumn":37},{"ruleId":"416","severity":1,"message":"458","line":46,"column":7,"nodeType":"418","endLine":46,"endColumn":17,"suggestions":"493"},{"ruleId":"420","severity":1,"message":"421","line":55,"column":54,"nodeType":"422","messageId":"423","endLine":55,"endColumn":56},{"ruleId":"420","severity":1,"message":"421","line":58,"column":58,"nodeType":"422","messageId":"423","endLine":58,"endColumn":60},{"ruleId":"407","severity":1,"message":"494","line":3,"column":8,"nodeType":"409","messageId":"410","endLine":3,"endColumn":21},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["495"],"no-negated-in-lhs",["496"],"'$' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCheckLoged'. Either include it or remove the dependency array.","ArrayExpression",["497"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'LineBreaker1' is assigned a value but never used.","'Slider' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ContainerSubTitle' is assigned a value but never used.","'CardBox' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'setProducts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setLinkList' is assigned a value but never used.","'ButtonEl' is assigned a value but never used.","'setCompanyInfo' is assigned a value but never used.",["495"],["496"],"'Link' is defined but never used.","'IntroduceBodyTitle' is assigned a value but never used.","'memo' is defined but never used.","'useCallback' is defined but never used.","'ExplainEl' is assigned a value but never used.","'faCaretRight' is defined but never used.",["498"],"'handleLogoutSubmit' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","'ItemBox' is assigned a value but never used.","'ItemTitle' is assigned a value but never used.",["499"],"React Hook useEffect has a missing dependency: '__handleDataConnect'. Either include it or remove the dependency array.",["500"],"'styled' is defined but never used.","'dateToYYYYMMDD' is defined but never used.","'dateToYYYYMMDD_hhmmss' is defined but never used.","'handleScrollToTop' is defined but never used.",["501"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setAddCategoryName' is assigned a value but never used.",["502"],"'pageIndex' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['imageUrl'] found.","Property","unnecessarilyComputedProperty",{"range":"503","text":"504"},"Unnecessarily computed property ['editorData'] found.",{"range":"505","text":"506"},{"range":"507","text":"504"},"Unnecessarily computed property ['desc'] found.",{"range":"508","text":"509"},"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleScrollToMe'. Either include it or remove the dependency array.",["510"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["511"],"React Hook useEffect has a missing dependency: 'query.pageIndex'. Either include it or remove the dependency array.",["512"],"React Hook useEffect has a missing dependency: 'handleSetSelectedCategory'. Either include it or remove the dependency array.",["513"],"'product' is assigned a value but never used.","'setProduct' is assigned a value but never used.",["514"],"'ClassicEditor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"515","fix":"516"},{"desc":"515","fix":"517"},{"desc":"515","fix":"518"},{"desc":"519","fix":"520"},{"desc":"515","fix":"521"},{"desc":"519","fix":"522"},[12092,12104],"'imageUrl'",[12442,12456],"'editorData'",[14276,14288],[14635,14643],"'desc'",{"desc":"523","fix":"524"},{"desc":"523","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},"Update the dependencies array to be: [handleCheckLoged]",{"range":"532","text":"533"},{"range":"534","text":"533"},{"range":"535","text":"533"},"Update the dependencies array to be: [__handleDataConnect, isLoged, location]",{"range":"536","text":"537"},{"range":"538","text":"533"},{"range":"539","text":"537"},"Update the dependencies array to be: [handleScrollToMe, props.modalOpen]",{"range":"540","text":"541"},{"range":"542","text":"541"},"Update the dependencies array to be: [location, query.pageIndex]",{"range":"543","text":"544"},"Update the dependencies array to be: [categoryList, handleSetSelectedCategory]",{"range":"545","text":"546"},"Update the dependencies array to be: [__handleDataConnect, location]",{"range":"547","text":"548"},[712,714],"[handleCheckLoged]",[1061,1063],[1467,1469],[2260,2279],"[__handleDataConnect, isLoged, location]",[1131,1133],[3089,3108],[1658,1675],"[handleScrollToMe, props.modalOpen]",[2548,2565],[1056,1066],"[location, query.pageIndex]",[2061,2075],"[categoryList, handleSetSelectedCategory]",[1427,1437],"[__handleDataConnect, location]"]